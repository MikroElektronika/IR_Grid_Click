;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3.7.2018. 14:57:03
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x340D0000  	13325
0x0008	0x32C10000  	12993
0x000C	0x32C10000  	12993
0x0010	0x32C10000  	12993
0x0014	0x32C10000  	12993
0x0018	0x32C10000  	12993
0x001C	0x32C10000  	12993
0x0020	0x32C10000  	12993
0x0024	0x32C10000  	12993
0x0028	0x32C10000  	12993
0x002C	0x32C10000  	12993
0x0030	0x32C10000  	12993
0x0034	0x32C10000  	12993
0x0038	0x32C10000  	12993
0x003C	0x32C10000  	12993
0x0040	0x32C10000  	12993
0x0044	0x32C10000  	12993
0x0048	0x32C10000  	12993
0x004C	0x32C10000  	12993
0x0050	0x32C10000  	12993
0x0054	0x32C10000  	12993
0x0058	0x32C10000  	12993
0x005C	0x32C10000  	12993
0x0060	0x32C10000  	12993
0x0064	0x32C10000  	12993
0x0068	0x32C10000  	12993
0x006C	0x32C10000  	12993
0x0070	0x32C10000  	12993
0x0074	0x32C10000  	12993
0x0078	0x32C10000  	12993
0x007C	0x32C10000  	12993
0x0080	0x32C10000  	12993
0x0084	0x32C10000  	12993
0x0088	0x32C10000  	12993
0x008C	0x32C10000  	12993
0x0090	0x32C10000  	12993
0x0094	0x32C10000  	12993
0x0098	0x32C10000  	12993
0x009C	0x32C10000  	12993
0x00A0	0x32C10000  	12993
0x00A4	0x32C10000  	12993
0x00A8	0x32C10000  	12993
0x00AC	0x32C10000  	12993
0x00B0	0x32C10000  	12993
0x00B4	0x32C10000  	12993
0x00B8	0x32C10000  	12993
0x00BC	0x32C10000  	12993
0x00C0	0x32C10000  	12993
0x00C4	0x32C10000  	12993
0x00C8	0x32C10000  	12993
0x00CC	0x32C10000  	12993
0x00D0	0x32C10000  	12993
0x00D4	0x32C10000  	12993
0x00D8	0x32C10000  	12993
0x00DC	0x32C10000  	12993
0x00E0	0x32C10000  	12993
0x00E4	0x32C10000  	12993
0x00E8	0x32C10000  	12993
0x00EC	0x32C10000  	12993
0x00F0	0x32C10000  	12993
0x00F4	0x32C10000  	12993
0x00F8	0x32C10000  	12993
0x00FC	0x32C10000  	12993
0x0100	0x32C10000  	12993
0x0104	0x32C10000  	12993
0x0108	0x32C10000  	12993
0x010C	0x32C10000  	12993
0x0110	0x32C10000  	12993
0x0114	0x32C10000  	12993
0x0118	0x32C10000  	12993
0x011C	0x32C10000  	12993
0x0120	0x32C10000  	12993
0x0124	0x32C10000  	12993
0x0128	0x32C10000  	12993
0x012C	0x32C10000  	12993
0x0130	0x32C10000  	12993
0x0134	0x32C10000  	12993
0x0138	0x32C10000  	12993
0x013C	0x32C10000  	12993
0x0140	0x32C10000  	12993
0x0144	0x32C10000  	12993
0x0148	0x32C10000  	12993
0x014C	0x32C10000  	12993
; end of ____SysVT
_main:
;Click_IR_Grid_STM.c, 80 :: 		void main()
0x340C	0xF7FFFF5C  BL	13000
0x3410	0xF000F9C2  BL	14232
0x3414	0xF7FFFF4A  BL	12972
0x3418	0xF000F970  BL	14076
;Click_IR_Grid_STM.c, 82 :: 		systemInit();
0x341C	0xF7FFFE8C  BL	_systemInit+0
;Click_IR_Grid_STM.c, 83 :: 		applicationInit();
0x3420	0xF7FFFE5E  BL	_applicationInit+0
;Click_IR_Grid_STM.c, 85 :: 		while (1)
L_main13:
;Click_IR_Grid_STM.c, 87 :: 		applicationTask();
0x3424	0xF7FFFEA8  BL	_applicationTask+0
;Click_IR_Grid_STM.c, 88 :: 		}
0x3428	0xE7FC    B	L_main13
;Click_IR_Grid_STM.c, 89 :: 		}
L_end_main:
L__main_end_loop:
0x342A	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x325C	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x325E	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x3262	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x3266	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x326A	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x326C	0xB001    ADD	SP, SP, #4
0x326E	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x3270	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x3272	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x3276	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x327A	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x327E	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x3280	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x3284	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x3286	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x3288	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x328A	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x328E	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x3292	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x3294	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x3298	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x329A	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x329C	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x32A0	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x32A4	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x32A6	0xB001    ADD	SP, SP, #4
0x32A8	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_IR_Grid_STM.c, 32 :: 		void systemInit()
0x3138	0xB081    SUB	SP, SP, #4
0x313A	0xF8CDE000  STR	LR, [SP, #0]
;Click_IR_Grid_STM.c, 34 :: 		mikrobus_i2cInit( _MIKROBUS1, &_IRGRID_I2C_CFG[ 0 ] );
0x313E	0x480C    LDR	R0, [PC, #48]
0x3140	0x4601    MOV	R1, R0
0x3142	0x2000    MOVS	R0, #0
0x3144	0xF7FFFF7E  BL	_mikrobus_i2cInit+0
;Click_IR_Grid_STM.c, 35 :: 		mikrobus_logInit( _LOG_USBUART_A, 115200 );
0x3148	0xF44F31E1  MOV	R1, #115200
0x314C	0x2020    MOVS	R0, #32
0x314E	0xF7FFFF39  BL	_mikrobus_logInit+0
;Click_IR_Grid_STM.c, 36 :: 		Delay_ms( 100 );
0x3152	0xF644777F  MOVW	R7, #20351
0x3156	0xF2C00712  MOVT	R7, #18
L_systemInit0:
0x315A	0x1E7F    SUBS	R7, R7, #1
0x315C	0xD1FD    BNE	L_systemInit0
0x315E	0xBF00    NOP
0x3160	0xBF00    NOP
0x3162	0xBF00    NOP
0x3164	0xBF00    NOP
0x3166	0xBF00    NOP
;Click_IR_Grid_STM.c, 37 :: 		}
L_end_systemInit:
0x3168	0xF8DDE000  LDR	LR, [SP, #0]
0x316C	0xB001    ADD	SP, SP, #4
0x316E	0x4770    BX	LR
0x3170	0x31740000  	__IRGRID_I2C_CFG+0
; end of _systemInit
_mikrobus_i2cInit:
;easymx_v7_STM32F107VC.c, 222 :: 		T_mikrobus_ret mikrobus_i2cInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x3044	0xB081    SUB	SP, SP, #4
0x3046	0xF8CDE000  STR	LR, [SP, #0]
0x304A	0x468B    MOV	R11, R1
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 44 (R11)
;easymx_v7_STM32F107VC.c, 224 :: 		switch( bus )
0x304C	0xE009    B	L_mikrobus_i2cInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 227 :: 		case _MIKROBUS1 : return _i2cInit_1( cfg );
L_mikrobus_i2cInit85:
0x304E	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x3050	0xF7FFFDF2  BL	easymx_v7_STM32F107VC__i2cInit_1+0
0x3054	0xE00A    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 230 :: 		case _MIKROBUS2 : return _i2cInit_2( cfg );
L_mikrobus_i2cInit86:
; cfg start address is: 44 (R11)
0x3056	0x4658    MOV	R0, R11
; cfg end address is: 44 (R11)
0x3058	0xF7FFFD4C  BL	easymx_v7_STM32F107VC__i2cInit_2+0
0x305C	0xE006    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 244 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_i2cInit87:
0x305E	0x2001    MOVS	R0, #1
0x3060	0xE004    B	L_end_mikrobus_i2cInit
;easymx_v7_STM32F107VC.c, 245 :: 		}
L_mikrobus_i2cInit83:
; cfg start address is: 44 (R11)
; bus start address is: 0 (R0)
0x3062	0x2800    CMP	R0, #0
0x3064	0xD0F3    BEQ	L_mikrobus_i2cInit85
0x3066	0x2801    CMP	R0, #1
0x3068	0xD0F5    BEQ	L_mikrobus_i2cInit86
; bus end address is: 0 (R0)
; cfg end address is: 44 (R11)
0x306A	0xE7F8    B	L_mikrobus_i2cInit87
;easymx_v7_STM32F107VC.c, 248 :: 		}
L_end_mikrobus_i2cInit:
0x306C	0xF8DDE000  LDR	LR, [SP, #0]
0x3070	0xB001    ADD	SP, SP, #4
0x3072	0x4770    BX	LR
; end of _mikrobus_i2cInit
easymx_v7_STM32F107VC__i2cInit_1:
;__em_f107vc_i2c.c, 29 :: 		static T_mikrobus_ret _i2cInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x2C38	0xB081    SUB	SP, SP, #4
0x2C3A	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 31 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x2C3E	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x2C40	0x4608    MOV	R0, R1
0x2C42	0x4904    LDR	R1, [PC, #16]
0x2C44	0xF7FFF930  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 32 :: 		return _MIKROBUS_OK;
0x2C48	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 33 :: 		}
L_end__i2cInit_1:
0x2C4A	0xF8DDE000  LDR	LR, [SP, #0]
0x2C4E	0xB001    ADD	SP, SP, #4
0x2C50	0x4770    BX	LR
0x2C52	0xBF00    NOP
0x2C54	0x35040000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_1
_I2C1_Init_Advanced:
;__Lib_I2C_12.c, 544 :: 		
; module start address is: 4 (R1)
; I2C_ClockSpeed start address is: 0 (R0)
0x1EA8	0xB081    SUB	SP, SP, #4
0x1EAA	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 4 (R1)
; I2C_ClockSpeed end address is: 0 (R0)
; I2C_ClockSpeed start address is: 0 (R0)
; module start address is: 4 (R1)
;__Lib_I2C_12.c, 545 :: 		
0x1EAE	0x460A    MOV	R2, R1
; module end address is: 4 (R1)
0x1EB0	0x4601    MOV	R1, R0
; I2C_ClockSpeed end address is: 0 (R0)
0x1EB2	0x4803    LDR	R0, [PC, #12]
0x1EB4	0xF7FFF964  BL	_I2Cx_Init_Advanced+0
;__Lib_I2C_12.c, 546 :: 		
L_end_I2C1_Init_Advanced:
0x1EB8	0xF8DDE000  LDR	LR, [SP, #0]
0x1EBC	0xB001    ADD	SP, SP, #4
0x1EBE	0x4770    BX	LR
0x1EC0	0x54004000  	I2C1_CR1+0
; end of _I2C1_Init_Advanced
_I2Cx_Init_Advanced:
;__Lib_I2C_12.c, 591 :: 		
; module start address is: 8 (R2)
; I2C_ClockSpeed start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x1180	0xB088    SUB	SP, SP, #32
0x1182	0xF8CDE000  STR	LR, [SP, #0]
0x1186	0x460E    MOV	R6, R1
; module end address is: 8 (R2)
; I2C_ClockSpeed end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; I2C_ClockSpeed start address is: 24 (R6)
; module start address is: 8 (R2)
;__Lib_I2C_12.c, 593 :: 		
;__Lib_I2C_12.c, 600 :: 		
0x1188	0x4B55    LDR	R3, [PC, #340]
0x118A	0x4298    CMP	R0, R3
0x118C	0xD10D    BNE	L_I2Cx_Init_Advanced112
;__Lib_I2C_12.c, 601 :: 		
0x118E	0x2401    MOVS	R4, #1
0x1190	0xB264    SXTB	R4, R4
0x1192	0x4B54    LDR	R3, [PC, #336]
0x1194	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 602 :: 		
0x1196	0x4C54    LDR	R4, [PC, #336]
0x1198	0x4B54    LDR	R3, [PC, #336]
0x119A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 603 :: 		
0x119C	0x4C54    LDR	R4, [PC, #336]
0x119E	0x4B55    LDR	R3, [PC, #340]
0x11A0	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 604 :: 		
0x11A2	0x4C55    LDR	R4, [PC, #340]
0x11A4	0x4B55    LDR	R3, [PC, #340]
0x11A6	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 605 :: 		
0x11A8	0xE00F    B	L_I2Cx_Init_Advanced113
L_I2Cx_Init_Advanced112:
;__Lib_I2C_12.c, 606 :: 		
0x11AA	0x4B55    LDR	R3, [PC, #340]
0x11AC	0x4298    CMP	R0, R3
0x11AE	0xD10C    BNE	L_I2Cx_Init_Advanced114
;__Lib_I2C_12.c, 607 :: 		
0x11B0	0x2401    MOVS	R4, #1
0x11B2	0xB264    SXTB	R4, R4
0x11B4	0x4B53    LDR	R3, [PC, #332]
0x11B6	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 608 :: 		
0x11B8	0x4C53    LDR	R4, [PC, #332]
0x11BA	0x4B4C    LDR	R3, [PC, #304]
0x11BC	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 609 :: 		
0x11BE	0x4C53    LDR	R4, [PC, #332]
0x11C0	0x4B4C    LDR	R3, [PC, #304]
0x11C2	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 610 :: 		
0x11C4	0x4C52    LDR	R4, [PC, #328]
0x11C6	0x4B4D    LDR	R3, [PC, #308]
0x11C8	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 611 :: 		
L_I2Cx_Init_Advanced114:
L_I2Cx_Init_Advanced113:
;__Lib_I2C_12.c, 612 :: 		
0x11CA	0x9601    STR	R6, [SP, #4]
; module end address is: 8 (R2)
0x11CC	0x9002    STR	R0, [SP, #8]
0x11CE	0x4610    MOV	R0, R2
0x11D0	0xF7FFFEB8  BL	_GPIO_Alternate_Function_Enable+0
0x11D4	0x9802    LDR	R0, [SP, #8]
0x11D6	0x9E01    LDR	R6, [SP, #4]
;__Lib_I2C_12.c, 617 :: 		
0x11D8	0x1D03    ADDS	R3, R0, #4
0x11DA	0x681B    LDR	R3, [R3, #0]
;__Lib_I2C_12.c, 619 :: 		
0x11DC	0xB29C    UXTH	R4, R3
0x11DE	0xF06F033F  MVN	R3, #63
0x11E2	0xEA040303  AND	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x11E6	0xB29D    UXTH	R5, R3
;__Lib_I2C_12.c, 621 :: 		
0x11E8	0xAB03    ADD	R3, SP, #12
0x11EA	0x9001    STR	R0, [SP, #4]
0x11EC	0x4618    MOV	R0, R3
0x11EE	0xF7FFFE55  BL	_RCC_GetClocksFrequency+0
0x11F2	0x9801    LDR	R0, [SP, #4]
;__Lib_I2C_12.c, 622 :: 		
; pclk1 start address is: 28 (R7)
0x11F4	0x9F05    LDR	R7, [SP, #20]
;__Lib_I2C_12.c, 624 :: 		
0x11F6	0x9C05    LDR	R4, [SP, #20]
0x11F8	0x4B46    LDR	R3, [PC, #280]
0x11FA	0xFBB4F3F3  UDIV	R3, R4, R3
; freqrange start address is: 4 (R1)
0x11FE	0xB299    UXTH	R1, R3
;__Lib_I2C_12.c, 625 :: 		
0x1200	0xB29B    UXTH	R3, R3
0x1202	0xEA450403  ORR	R4, R5, R3, LSL #0
0x1206	0xB2A4    UXTH	R4, R4
; tmpreg end address is: 20 (R5)
;__Lib_I2C_12.c, 627 :: 		
0x1208	0x1D03    ADDS	R3, R0, #4
0x120A	0x601C    STR	R4, [R3, #0]
;__Lib_I2C_12.c, 631 :: 		
0x120C	0x2400    MOVS	R4, #0
0x120E	0x6803    LDR	R3, [R0, #0]
0x1210	0xF3640300  BFI	R3, R4, #0, #1
0x1214	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 634 :: 		
; tmpreg start address is: 8 (R2)
0x1216	0x2200    MOVS	R2, #0
;__Lib_I2C_12.c, 637 :: 		
0x1218	0x4B3F    LDR	R3, [PC, #252]
0x121A	0x429E    CMP	R6, R3
0x121C	0xD812    BHI	L_I2Cx_Init_Advanced115
;__Lib_I2C_12.c, 640 :: 		
0x121E	0x0073    LSLS	R3, R6, #1
; I2C_ClockSpeed end address is: 24 (R6)
0x1220	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1224	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 642 :: 		
0x1226	0x2C04    CMP	R4, #4
0x1228	0xD202    BCS	L__I2Cx_Init_Advanced144
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 645 :: 		
; result start address is: 12 (R3)
0x122A	0x2304    MOVS	R3, #4
; result end address is: 12 (R3)
0x122C	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 646 :: 		
0x122E	0xE7FF    B	L_I2Cx_Init_Advanced116
L__I2Cx_Init_Advanced144:
;__Lib_I2C_12.c, 642 :: 		
;__Lib_I2C_12.c, 646 :: 		
L_I2Cx_Init_Advanced116:
;__Lib_I2C_12.c, 648 :: 		
; result start address is: 16 (R4)
0x1230	0xEA420304  ORR	R3, R2, R4, LSL #0
; result end address is: 16 (R4)
0x1234	0xB29A    UXTH	R2, R3
;__Lib_I2C_12.c, 650 :: 		
0x1236	0xF2000420  ADDW	R4, R0, #32
0x123A	0x1C4B    ADDS	R3, R1, #1
0x123C	0xB29B    UXTH	R3, R3
; freqrange end address is: 4 (R1)
0x123E	0x6023    STR	R3, [R4, #0]
;__Lib_I2C_12.c, 651 :: 		
0x1240	0xB291    UXTH	R1, R2
0x1242	0xE03F    B	L_I2Cx_Init_Advanced117
L_I2Cx_Init_Advanced115:
;__Lib_I2C_12.c, 656 :: 		
; freqrange start address is: 4 (R1)
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x1244	0x2303    MOVS	R3, #3
0x1246	0xFB06F403  MUL	R4, R6, R3
0x124A	0xFBB7F3F4  UDIV	R3, R7, R4
; result start address is: 32 (R8)
0x124E	0xFA1FF883  UXTH	R8, R3
;__Lib_I2C_12.c, 659 :: 		
0x1252	0x2319    MOVS	R3, #25
0x1254	0xFB06F503  MUL	R5, R6, R3
0x1258	0xFBB7F3F5  UDIV	R3, R7, R5
; result25 start address is: 36 (R9)
0x125C	0xFA1FF983  UXTH	R9, R3
;__Lib_I2C_12.c, 661 :: 		
0x1260	0xFB08F404  MUL	R4, R8, R4
; result end address is: 32 (R8)
;__Lib_I2C_12.c, 663 :: 		
0x1264	0xFB09F305  MUL	R3, R9, R5
; result25 end address is: 36 (R9)
;__Lib_I2C_12.c, 665 :: 		
0x1268	0x1B3C    SUB	R4, R7, R4
0x126A	0x1AFB    SUB	R3, R7, R3
0x126C	0x429C    CMP	R4, R3
0x126E	0xD205    BCS	L_I2Cx_Init_Advanced118
;__Lib_I2C_12.c, 666 :: 		
0x1270	0x2303    MOVS	R3, #3
0x1272	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x1274	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1278	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 667 :: 		
; result end address is: 16 (R4)
0x127A	0xE006    B	L_I2Cx_Init_Advanced119
L_I2Cx_Init_Advanced118:
;__Lib_I2C_12.c, 669 :: 		
; pclk1 start address is: 28 (R7)
; I2C_ClockSpeed start address is: 24 (R6)
0x127C	0x2319    MOVS	R3, #25
0x127E	0x4373    MULS	R3, R6, R3
; I2C_ClockSpeed end address is: 24 (R6)
0x1280	0xFBB7F4F3  UDIV	R4, R7, R3
; pclk1 end address is: 28 (R7)
; result start address is: 16 (R4)
0x1284	0xB2A4    UXTH	R4, R4
;__Lib_I2C_12.c, 670 :: 		
0x1286	0xF4444480  ORR	R4, R4, #16384
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 671 :: 		
L_I2Cx_Init_Advanced119:
;__Lib_I2C_12.c, 674 :: 		
; result start address is: 16 (R4)
0x128A	0xF64073FF  MOVW	R3, #4095
0x128E	0xEA040303  AND	R3, R4, R3, LSL #0
0x1292	0xB913    CBNZ	R3, L__I2Cx_Init_Advanced145
;__Lib_I2C_12.c, 677 :: 		
0x1294	0xF0440401  ORR	R4, R4, #1
; result end address is: 16 (R4)
;__Lib_I2C_12.c, 678 :: 		
0x1298	0xE7FF    B	L_I2Cx_Init_Advanced120
L__I2Cx_Init_Advanced145:
;__Lib_I2C_12.c, 674 :: 		
;__Lib_I2C_12.c, 678 :: 		
L_I2Cx_Init_Advanced120:
;__Lib_I2C_12.c, 680 :: 		
; result start address is: 16 (R4)
0x129A	0xF4444300  ORR	R3, R4, #32768
; result end address is: 16 (R4)
0x129E	0xB29B    UXTH	R3, R3
0x12A0	0x431A    ORRS	R2, R3
0x12A2	0xB292    UXTH	R2, R2
;__Lib_I2C_12.c, 682 :: 		
0x12A4	0xF2000520  ADDW	R5, R0, #32
0x12A8	0xF240132C  MOVW	R3, #300
0x12AC	0xFB01F403  MUL	R4, R1, R3
0x12B0	0xB2A4    UXTH	R4, R4
; freqrange end address is: 4 (R1)
0x12B2	0xF24033E8  MOVW	R3, #1000
0x12B6	0xFBB4F3F3  UDIV	R3, R4, R3
0x12BA	0xB29B    UXTH	R3, R3
0x12BC	0x1C5B    ADDS	R3, R3, #1
0x12BE	0xB29B    UXTH	R3, R3
0x12C0	0x602B    STR	R3, [R5, #0]
; tmpreg end address is: 8 (R2)
0x12C2	0xB291    UXTH	R1, R2
;__Lib_I2C_12.c, 683 :: 		
L_I2Cx_Init_Advanced117:
;__Lib_I2C_12.c, 685 :: 		
; tmpreg start address is: 4 (R1)
0x12C4	0xF200031C  ADDW	R3, R0, #28
0x12C8	0x6019    STR	R1, [R3, #0]
; tmpreg end address is: 4 (R1)
;__Lib_I2C_12.c, 687 :: 		
0x12CA	0x2300    MOVS	R3, #0
0x12CC	0x6003    STR	R3, [R0, #0]
;__Lib_I2C_12.c, 688 :: 		
0x12CE	0x2401    MOVS	R4, #1
0x12D0	0x6803    LDR	R3, [R0, #0]
0x12D2	0xF3640300  BFI	R3, R4, #0, #1
0x12D6	0x6003    STR	R3, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 689 :: 		
L_end_I2Cx_Init_Advanced:
0x12D8	0xF8DDE000  LDR	LR, [SP, #0]
0x12DC	0xB008    ADD	SP, SP, #32
0x12DE	0x4770    BX	LR
0x12E0	0x54004000  	I2C1_CR1+0
0x12E4	0x03D44242  	RCC_APB1ENR+0
0x12E8	0x17450000  	_I2C1_Start+0
0x12EC	0x076C2000  	_I2C_Start_Ptr+0
0x12F0	0x13C50000  	_I2C1_Read+0
0x12F4	0x07702000  	_I2C_Read_Ptr+0
0x12F8	0x13A10000  	_I2C1_Write+0
0x12FC	0x07742000  	_I2C_Write_Ptr+0
0x1300	0x58004000  	I2C2_CR1+0
0x1304	0x03D84242  	RCC_APB1ENR+0
0x1308	0x18610000  	_I2C2_Start+0
0x130C	0x14090000  	_I2C2_Read+0
0x1310	0x137D0000  	_I2C2_Write+0
0x1314	0x4240000F  	#1000000
0x1318	0x86A00001  	#100000
; end of _I2Cx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 452 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0E9C	0xB082    SUB	SP, SP, #8
0x0E9E	0xF8CDE000  STR	LR, [SP, #0]
0x0EA2	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 455 :: 		
0x0EA4	0x4619    MOV	R1, R3
0x0EA6	0x9101    STR	R1, [SP, #4]
0x0EA8	0xF7FFFB78  BL	_Get_Fosc_kHz+0
0x0EAC	0xF24031E8  MOVW	R1, #1000
0x0EB0	0xFB00F201  MUL	R2, R0, R1
0x0EB4	0x9901    LDR	R1, [SP, #4]
0x0EB6	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 458 :: 		
0x0EB8	0x491F    LDR	R1, [PC, #124]
0x0EBA	0x7809    LDRB	R1, [R1, #0]
0x0EBC	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x0EC0	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 459 :: 		
0x0EC2	0x491E    LDR	R1, [PC, #120]
0x0EC4	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0EC6	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0EC8	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 461 :: 		
0x0ECA	0x1D1A    ADDS	R2, R3, #4
0x0ECC	0x6819    LDR	R1, [R3, #0]
0x0ECE	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0ED0	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 463 :: 		
0x0ED2	0x4919    LDR	R1, [PC, #100]
0x0ED4	0x8809    LDRH	R1, [R1, #0]
0x0ED6	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x0EDA	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 464 :: 		
0x0EDC	0x4917    LDR	R1, [PC, #92]
0x0EDE	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0EE0	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0EE2	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 466 :: 		
0x0EE4	0xF2030208  ADDW	R2, R3, #8
0x0EE8	0x1D19    ADDS	R1, R3, #4
0x0EEA	0x6809    LDR	R1, [R1, #0]
0x0EEC	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0EEE	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 468 :: 		
0x0EF0	0x4911    LDR	R1, [PC, #68]
0x0EF2	0x8809    LDRH	R1, [R1, #0]
0x0EF4	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x0EF8	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 469 :: 		
0x0EFA	0x4910    LDR	R1, [PC, #64]
0x0EFC	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0EFE	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0F00	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 471 :: 		
0x0F02	0xF203020C  ADDW	R2, R3, #12
0x0F06	0x1D19    ADDS	R1, R3, #4
0x0F08	0x6809    LDR	R1, [R1, #0]
0x0F0A	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0F0C	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 473 :: 		
0x0F0E	0x490A    LDR	R1, [PC, #40]
0x0F10	0x8809    LDRH	R1, [R1, #0]
0x0F12	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x0F16	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 474 :: 		
0x0F18	0x4909    LDR	R1, [PC, #36]
0x0F1A	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0F1C	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x0F1E	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 476 :: 		
0x0F20	0xF2030210  ADDW	R2, R3, #16
0x0F24	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x0F28	0x6809    LDR	R1, [R1, #0]
0x0F2A	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x0F2E	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 477 :: 		
L_end_RCC_GetClocksFrequency:
0x0F30	0xF8DDE000  LDR	LR, [SP, #0]
0x0F34	0xB002    ADD	SP, SP, #8
0x0F36	0x4770    BX	LR
0x0F38	0x10044002  	RCC_CFGRbits+0
0x0F3C	0x36D00000  	__Lib_System_105_107_APBAHBPrescTable+0
0x0F40	0x36F80000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x059C	0x4801    LDR	R0, [PC, #4]
0x059E	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x05A0	0x4770    BX	LR
0x05A2	0xBF00    NOP
0x05A4	0x075C2000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x0F44	0xB081    SUB	SP, SP, #4
0x0F46	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x0F4A	0x2201    MOVS	R2, #1
0x0F4C	0xB252    SXTB	R2, R2
0x0F4E	0x493E    LDR	R1, [PC, #248]
0x0F50	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x0F52	0xF2000168  ADDW	R1, R0, #104
0x0F56	0x680B    LDR	R3, [R1, #0]
0x0F58	0xF06F6100  MVN	R1, #134217728
0x0F5C	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x0F60	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x0F62	0xF0036100  AND	R1, R3, #134217728
0x0F66	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x0F68	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x0F6A	0xF0024100  AND	R1, R2, #-2147483648
0x0F6E	0xF1B14F00  CMP	R1, #-2147483648
0x0F72	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x0F74	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0F76	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x0F78	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x0F7A	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0F7C	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x0F7E	0xF4042170  AND	R1, R4, #983040
0x0F82	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x0F84	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x0F86	0xF64F71FF  MOVW	R1, #65535
0x0F8A	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x0F8E	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x0F90	0xF4041140  AND	R1, R4, #3145728
0x0F94	0xF5B11F40  CMP	R1, #3145728
0x0F98	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x0F9A	0xF06F6170  MVN	R1, #251658240
0x0F9E	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x0FA2	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x0FA4	0x492A    LDR	R1, [PC, #168]
0x0FA6	0x680A    LDR	R2, [R1, #0]
0x0FA8	0xF06F6170  MVN	R1, #251658240
0x0FAC	0x400A    ANDS	R2, R1
0x0FAE	0x4928    LDR	R1, [PC, #160]
0x0FB0	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x0FB2	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x0FB4	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x0FB6	0xF4041180  AND	R1, R4, #1048576
0x0FBA	0xF5B11F80  CMP	R1, #1048576
0x0FBE	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0FC0	0xF04F0103  MOV	R1, #3
0x0FC4	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x0FC6	0x43C9    MVN	R1, R1
0x0FC8	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0FCC	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0FD0	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x0FD2	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x0FD4	0x0D61    LSRS	R1, R4, #21
0x0FD6	0x0109    LSLS	R1, R1, #4
0x0FD8	0xFA05F101  LSL	R1, R5, R1
0x0FDC	0x43C9    MVN	R1, R1
0x0FDE	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0FE0	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x0FE4	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x0FE6	0x0D61    LSRS	R1, R4, #21
0x0FE8	0x0109    LSLS	R1, R1, #4
0x0FEA	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x0FEE	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0FF0	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x0FF2	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x0FF6	0xF1B14F00  CMP	R1, #-2147483648
0x0FFA	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0FFC	0x4913    LDR	R1, [PC, #76]
0x0FFE	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x1000	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x1002	0x4913    LDR	R1, [PC, #76]
0x1004	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x1006	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x100A	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x100C	0xEA4F018A  LSL	R1, R10, #2
0x1010	0xEB090101  ADD	R1, R9, R1, LSL #0
0x1014	0x6809    LDR	R1, [R1, #0]
0x1016	0xF1B13FFF  CMP	R1, #-1
0x101A	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x101C	0xF1090134  ADD	R1, R9, #52
0x1020	0xEA4F038A  LSL	R3, R10, #2
0x1024	0x18C9    ADDS	R1, R1, R3
0x1026	0x6809    LDR	R1, [R1, #0]
0x1028	0x460A    MOV	R2, R1
0x102A	0xEB090103  ADD	R1, R9, R3, LSL #0
0x102E	0x6809    LDR	R1, [R1, #0]
0x1030	0x4608    MOV	R0, R1
0x1032	0x4611    MOV	R1, R2
0x1034	0xF7FFFAB8  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x1038	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x103C	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x103E	0xF8DDE000  LDR	LR, [SP, #0]
0x1042	0xB001    ADD	SP, SP, #4
0x1044	0x4770    BX	LR
0x1046	0xBF00    NOP
0x1048	0x03004242  	RCC_APB2ENRbits+0
0x104C	0x001C4001  	AFIO_MAPR2+0
0x1050	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x05A8	0xB083    SUB	SP, SP, #12
0x05AA	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x05AE	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x05B2	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x05B4	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x05B6	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x05BA	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x05BC	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x05BE	0x4A19    LDR	R2, [PC, #100]
0x05C0	0x9202    STR	R2, [SP, #8]
0x05C2	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x05C4	0x4A18    LDR	R2, [PC, #96]
0x05C6	0x9202    STR	R2, [SP, #8]
0x05C8	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x05CA	0x4A18    LDR	R2, [PC, #96]
0x05CC	0x9202    STR	R2, [SP, #8]
0x05CE	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x05D0	0x4A17    LDR	R2, [PC, #92]
0x05D2	0x9202    STR	R2, [SP, #8]
0x05D4	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x05D6	0x4A17    LDR	R2, [PC, #92]
0x05D8	0x9202    STR	R2, [SP, #8]
0x05DA	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x05DC	0x4A16    LDR	R2, [PC, #88]
0x05DE	0x9202    STR	R2, [SP, #8]
0x05E0	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x05E2	0x4A16    LDR	R2, [PC, #88]
0x05E4	0x9202    STR	R2, [SP, #8]
0x05E6	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x05E8	0x2800    CMP	R0, #0
0x05EA	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x05EC	0x2801    CMP	R0, #1
0x05EE	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x05F0	0x2802    CMP	R0, #2
0x05F2	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x05F4	0x2803    CMP	R0, #3
0x05F6	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x05F8	0x2804    CMP	R0, #4
0x05FA	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x05FC	0x2805    CMP	R0, #5
0x05FE	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x0600	0x2806    CMP	R0, #6
0x0602	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x0604	0x2201    MOVS	R2, #1
0x0606	0xB212    SXTH	R2, R2
0x0608	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x060A	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x060E	0x9802    LDR	R0, [SP, #8]
0x0610	0x460A    MOV	R2, R1
0x0612	0xF8BD1004  LDRH	R1, [SP, #4]
0x0616	0xF7FFFDFB  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x061A	0xF8DDE000  LDR	LR, [SP, #0]
0x061E	0xB003    ADD	SP, SP, #12
0x0620	0x4770    BX	LR
0x0622	0xBF00    NOP
0x0624	0x08004001  	#1073809408
0x0628	0x0C004001  	#1073810432
0x062C	0x10004001  	#1073811456
0x0630	0x14004001  	#1073812480
0x0634	0x18004001  	#1073813504
0x0638	0x1C004001  	#1073814528
0x063C	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0210	0xB081    SUB	SP, SP, #4
0x0212	0xF8CDE000  STR	LR, [SP, #0]
0x0216	0xB28C    UXTH	R4, R1
0x0218	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x021A	0x4B77    LDR	R3, [PC, #476]
0x021C	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x0220	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x0222	0x4618    MOV	R0, R3
0x0224	0xF7FFFF94  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x0228	0xF1B40FFF  CMP	R4, #255
0x022C	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x022E	0x4B73    LDR	R3, [PC, #460]
0x0230	0x429D    CMP	R5, R3
0x0232	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0234	0xF04F3333  MOV	R3, #858993459
0x0238	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x023A	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x023C	0x2D42    CMP	R5, #66
0x023E	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x0240	0xF04F3344  MOV	R3, #1145324612
0x0244	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x0246	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x0248	0xF64F73FF  MOVW	R3, #65535
0x024C	0x429C    CMP	R4, R3
0x024E	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x0250	0x4B6A    LDR	R3, [PC, #424]
0x0252	0x429D    CMP	R5, R3
0x0254	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x0256	0xF04F3333  MOV	R3, #858993459
0x025A	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x025C	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x025E	0xF04F3333  MOV	R3, #858993459
0x0262	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0264	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0266	0x2D42    CMP	R5, #66
0x0268	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x026A	0xF04F3344  MOV	R3, #1145324612
0x026E	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x0270	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0272	0xF04F3344  MOV	R3, #1145324612
0x0276	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x0278	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x027A	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x027C	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x027E	0xF0050301  AND	R3, R5, #1
0x0282	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x0284	0x2100    MOVS	R1, #0
0x0286	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x0288	0xF0050302  AND	R3, R5, #2
0x028C	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x028E	0xF40573C0  AND	R3, R5, #384
0x0292	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x0294	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x0296	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x0298	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x029A	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x029C	0xF0050304  AND	R3, R5, #4
0x02A0	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x02A2	0xF0050320  AND	R3, R5, #32
0x02A6	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x02A8	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x02AA	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x02AC	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x02AE	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x02B0	0xF0050308  AND	R3, R5, #8
0x02B4	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x02B6	0xF0050320  AND	R3, R5, #32
0x02BA	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x02BC	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x02BE	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x02C0	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x02C2	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x02C4	0x4B4E    LDR	R3, [PC, #312]
0x02C6	0xEA050303  AND	R3, R5, R3, LSL #0
0x02CA	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x02CC	0x2003    MOVS	R0, #3
0x02CE	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x02D0	0xF4057300  AND	R3, R5, #512
0x02D4	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x02D6	0x2002    MOVS	R0, #2
0x02D8	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x02DA	0xF4056380  AND	R3, R5, #1024
0x02DE	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x02E0	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x02E2	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x02E4	0xF005030C  AND	R3, R5, #12
0x02E8	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x02EA	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x02EC	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x02EE	0xF00403FF  AND	R3, R4, #255
0x02F2	0xB29B    UXTH	R3, R3
0x02F4	0x2B00    CMP	R3, #0
0x02F6	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x02F8	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x02FA	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x02FC	0xFA1FF884  UXTH	R8, R4
0x0300	0x4632    MOV	R2, R6
0x0302	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x0304	0x2808    CMP	R0, #8
0x0306	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x0308	0xF04F0301  MOV	R3, #1
0x030C	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x0310	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x0314	0x42A3    CMP	R3, R4
0x0316	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x0318	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x031A	0xF04F030F  MOV	R3, #15
0x031E	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x0320	0x43DB    MVN	R3, R3
0x0322	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x0326	0xFA01F305  LSL	R3, R1, R5
0x032A	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x032E	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x0330	0xF4067381  AND	R3, R6, #258
0x0334	0xF5B37F81  CMP	R3, #258
0x0338	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x033A	0xF2020414  ADDW	R4, R2, #20
0x033E	0xF04F0301  MOV	R3, #1
0x0342	0x4083    LSLS	R3, R0
0x0344	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x0346	0xF0060382  AND	R3, R6, #130
0x034A	0x2B82    CMP	R3, #130
0x034C	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x034E	0xF2020410  ADDW	R4, R2, #16
0x0352	0xF04F0301  MOV	R3, #1
0x0356	0x4083    LSLS	R3, R0
0x0358	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x035A	0x462F    MOV	R7, R5
0x035C	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x035E	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x0360	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x0362	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0364	0xFA1FF088  UXTH	R0, R8
0x0368	0x460F    MOV	R7, R1
0x036A	0x4631    MOV	R1, R6
0x036C	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x036E	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x0370	0x460F    MOV	R7, R1
0x0372	0x4629    MOV	R1, R5
0x0374	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0376	0xF1B00FFF  CMP	R0, #255
0x037A	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x037C	0x1D33    ADDS	R3, R6, #4
0x037E	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x0382	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0384	0x2A08    CMP	R2, #8
0x0386	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0388	0xF2020408  ADDW	R4, R2, #8
0x038C	0xF04F0301  MOV	R3, #1
0x0390	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0394	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0398	0x42A3    CMP	R3, R4
0x039A	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x039C	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x039E	0xF04F030F  MOV	R3, #15
0x03A2	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x03A4	0x43DB    MVN	R3, R3
0x03A6	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x03AA	0xFA07F305  LSL	R3, R7, R5
0x03AE	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x03B2	0xF4017381  AND	R3, R1, #258
0x03B6	0xF5B37F81  CMP	R3, #258
0x03BA	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x03BC	0xF2060514  ADDW	R5, R6, #20
0x03C0	0xF2020408  ADDW	R4, R2, #8
0x03C4	0xF04F0301  MOV	R3, #1
0x03C8	0x40A3    LSLS	R3, R4
0x03CA	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x03CC	0xF0010382  AND	R3, R1, #130
0x03D0	0x2B82    CMP	R3, #130
0x03D2	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x03D4	0xF2060510  ADDW	R5, R6, #16
0x03D8	0xF2020408  ADDW	R4, R2, #8
0x03DC	0xF04F0301  MOV	R3, #1
0x03E0	0x40A3    LSLS	R3, R4
0x03E2	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x03E4	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x03E6	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x03E8	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x03EA	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x03EC	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x03F0	0xF8DDE000  LDR	LR, [SP, #0]
0x03F4	0xB001    ADD	SP, SP, #4
0x03F6	0x4770    BX	LR
0x03F8	0xFC00FFFF  	#-1024
0x03FC	0x00140008  	#524308
0x0400	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0150	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0152	0x4919    LDR	R1, [PC, #100]
0x0154	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x0158	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x015A	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x015C	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x015E	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0160	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0162	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0164	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x0166	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x0168	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x016A	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x016C	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x016E	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0170	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0172	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0174	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x0176	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x017A	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x017C	0x490F    LDR	R1, [PC, #60]
0x017E	0x4288    CMP	R0, R1
0x0180	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0182	0x490F    LDR	R1, [PC, #60]
0x0184	0x4288    CMP	R0, R1
0x0186	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x0188	0x490E    LDR	R1, [PC, #56]
0x018A	0x4288    CMP	R0, R1
0x018C	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x018E	0x490E    LDR	R1, [PC, #56]
0x0190	0x4288    CMP	R0, R1
0x0192	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0194	0x490D    LDR	R1, [PC, #52]
0x0196	0x4288    CMP	R0, R1
0x0198	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x019A	0x490D    LDR	R1, [PC, #52]
0x019C	0x4288    CMP	R0, R1
0x019E	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x01A0	0x490C    LDR	R1, [PC, #48]
0x01A2	0x4288    CMP	R0, R1
0x01A4	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x01A6	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x01A8	0x490B    LDR	R1, [PC, #44]
0x01AA	0x6809    LDR	R1, [R1, #0]
0x01AC	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x01B0	0x4909    LDR	R1, [PC, #36]
0x01B2	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x01B4	0xB001    ADD	SP, SP, #4
0x01B6	0x4770    BX	LR
0x01B8	0xFC00FFFF  	#-1024
0x01BC	0x08004001  	#1073809408
0x01C0	0x0C004001  	#1073810432
0x01C4	0x10004001  	#1073811456
0x01C8	0x14004001  	#1073812480
0x01CC	0x18004001  	#1073813504
0x01D0	0x1C004001  	#1073814528
0x01D4	0x20004001  	#1073815552
0x01D8	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
easymx_v7_STM32F107VC__i2cInit_2:
;__em_f107vc_i2c.c, 35 :: 		static T_mikrobus_ret _i2cInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x2AF4	0xB081    SUB	SP, SP, #4
0x2AF6	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_i2c.c, 37 :: 		I2C1_Init_Advanced( cfg[0], &_GPIO_MODULE_I2C1_PB67);
0x2AFA	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x2AFC	0x4608    MOV	R0, R1
0x2AFE	0x4904    LDR	R1, [PC, #16]
0x2B00	0xF7FFF9D2  BL	_I2C1_Init_Advanced+0
;__em_f107vc_i2c.c, 38 :: 		return _MIKROBUS_OK;
0x2B04	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_i2c.c, 39 :: 		}
L_end__i2cInit_2:
0x2B06	0xF8DDE000  LDR	LR, [SP, #0]
0x2B0A	0xB001    ADD	SP, SP, #4
0x2B0C	0x4770    BX	LR
0x2B0E	0xBF00    NOP
0x2B10	0x35040000  	__GPIO_MODULE_I2C1_PB67+0
; end of easymx_v7_STM32F107VC__i2cInit_2
_mikrobus_logInit:
;easymx_v7_STM32F107VC.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x2FC4	0xB081    SUB	SP, SP, #4
0x2FC6	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 285 :: 		switch( port )
0x2FCA	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x2FCC	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x2FCE	0xF7FFFD23  BL	easymx_v7_STM32F107VC__log_init1+0
0x2FD2	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x2FD4	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x2FD6	0xF7FFFD03  BL	easymx_v7_STM32F107VC__log_init2+0
0x2FDA	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x2FDC	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x2FDE	0xF7FFFCE3  BL	easymx_v7_STM32F107VC__log_initUartA+0
0x2FE2	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x2FE4	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x2FE6	0xF7FFFD33  BL	easymx_v7_STM32F107VC__log_initUartB+0
0x2FEA	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x2FEC	0x2001    MOVS	R0, #1
0x2FEE	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x2FF0	0x2800    CMP	R0, #0
0x2FF2	0xD0EB    BEQ	L_mikrobus_logInit90
0x2FF4	0x2801    CMP	R0, #1
0x2FF6	0xD0ED    BEQ	L_mikrobus_logInit91
0x2FF8	0x2820    CMP	R0, #32
0x2FFA	0xD0EF    BEQ	L_mikrobus_logInit92
0x2FFC	0x2830    CMP	R0, #48
0x2FFE	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x3000	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_STM32F107VC.c, 317 :: 		}
L_end_mikrobus_logInit:
0x3002	0xF8DDE000  LDR	LR, [SP, #0]
0x3006	0xB001    ADD	SP, SP, #4
0x3008	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_STM32F107VC__log_init1:
;__em_f107vc_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x2A18	0xB081    SUB	SP, SP, #4
0x2A1A	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 25 :: 		UART3_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PD89);
0x2A1E	0x4909    LDR	R1, [PC, #36]
0x2A20	0xB402    PUSH	(R1)
0x2A22	0xF2400300  MOVW	R3, #0
0x2A26	0xF2400200  MOVW	R2, #0
0x2A2A	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x2A2E	0xF7FFF965  BL	_UART3_Init_Advanced+0
0x2A32	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 26 :: 		logger = UART3_Write;
0x2A34	0x4A04    LDR	R2, [PC, #16]
0x2A36	0x4905    LDR	R1, [PC, #20]
0x2A38	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 27 :: 		return 0;
0x2A3A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 28 :: 		}
L_end__log_init1:
0x2A3C	0xF8DDE000  LDR	LR, [SP, #0]
0x2A40	0xB001    ADD	SP, SP, #4
0x2A42	0x4770    BX	LR
0x2A44	0x34980000  	__GPIO_MODULE_USART3_PD89+0
0x2A48	0x1B110000  	_UART3_Write+0
0x2A4C	0x01942000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init1
_UART3_Init_Advanced:
;__Lib_UART_123_45.c, 384 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1CFC	0xB081    SUB	SP, SP, #4
0x1CFE	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x1D02	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 386 :: 		
0x1D04	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x1D06	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1D08	0xB408    PUSH	(R3)
0x1D0A	0xB293    UXTH	R3, R2
0x1D0C	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x1D0E	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1D10	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x1D12	0xF7FFFBF5  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x1D16	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 387 :: 		
L_end_UART3_Init_Advanced:
0x1D18	0xF8DDE000  LDR	LR, [SP, #0]
0x1D1C	0xB001    ADD	SP, SP, #4
0x1D1E	0x4770    BX	LR
0x1D20	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x1500	0xB089    SUB	SP, SP, #36
0x1502	0xF8CDE000  STR	LR, [SP, #0]
0x1506	0x4683    MOV	R11, R0
0x1508	0xB298    UXTH	R0, R3
0x150A	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x150C	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x1510	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x1512	0xAC04    ADD	R4, SP, #16
0x1514	0xF8AD1004  STRH	R1, [SP, #4]
0x1518	0xF8AD0008  STRH	R0, [SP, #8]
0x151C	0x4620    MOV	R0, R4
0x151E	0xF7FFFCBD  BL	_RCC_GetClocksFrequency+0
0x1522	0xF8BD0008  LDRH	R0, [SP, #8]
0x1526	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x152A	0x4C64    LDR	R4, [PC, #400]
0x152C	0x45A3    CMP	R11, R4
0x152E	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x1530	0x2501    MOVS	R5, #1
0x1532	0xB26D    SXTB	R5, R5
0x1534	0x4C62    LDR	R4, [PC, #392]
0x1536	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x1538	0x4D62    LDR	R5, [PC, #392]
0x153A	0x4C63    LDR	R4, [PC, #396]
0x153C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x153E	0x4D63    LDR	R5, [PC, #396]
0x1540	0x4C63    LDR	R4, [PC, #396]
0x1542	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x1544	0x4D63    LDR	R5, [PC, #396]
0x1546	0x4C64    LDR	R4, [PC, #400]
0x1548	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x154A	0x4D64    LDR	R5, [PC, #400]
0x154C	0x4C64    LDR	R4, [PC, #400]
0x154E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x1550	0x9C07    LDR	R4, [SP, #28]
0x1552	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x1554	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x1556	0x4C63    LDR	R4, [PC, #396]
0x1558	0x45A3    CMP	R11, R4
0x155A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x155C	0x2501    MOVS	R5, #1
0x155E	0xB26D    SXTB	R5, R5
0x1560	0x4C61    LDR	R4, [PC, #388]
0x1562	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x1564	0x4D61    LDR	R5, [PC, #388]
0x1566	0x4C58    LDR	R4, [PC, #352]
0x1568	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x156A	0x4D61    LDR	R5, [PC, #388]
0x156C	0x4C58    LDR	R4, [PC, #352]
0x156E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x1570	0x4D60    LDR	R5, [PC, #384]
0x1572	0x4C59    LDR	R4, [PC, #356]
0x1574	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x1576	0x4D60    LDR	R5, [PC, #384]
0x1578	0x4C59    LDR	R4, [PC, #356]
0x157A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x157C	0x9C06    LDR	R4, [SP, #24]
0x157E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x1580	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x1582	0x4C5E    LDR	R4, [PC, #376]
0x1584	0x45A3    CMP	R11, R4
0x1586	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x1588	0x2501    MOVS	R5, #1
0x158A	0xB26D    SXTB	R5, R5
0x158C	0x4C5C    LDR	R4, [PC, #368]
0x158E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x1590	0x4D5C    LDR	R5, [PC, #368]
0x1592	0x4C4D    LDR	R4, [PC, #308]
0x1594	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x1596	0x4D5C    LDR	R5, [PC, #368]
0x1598	0x4C4D    LDR	R4, [PC, #308]
0x159A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x159C	0x4D5B    LDR	R5, [PC, #364]
0x159E	0x4C4E    LDR	R4, [PC, #312]
0x15A0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x15A2	0x4D5B    LDR	R5, [PC, #364]
0x15A4	0x4C4E    LDR	R4, [PC, #312]
0x15A6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x15A8	0x9C06    LDR	R4, [SP, #24]
0x15AA	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x15AC	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x15AE	0x4C59    LDR	R4, [PC, #356]
0x15B0	0x45A3    CMP	R11, R4
0x15B2	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x15B4	0x2501    MOVS	R5, #1
0x15B6	0xB26D    SXTB	R5, R5
0x15B8	0x4C57    LDR	R4, [PC, #348]
0x15BA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x15BC	0x4D57    LDR	R5, [PC, #348]
0x15BE	0x4C42    LDR	R4, [PC, #264]
0x15C0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x15C2	0x4D57    LDR	R5, [PC, #348]
0x15C4	0x4C42    LDR	R4, [PC, #264]
0x15C6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x15C8	0x4D56    LDR	R5, [PC, #344]
0x15CA	0x4C43    LDR	R4, [PC, #268]
0x15CC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x15CE	0x4D56    LDR	R5, [PC, #344]
0x15D0	0x4C43    LDR	R4, [PC, #268]
0x15D2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x15D4	0x9C06    LDR	R4, [SP, #24]
0x15D6	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x15D8	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x15DA	0x4C54    LDR	R4, [PC, #336]
0x15DC	0x45A3    CMP	R11, R4
0x15DE	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x15E0	0x2501    MOVS	R5, #1
0x15E2	0xB26D    SXTB	R5, R5
0x15E4	0x4C52    LDR	R4, [PC, #328]
0x15E6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x15E8	0x4D52    LDR	R5, [PC, #328]
0x15EA	0x4C37    LDR	R4, [PC, #220]
0x15EC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x15EE	0x4D52    LDR	R5, [PC, #328]
0x15F0	0x4C37    LDR	R4, [PC, #220]
0x15F2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x15F4	0x4D51    LDR	R5, [PC, #324]
0x15F6	0x4C38    LDR	R4, [PC, #224]
0x15F8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x15FA	0x4D51    LDR	R5, [PC, #324]
0x15FC	0x4C38    LDR	R4, [PC, #224]
0x15FE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x1600	0x9C06    LDR	R4, [SP, #24]
0x1602	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x1604	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x1608	0xF8AD0008  STRH	R0, [SP, #8]
0x160C	0x4630    MOV	R0, R6
0x160E	0xF7FFFC99  BL	_GPIO_Alternate_Function_Enable+0
0x1612	0xF8BD0008  LDRH	R0, [SP, #8]
0x1616	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x161A	0xF10B0510  ADD	R5, R11, #16
0x161E	0x2400    MOVS	R4, #0
0x1620	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x1622	0xF10B0510  ADD	R5, R11, #16
0x1626	0x682C    LDR	R4, [R5, #0]
0x1628	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x162A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x162C	0xF10B050C  ADD	R5, R11, #12
0x1630	0x2400    MOVS	R4, #0
0x1632	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x1634	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x1636	0xF4406080  ORR	R0, R0, #1024
0x163A	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x163C	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x163E	0xF10B050C  ADD	R5, R11, #12
0x1642	0x682C    LDR	R4, [R5, #0]
0x1644	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x1646	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x1648	0xF10B060C  ADD	R6, R11, #12
0x164C	0x2501    MOVS	R5, #1
0x164E	0x6834    LDR	R4, [R6, #0]
0x1650	0xF365344D  BFI	R4, R5, #13, #1
0x1654	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x1656	0xF10B060C  ADD	R6, R11, #12
0x165A	0x2501    MOVS	R5, #1
0x165C	0x6834    LDR	R4, [R6, #0]
0x165E	0xF36504C3  BFI	R4, R5, #3, #1
0x1662	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x1664	0xF10B060C  ADD	R6, R11, #12
0x1668	0x2501    MOVS	R5, #1
0x166A	0x6834    LDR	R4, [R6, #0]
0x166C	0xF3650482  BFI	R4, R5, #2, #1
0x1670	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x1672	0xF10B0514  ADD	R5, R11, #20
0x1676	0x2400    MOVS	R4, #0
0x1678	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x167A	0x9D03    LDR	R5, [SP, #12]
0x167C	0x2419    MOVS	R4, #25
0x167E	0x4365    MULS	R5, R4, R5
0x1680	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x1684	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x1688	0x2464    MOVS	R4, #100
0x168A	0xFBB7F4F4  UDIV	R4, R7, R4
0x168E	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x1690	0x0935    LSRS	R5, R6, #4
0x1692	0x2464    MOVS	R4, #100
0x1694	0x436C    MULS	R4, R5, R4
0x1696	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x1698	0x0124    LSLS	R4, R4, #4
0x169A	0xF2040532  ADDW	R5, R4, #50
0x169E	0x2464    MOVS	R4, #100
0x16A0	0xFBB5F4F4  UDIV	R4, R5, R4
0x16A4	0xF004040F  AND	R4, R4, #15
0x16A8	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x16AC	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x16B0	0xB2A4    UXTH	R4, R4
0x16B2	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x16B4	0xF8DDE000  LDR	LR, [SP, #0]
0x16B8	0xB009    ADD	SP, SP, #36
0x16BA	0x4770    BX	LR
0x16BC	0x38004001  	USART1_SR+0
0x16C0	0x03384242  	RCC_APB2ENR+0
0x16C4	0x1BC50000  	_UART1_Write+0
0x16C8	0x07782000  	_UART_Wr_Ptr+0
0x16CC	0x18790000  	_UART1_Read+0
0x16D0	0x077C2000  	_UART_Rd_Ptr+0
0x16D4	0x14A50000  	_UART1_Data_Ready+0
0x16D8	0x07802000  	_UART_Rdy_Ptr+0
0x16DC	0x131D0000  	_UART1_Tx_Idle+0
0x16E0	0x07842000  	_UART_Tx_Idle_Ptr+0
0x16E4	0x44004000  	USART2_SR+0
0x16E8	0x03C44242  	RCC_APB1ENR+0
0x16EC	0x1BE10000  	_UART2_Write+0
0x16F0	0x134D0000  	_UART2_Read+0
0x16F4	0x13350000  	_UART2_Data_Ready+0
0x16F8	0x11390000  	_UART2_Tx_Idle+0
0x16FC	0x48004000  	USART3_SR+0
0x1700	0x03C84242  	RCC_APB1ENR+0
0x1704	0x1B110000  	_UART3_Write+0
0x1708	0x11210000  	_UART3_Read+0
0x170C	0x11690000  	_UART3_Data_Ready+0
0x1710	0x11510000  	_UART3_Tx_Idle+0
0x1714	0x4C004000  	UART4_SR+0
0x1718	0x03CC4242  	RCC_APB1ENR+0
0x171C	0x1B2D0000  	_UART4_Write+0
0x1720	0x13650000  	_UART4_Read+0
0x1724	0x14450000  	_UART4_Data_Ready+0
0x1728	0x142D0000  	_UART4_Tx_Idle+0
0x172C	0x50004000  	UART5_SR+0
0x1730	0x03D04242  	RCC_APB1ENR+0
0x1734	0x1B490000  	_UART5_Write+0
0x1738	0x145D0000  	_UART5_Read+0
0x173C	0x148D0000  	_UART5_Data_Ready+0
0x1740	0x14750000  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
easymx_v7_STM32F107VC__log_init2:
;__em_f107vc_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x29E0	0xB081    SUB	SP, SP, #4
0x29E2	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 32 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x29E6	0x4909    LDR	R1, [PC, #36]
0x29E8	0xB402    PUSH	(R1)
0x29EA	0xF2400300  MOVW	R3, #0
0x29EE	0xF2400200  MOVW	R2, #0
0x29F2	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x29F6	0xF7FFF995  BL	_UART2_Init_Advanced+0
0x29FA	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 33 :: 		logger = UART2_Write;
0x29FC	0x4A04    LDR	R2, [PC, #16]
0x29FE	0x4905    LDR	R1, [PC, #20]
0x2A00	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 34 :: 		return 0;
0x2A02	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 35 :: 		}
L_end__log_init2:
0x2A04	0xF8DDE000  LDR	LR, [SP, #0]
0x2A08	0xB001    ADD	SP, SP, #4
0x2A0A	0x4770    BX	LR
0x2A0C	0x35700000  	__GPIO_MODULE_USART2_PD56+0
0x2A10	0x1BE10000  	_UART2_Write+0
0x2A14	0x01942000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init2
_UART2_Init_Advanced:
;__Lib_UART_123_45.c, 378 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1D24	0xB081    SUB	SP, SP, #4
0x1D26	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x1D2A	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 380 :: 		
0x1D2C	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x1D2E	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1D30	0xB408    PUSH	(R3)
0x1D32	0xB293    UXTH	R3, R2
0x1D34	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x1D36	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1D38	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x1D3A	0xF7FFFBE1  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x1D3E	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 381 :: 		
L_end_UART2_Init_Advanced:
0x1D40	0xF8DDE000  LDR	LR, [SP, #0]
0x1D44	0xB001    ADD	SP, SP, #4
0x1D46	0x4770    BX	LR
0x1D48	0x44004000  	USART2_SR+0
; end of _UART2_Init_Advanced
easymx_v7_STM32F107VC__log_initUartA:
;__em_f107vc_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x29A8	0xB081    SUB	SP, SP, #4
0x29AA	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 39 :: 		UART1_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x29AE	0x4909    LDR	R1, [PC, #36]
0x29B0	0xB402    PUSH	(R1)
0x29B2	0xF2400300  MOVW	R3, #0
0x29B6	0xF2400200  MOVW	R2, #0
0x29BA	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x29BE	0xF7FFF91D  BL	_UART1_Init_Advanced+0
0x29C2	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 40 :: 		logger = UART1_Write;
0x29C4	0x4A04    LDR	R2, [PC, #16]
0x29C6	0x4905    LDR	R1, [PC, #20]
0x29C8	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 41 :: 		return 0;
0x29CA	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 42 :: 		}
L_end__log_initUartA:
0x29CC	0xF8DDE000  LDR	LR, [SP, #0]
0x29D0	0xB001    ADD	SP, SP, #4
0x29D2	0x4770    BX	LR
0x29D4	0x342C0000  	__GPIO_MODULE_USART1_PA9_10+0
0x29D8	0x1BC50000  	_UART1_Write+0
0x29DC	0x01942000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartA
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x1BFC	0xB081    SUB	SP, SP, #4
0x1BFE	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x1C02	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x1C04	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x1C06	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x1C08	0xB408    PUSH	(R3)
0x1C0A	0xB293    UXTH	R3, R2
0x1C0C	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x1C0E	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x1C10	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x1C12	0xF7FFFC75  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x1C16	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x1C18	0xF8DDE000  LDR	LR, [SP, #0]
0x1C1C	0xB001    ADD	SP, SP, #4
0x1C1E	0x4770    BX	LR
0x1C20	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
easymx_v7_STM32F107VC__log_initUartB:
;__em_f107vc_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x2A50	0xB081    SUB	SP, SP, #4
0x2A52	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 46 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x2A56	0x4909    LDR	R1, [PC, #36]
0x2A58	0xB402    PUSH	(R1)
0x2A5A	0xF2400300  MOVW	R3, #0
0x2A5E	0xF2400200  MOVW	R2, #0
0x2A62	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x2A66	0xF7FFF95D  BL	_UART2_Init_Advanced+0
0x2A6A	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 47 :: 		logger = UART2_Write;
0x2A6C	0x4A04    LDR	R2, [PC, #16]
0x2A6E	0x4905    LDR	R1, [PC, #20]
0x2A70	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 48 :: 		return 0;
0x2A72	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 49 :: 		}
L_end__log_initUartB:
0x2A74	0xF8DDE000  LDR	LR, [SP, #0]
0x2A78	0xB001    ADD	SP, SP, #4
0x2A7A	0x4770    BX	LR
0x2A7C	0x35700000  	__GPIO_MODULE_USART2_PD56+0
0x2A80	0x1BE10000  	_UART2_Write+0
0x2A84	0x01942000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartB
_applicationInit:
;Click_IR_Grid_STM.c, 39 :: 		void applicationInit()
0x30E0	0xB081    SUB	SP, SP, #4
0x30E2	0xF8CDE000  STR	LR, [SP, #0]
;Click_IR_Grid_STM.c, 41 :: 		irgrid_i2cDriverInit( (T_IRGRID_P)&_MIKROBUS1_GPIO, (T_IRGRID_P)&_MIKROBUS1_I2C, 0x50, 0x60);
0x30E6	0x2360    MOVS	R3, #96
0x30E8	0x2250    MOVS	R2, #80
0x30EA	0x490F    LDR	R1, [PC, #60]
0x30EC	0x480F    LDR	R0, [PC, #60]
0x30EE	0xF7FFFE0D  BL	_irgrid_i2cDriverInit+0
;Click_IR_Grid_STM.c, 42 :: 		Delay_ms( 100 );
0x30F2	0xF644777F  MOVW	R7, #20351
0x30F6	0xF2C00712  MOVT	R7, #18
L_applicationInit2:
0x30FA	0x1E7F    SUBS	R7, R7, #1
0x30FC	0xD1FD    BNE	L_applicationInit2
0x30FE	0xBF00    NOP
0x3100	0xBF00    NOP
0x3102	0xBF00    NOP
0x3104	0xBF00    NOP
0x3106	0xBF00    NOP
;Click_IR_Grid_STM.c, 43 :: 		irgrid_deviceInit( 16 );
0x3108	0x2010    MOVS	R0, #16
0x310A	0xF7FFFDA5  BL	_irgrid_deviceInit+0
;Click_IR_Grid_STM.c, 45 :: 		mikrobus_logWrite( "IR GRID INITIALIZED", _LOG_LINE);
0x310E	0x4808    LDR	R0, [PC, #32]
0x3110	0x2102    MOVS	R1, #2
0x3112	0xF7FFFF1F  BL	_mikrobus_logWrite+0
;Click_IR_Grid_STM.c, 46 :: 		mikrobus_logWrite( "IR GRID TEMPERATURE MESUREMENT",_LOG_LINE);
0x3116	0x4807    LDR	R0, [PC, #28]
0x3118	0x2102    MOVS	R1, #2
0x311A	0xF7FFFF1B  BL	_mikrobus_logWrite+0
;Click_IR_Grid_STM.c, 47 :: 		}
L_end_applicationInit:
0x311E	0xF8DDE000  LDR	LR, [SP, #0]
0x3122	0xB001    ADD	SP, SP, #4
0x3124	0x4770    BX	LR
0x3126	0xBF00    NOP
0x3128	0x36EC0000  	__MIKROBUS1_I2C+0
0x312C	0x35DC0000  	__MIKROBUS1_GPIO+0
0x3130	0x00002000  	?lstr1_Click_IR_Grid_STM+0
0x3134	0x00142000  	?lstr2_Click_IR_Grid_STM+0
; end of _applicationInit
_irgrid_i2cDriverInit:
;__irgrid_driver.c, 609 :: 		void irgrid_i2cDriverInit(T_IRGRID_P gpioObj, T_IRGRID_P i2cObj, uint8_t slave_eeprom, uint8_t slave)
; slave start address is: 12 (R3)
; slave_eeprom start address is: 8 (R2)
; i2cObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x2D0C	0xB082    SUB	SP, SP, #8
0x2D0E	0xF8CDE000  STR	LR, [SP, #0]
0x2D12	0xF88D3004  STRB	R3, [SP, #4]
0x2D16	0x4603    MOV	R3, R0
0x2D18	0xF89D0004  LDRB	R0, [SP, #4]
; slave end address is: 12 (R3)
; slave_eeprom end address is: 8 (R2)
; i2cObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 12 (R3)
; i2cObj start address is: 4 (R1)
; slave_eeprom start address is: 8 (R2)
; slave start address is: 0 (R0)
;__irgrid_driver.c, 611 :: 		_slaveEEPROM = slave_eeprom;
0x2D1C	0x4C06    LDR	R4, [PC, #24]
0x2D1E	0x7022    STRB	R2, [R4, #0]
; slave_eeprom end address is: 8 (R2)
;__irgrid_driver.c, 612 :: 		_slaveRAM = slave;
0x2D20	0x4C06    LDR	R4, [PC, #24]
0x2D22	0x7020    STRB	R0, [R4, #0]
; slave end address is: 0 (R0)
;__irgrid_driver.c, 613 :: 		hal_i2cMap( (T_HAL_P)i2cObj );
0x2D24	0x4608    MOV	R0, R1
; i2cObj end address is: 4 (R1)
0x2D26	0xF7FFFEB1  BL	__irgrid_driver_hal_i2cMap+0
;__irgrid_driver.c, 614 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x2D2A	0x4618    MOV	R0, R3
; gpioObj end address is: 12 (R3)
0x2D2C	0xF7FFFEAC  BL	__irgrid_driver_hal_gpioMap+0
;__irgrid_driver.c, 618 :: 		}
L_end_irgrid_i2cDriverInit:
0x2D30	0xF8DDE000  LDR	LR, [SP, #0]
0x2D34	0xB002    ADD	SP, SP, #8
0x2D36	0x4770    BX	LR
0x2D38	0x074D2000  	__irgrid_driver__slaveEEPROM+0
0x2D3C	0x00472000  	__irgrid_driver__slaveRAM+0
; end of _irgrid_i2cDriverInit
__irgrid_driver_hal_i2cMap:
;__hal_stm32.c, 82 :: 		static void hal_i2cMap(T_HAL_P i2cObj)
; i2cObj start address is: 0 (R0)
; i2cObj end address is: 0 (R0)
; i2cObj start address is: 0 (R0)
;__hal_stm32.c, 86 :: 		fp_i2cStart    = tmp->i2cStart;
0x2A8C	0x6802    LDR	R2, [R0, #0]
0x2A8E	0x4906    LDR	R1, [PC, #24]
0x2A90	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 87 :: 		fp_i2cWrite    = tmp->i2cWrite;
0x2A92	0x1D01    ADDS	R1, R0, #4
0x2A94	0x680A    LDR	R2, [R1, #0]
0x2A96	0x4905    LDR	R1, [PC, #20]
0x2A98	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 88 :: 		fp_i2cRead     = tmp->i2cRead;
0x2A9A	0xF2000108  ADDW	R1, R0, #8
; i2cObj end address is: 0 (R0)
0x2A9E	0x680A    LDR	R2, [R1, #0]
0x2AA0	0x4903    LDR	R1, [PC, #12]
0x2AA2	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 89 :: 		}
L_end_hal_i2cMap:
0x2AA4	0x4770    BX	LR
0x2AA6	0xBF00    NOP
0x2AA8	0x07582000  	__irgrid_driver_fp_i2cStart+0
0x2AAC	0x07502000  	__irgrid_driver_fp_i2cWrite+0
0x2AB0	0x07542000  	__irgrid_driver_fp_i2cRead+0
; end of __irgrid_driver_hal_i2cMap
__irgrid_driver_hal_gpioMap:
;__irgrid_hal.c, 321 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
;__irgrid_hal.c, 397 :: 		}
L_end_hal_gpioMap:
0x2A88	0x4770    BX	LR
; end of __irgrid_driver_hal_gpioMap
_irgrid_deviceInit:
;__irgrid_driver.c, 644 :: 		uint8_t irgrid_deviceInit(uint8_t refrate)
; refrate start address is: 0 (R0)
0x2C58	0xB082    SUB	SP, SP, #8
0x2C5A	0xF8CDE000  STR	LR, [SP, #0]
; refrate end address is: 0 (R0)
; refrate start address is: 0 (R0)
;__irgrid_driver.c, 648 :: 		i = 0;
0x2C5E	0x2100    MOVS	R1, #0
0x2C60	0xF88D1004  STRB	R1, [SP, #4]
;__irgrid_driver.c, 649 :: 		_refresh_rate = refrate;
0x2C64	0x4910    LDR	R1, [PC, #64]
0x2C66	0x7008    STRB	R0, [R1, #0]
; refrate end address is: 0 (R0)
;__irgrid_driver.c, 651 :: 		do
L_irgrid_deviceInit53:
;__irgrid_driver.c, 653 :: 		_get_eeprom();
0x2C68	0xF7FFFF24  BL	__irgrid_driver__get_eeprom+0
;__irgrid_driver.c, 654 :: 		_set_trim();
0x2C6C	0xF7FFFFBE  BL	__irgrid_driver__set_trim+0
;__irgrid_driver.c, 655 :: 		_set_cgf();
0x2C70	0xF7FFFF50  BL	__irgrid_driver__set_cgf+0
;__irgrid_driver.c, 657 :: 		if (i++ > 16)
0x2C74	0xF89D2004  LDRB	R2, [SP, #4]
0x2C78	0xF89D1004  LDRB	R1, [SP, #4]
0x2C7C	0x1C49    ADDS	R1, R1, #1
0x2C7E	0xF88D1004  STRB	R1, [SP, #4]
0x2C82	0x2A10    CMP	R2, #16
0x2C84	0xD901    BLS	L_irgrid_deviceInit56
;__irgrid_driver.c, 659 :: 		return 1;
0x2C86	0x2001    MOVS	R0, #1
0x2C88	0xE009    B	L_end_irgrid_deviceInit
;__irgrid_driver.c, 660 :: 		}
L_irgrid_deviceInit56:
;__irgrid_driver.c, 662 :: 		} while (!((_get_cfg() & 0x0400) >> 10));
0x2C8A	0xF7FEFF6B  BL	__irgrid_driver__get_cfg+0
0x2C8E	0xF4006180  AND	R1, R0, #1024
0x2C92	0xB289    UXTH	R1, R1
0x2C94	0x0A89    LSRS	R1, R1, #10
0x2C96	0xB289    UXTH	R1, R1
0x2C98	0x2900    CMP	R1, #0
0x2C9A	0xD0E5    BEQ	L_irgrid_deviceInit53
;__irgrid_driver.c, 664 :: 		return 0;
0x2C9C	0x2000    MOVS	R0, #0
;__irgrid_driver.c, 665 :: 		}
L_end_irgrid_deviceInit:
0x2C9E	0xF8DDE000  LDR	LR, [SP, #0]
0x2CA2	0xB002    ADD	SP, SP, #8
0x2CA4	0x4770    BX	LR
0x2CA6	0xBF00    NOP
0x2CA8	0x074C2000  	__irgrid_driver__refresh_rate+0
; end of _irgrid_deviceInit
__irgrid_driver__get_eeprom:
;__irgrid_driver.c, 359 :: 		static void _get_eeprom()
0x2AB4	0xB082    SUB	SP, SP, #8
0x2AB6	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid_driver.c, 363 :: 		writeReg = 0;
0x2ABA	0x2000    MOVS	R0, #0
0x2ABC	0xF88D0004  STRB	R0, [SP, #4]
;__irgrid_driver.c, 365 :: 		hal_i2cStart();
0x2AC0	0xF7FFF810  BL	__irgrid_driver_hal_i2cStart+0
;__irgrid_driver.c, 366 :: 		hal_i2cWrite( _slaveEEPROM, &writeReg, 1, END_MODE_RESTART );
0x2AC4	0xA901    ADD	R1, SP, #4
0x2AC6	0x4809    LDR	R0, [PC, #36]
0x2AC8	0x7800    LDRB	R0, [R0, #0]
0x2ACA	0x2300    MOVS	R3, #0
0x2ACC	0x2201    MOVS	R2, #1
0x2ACE	0xF7FFF9F9  BL	__irgrid_driver_hal_i2cWrite+0
;__irgrid_driver.c, 367 :: 		hal_i2cRead( _slaveEEPROM, _eeprom_data, 256, END_MODE_STOP );
0x2AD2	0x4806    LDR	R0, [PC, #24]
0x2AD4	0x7800    LDRB	R0, [R0, #0]
0x2AD6	0x2301    MOVS	R3, #1
0x2AD8	0xF2401200  MOVW	R2, #256
0x2ADC	0x4904    LDR	R1, [PC, #16]
0x2ADE	0xF7FEFFA9  BL	__irgrid_driver_hal_i2cRead+0
;__irgrid_driver.c, 368 :: 		}
L_end__get_eeprom:
0x2AE2	0xF8DDE000  LDR	LR, [SP, #0]
0x2AE6	0xB002    ADD	SP, SP, #8
0x2AE8	0x4770    BX	LR
0x2AEA	0xBF00    NOP
0x2AEC	0x074D2000  	__irgrid_driver__slaveEEPROM+0
0x2AF0	0x02A02000  	__irgrid_driver__eeprom_data+0
; end of __irgrid_driver__get_eeprom
__irgrid_driver_hal_i2cStart:
;__hal_stm32.c, 91 :: 		static int hal_i2cStart()
0x1AE4	0xB082    SUB	SP, SP, #8
0x1AE6	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 93 :: 		int res = 0;
0x1AEA	0xF2400400  MOVW	R4, #0
0x1AEE	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 94 :: 		res |= fp_i2cStart();
0x1AF2	0x4C06    LDR	R4, [PC, #24]
0x1AF4	0x6824    LDR	R4, [R4, #0]
0x1AF6	0x47A0    BLX	R4
0x1AF8	0xF9BD1004  LDRSH	R1, [SP, #4]
0x1AFC	0xEA410000  ORR	R0, R1, R0, LSL #0
;__hal_stm32.c, 95 :: 		return res;
0x1B00	0xB200    SXTH	R0, R0
;__hal_stm32.c, 96 :: 		}
L_end_hal_i2cStart:
0x1B02	0xF8DDE000  LDR	LR, [SP, #0]
0x1B06	0xB002    ADD	SP, SP, #8
0x1B08	0x4770    BX	LR
0x1B0A	0xBF00    NOP
0x1B0C	0x07582000  	__irgrid_driver_fp_i2cStart+0
; end of __irgrid_driver_hal_i2cStart
_I2C1_Start:
;__Lib_I2C_12.c, 536 :: 		
0x1744	0xB081    SUB	SP, SP, #4
0x1746	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 537 :: 		
0x174A	0x4803    LDR	R0, [PC, #12]
0x174C	0xF7FFFC82  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 538 :: 		
L_end_I2C1_Start:
0x1750	0xF8DDE000  LDR	LR, [SP, #0]
0x1754	0xB001    ADD	SP, SP, #4
0x1756	0x4770    BX	LR
0x1758	0x54004000  	I2C1_CR1+0
; end of _I2C1_Start
_I2Cx_Start:
;__Lib_I2C_12.c, 204 :: 		
; I2C_BASE start address is: 0 (R0)
0x1054	0xB083    SUB	SP, SP, #12
0x1056	0xF8CDE000  STR	LR, [SP, #0]
0x105A	0x4603    MOV	R3, R0
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 12 (R3)
;__Lib_I2C_12.c, 205 :: 		
; timeout start address is: 0 (R0)
0x105C	0xF04F0000  MOV	R0, #0
;__Lib_I2C_12.c, 208 :: 		
0x1060	0x4926    LDR	R1, [PC, #152]
0x1062	0x428B    CMP	R3, R1
0x1064	0xD106    BNE	L_I2Cx_Start7
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 209 :: 		
0x1066	0x4926    LDR	R1, [PC, #152]
; timeout start address is: 16 (R4)
0x1068	0x680C    LDR	R4, [R1, #0]
;__Lib_I2C_12.c, 210 :: 		
0x106A	0x4926    LDR	R1, [PC, #152]
0x106C	0x680A    LDR	R2, [R1, #0]
0x106E	0x4926    LDR	R1, [PC, #152]
0x1070	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 211 :: 		
; timeout end address is: 16 (R4)
0x1072	0xE00B    B	L_I2Cx_Start8
L_I2Cx_Start7:
;__Lib_I2C_12.c, 212 :: 		
; timeout start address is: 0 (R0)
0x1074	0x4925    LDR	R1, [PC, #148]
0x1076	0x428B    CMP	R3, R1
0x1078	0xD107    BNE	L__I2Cx_Start123
; timeout end address is: 0 (R0)
;__Lib_I2C_12.c, 213 :: 		
0x107A	0x4925    LDR	R1, [PC, #148]
; timeout start address is: 0 (R0)
0x107C	0x6808    LDR	R0, [R1, #0]
;__Lib_I2C_12.c, 214 :: 		
0x107E	0x4925    LDR	R1, [PC, #148]
0x1080	0x680A    LDR	R2, [R1, #0]
0x1082	0x4921    LDR	R1, [PC, #132]
0x1084	0x600A    STR	R2, [R1, #0]
; timeout end address is: 0 (R0)
0x1086	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
0x1088	0xE000    B	L_I2Cx_Start9
L__I2Cx_Start123:
;__Lib_I2C_12.c, 212 :: 		
0x108A	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 215 :: 		
L_I2Cx_Start9:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L_I2Cx_Start8:
;__Lib_I2C_12.c, 217 :: 		
; timeout start address is: 16 (R4)
0x108C	0x4922    LDR	R1, [PC, #136]
0x108E	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 219 :: 		
0x1090	0x9401    STR	R4, [SP, #4]
0x1092	0x9302    STR	R3, [SP, #8]
0x1094	0x4618    MOV	R0, R3
0x1096	0xF7FFFA39  BL	__Lib_I2C_12_I2Cx_Wait_For_Idle+0
0x109A	0x9B02    LDR	R3, [SP, #8]
0x109C	0x9C01    LDR	R4, [SP, #4]
0x109E	0xB910    CBNZ	R0, L_I2Cx_Start10
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 220 :: 		
0x10A0	0xF64F70FF  MOVW	R0, #65535
0x10A4	0xE025    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 221 :: 		
L_I2Cx_Start10:
;__Lib_I2C_12.c, 224 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x10A6	0x2201    MOVS	R2, #1
0x10A8	0x6819    LDR	R1, [R3, #0]
0x10AA	0xF3622108  BFI	R1, R2, #8, #1
0x10AE	0x6019    STR	R1, [R3, #0]
;__Lib_I2C_12.c, 226 :: 		
0x10B0	0xF2030114  ADDW	R1, R3, #20
0x10B4	0x680A    LDR	R2, [R1, #0]
0x10B6	0xF3C22140  UBFX	R1, R2, #9, #1
0x10BA	0xB111    CBZ	R1, L_I2Cx_Start11
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 227 :: 		
0x10BC	0xF64F70FF  MOVW	R0, #65535
0x10C0	0xE017    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 228 :: 		
L_I2Cx_Start11:
;__Lib_I2C_12.c, 229 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x10C2	0x4625    MOV	R5, R4
; timeout end address is: 16 (R4)
0x10C4	0x461C    MOV	R4, R3
L_I2Cx_Start12:
; I2C_BASE end address is: 12 (R3)
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x10C6	0x4915    LDR	R1, [PC, #84]
0x10C8	0x4620    MOV	R0, R4
0x10CA	0xF7FFFA0D  BL	_ChekXForEvent+0
0x10CE	0xB978    CBNZ	R0, L_I2Cx_Start13
;__Lib_I2C_12.c, 230 :: 		
0x10D0	0x4911    LDR	R1, [PC, #68]
0x10D2	0x6809    LDR	R1, [R1, #0]
0x10D4	0xB159    CBZ	R1, L__I2Cx_Start124
;__Lib_I2C_12.c, 231 :: 		
0x10D6	0xB935    CBNZ	R5, L_I2Cx_Start15
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 232 :: 		
0x10D8	0x2006    MOVS	R0, #6
0x10DA	0x4C0B    LDR	R4, [PC, #44]
0x10DC	0x6824    LDR	R4, [R4, #0]
0x10DE	0x47A0    BLX	R4
;__Lib_I2C_12.c, 233 :: 		
0x10E0	0xF64F70FF  MOVW	R0, #65535
0x10E4	0xE005    B	L_end_I2Cx_Start
;__Lib_I2C_12.c, 234 :: 		
L_I2Cx_Start15:
;__Lib_I2C_12.c, 235 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 16 (R4)
0x10E6	0x1E69    SUBS	R1, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x10E8	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x10EA	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 236 :: 		
0x10EC	0xE7FF    B	L_I2Cx_Start14
L__I2Cx_Start124:
;__Lib_I2C_12.c, 230 :: 		
;__Lib_I2C_12.c, 236 :: 		
L_I2Cx_Start14:
;__Lib_I2C_12.c, 237 :: 		
; timeout start address is: 20 (R5)
; I2C_BASE end address is: 16 (R4)
; timeout end address is: 20 (R5)
0x10EE	0xE7EA    B	L_I2Cx_Start12
L_I2Cx_Start13:
;__Lib_I2C_12.c, 238 :: 		
0x10F0	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 239 :: 		
L_end_I2Cx_Start:
0x10F2	0xF8DDE000  LDR	LR, [SP, #0]
0x10F6	0xB003    ADD	SP, SP, #12
0x10F8	0x4770    BX	LR
0x10FA	0xBF00    NOP
0x10FC	0x54004000  	I2C1_CR1+0
0x1100	0x00482000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x1104	0x07642000  	_I2C1_Timeout_Ptr+0
0x1108	0x07602000  	_I2Cx_Timeout_Ptr+0
0x110C	0x58004000  	I2C2_CR1+0
0x1110	0x004C2000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x1114	0x07682000  	_I2C2_Timeout_Ptr+0
0x1118	0x00502000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x111C	0x00010003  	#196609
; end of _I2Cx_Start
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x04C4	0x4901    LDR	R1, [PC, #4]
0x04C6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x04C8	0x4770    BX	LR
0x04CA	0xBF00    NOP
0x04CC	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x04DC	0x4901    LDR	R1, [PC, #4]
0x04DE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x04E0	0x4770    BX	LR
0x04E2	0xBF00    NOP
0x04E4	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x04D0	0x4901    LDR	R1, [PC, #4]
0x04D2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x04D4	0x4770    BX	LR
0x04D6	0xBF00    NOP
0x04D8	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x04A0	0x4901    LDR	R1, [PC, #4]
0x04A2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x04A4	0x4770    BX	LR
0x04A6	0xBF00    NOP
0x04A8	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0470	0x4901    LDR	R1, [PC, #4]
0x0472	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x0474	0x4770    BX	LR
0x0476	0xBF00    NOP
0x0478	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0464	0x4901    LDR	R1, [PC, #4]
0x0466	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x0468	0x4770    BX	LR
0x046A	0xBF00    NOP
0x046C	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x047C	0x4901    LDR	R1, [PC, #4]
0x047E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x0480	0x4770    BX	LR
0x0482	0xBF00    NOP
0x0484	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0494	0x4901    LDR	R1, [PC, #4]
0x0496	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x0498	0x4770    BX	LR
0x049A	0xBF00    NOP
0x049C	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0488	0x4901    LDR	R1, [PC, #4]
0x048A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x048C	0x4770    BX	LR
0x048E	0xBF00    NOP
0x0490	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x04AC	0x4901    LDR	R1, [PC, #4]
0x04AE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x04B0	0x4770    BX	LR
0x04B2	0xBF00    NOP
0x04B4	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x04B8	0x4901    LDR	R1, [PC, #4]
0x04BA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x04BC	0x4770    BX	LR
0x04BE	0xBF00    NOP
0x04C0	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0458	0x4901    LDR	R1, [PC, #4]
0x045A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x045C	0x4770    BX	LR
0x045E	0xBF00    NOP
0x0460	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0404	0x4901    LDR	R1, [PC, #4]
0x0406	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x0408	0x4770    BX	LR
0x040A	0xBF00    NOP
0x040C	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0410	0x4901    LDR	R1, [PC, #4]
0x0412	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x0414	0x4770    BX	LR
0x0416	0xBF00    NOP
0x0418	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0440	0x4901    LDR	R1, [PC, #4]
0x0442	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x0444	0x4770    BX	LR
0x0446	0xBF00    NOP
0x0448	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x044C	0x4901    LDR	R1, [PC, #4]
0x044E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x0450	0x4770    BX	LR
0x0452	0xBF00    NOP
0x0454	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0434	0x4901    LDR	R1, [PC, #4]
0x0436	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x0438	0x4770    BX	LR
0x043A	0xBF00    NOP
0x043C	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x041C	0x4901    LDR	R1, [PC, #4]
0x041E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x0420	0x4770    BX	LR
0x0422	0xBF00    NOP
0x0424	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0428	0x4901    LDR	R1, [PC, #4]
0x042A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x042C	0x4770    BX	LR
0x042E	0xBF00    NOP
0x0430	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0658	0x4901    LDR	R1, [PC, #4]
0x065A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x065C	0x4770    BX	LR
0x065E	0xBF00    NOP
0x0660	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x064C	0x4901    LDR	R1, [PC, #4]
0x064E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x0650	0x4770    BX	LR
0x0652	0xBF00    NOP
0x0654	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0670	0x4901    LDR	R1, [PC, #4]
0x0672	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x0674	0x4770    BX	LR
0x0676	0xBF00    NOP
0x0678	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0664	0x4901    LDR	R1, [PC, #4]
0x0666	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x0668	0x4770    BX	LR
0x066A	0xBF00    NOP
0x066C	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0640	0x4901    LDR	R1, [PC, #4]
0x0642	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x0644	0x4770    BX	LR
0x0646	0xBF00    NOP
0x0648	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
__Lib_I2C_12_I2Cx_Wait_For_Idle:
;__Lib_I2C_12.c, 172 :: 		
; I2C_BASE start address is: 0 (R0)
0x050C	0xB081    SUB	SP, SP, #4
0x050E	0xF8CDE000  STR	LR, [SP, #0]
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 173 :: 		
; timeout start address is: 8 (R2)
0x0512	0xF04F0200  MOV	R2, #0
;__Lib_I2C_12.c, 176 :: 		
0x0516	0x4919    LDR	R1, [PC, #100]
0x0518	0x4288    CMP	R0, R1
0x051A	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle0
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 177 :: 		
0x051C	0x4918    LDR	R1, [PC, #96]
; timeout start address is: 12 (R3)
0x051E	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 178 :: 		
0x0520	0x4918    LDR	R1, [PC, #96]
0x0522	0x680A    LDR	R2, [R1, #0]
0x0524	0x4918    LDR	R1, [PC, #96]
0x0526	0x600A    STR	R2, [R1, #0]
;__Lib_I2C_12.c, 179 :: 		
0x0528	0x461C    MOV	R4, R3
; timeout end address is: 12 (R3)
0x052A	0xE00B    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle1
L___Lib_I2C_12_I2Cx_Wait_For_Idle0:
;__Lib_I2C_12.c, 180 :: 		
; timeout start address is: 8 (R2)
0x052C	0x4917    LDR	R1, [PC, #92]
0x052E	0x4288    CMP	R0, R1
0x0530	0xD107    BNE	L___Lib_I2C_12_I2Cx_Wait_For_Idle121
; timeout end address is: 8 (R2)
;__Lib_I2C_12.c, 181 :: 		
0x0532	0x4917    LDR	R1, [PC, #92]
; timeout start address is: 12 (R3)
0x0534	0x680B    LDR	R3, [R1, #0]
;__Lib_I2C_12.c, 182 :: 		
0x0536	0x4917    LDR	R1, [PC, #92]
0x0538	0x680A    LDR	R2, [R1, #0]
0x053A	0x4913    LDR	R1, [PC, #76]
0x053C	0x600A    STR	R2, [R1, #0]
; timeout end address is: 12 (R3)
0x053E	0x461C    MOV	R4, R3
;__Lib_I2C_12.c, 183 :: 		
0x0540	0xE000    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle2
L___Lib_I2C_12_I2Cx_Wait_For_Idle121:
;__Lib_I2C_12.c, 180 :: 		
0x0542	0x4614    MOV	R4, R2
;__Lib_I2C_12.c, 183 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle2:
; timeout start address is: 16 (R4)
; timeout end address is: 16 (R4)
L___Lib_I2C_12_I2Cx_Wait_For_Idle1:
;__Lib_I2C_12.c, 185 :: 		
; timeout start address is: 16 (R4)
0x0544	0x4914    LDR	R1, [PC, #80]
0x0546	0x600C    STR	R4, [R1, #0]
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 16 (R4)
0x0548	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 187 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle3:
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x054A	0x4618    MOV	R0, R3
0x054C	0xF7FFFE46  BL	_I2Cx_Is_Idle+0
0x0550	0xB970    CBNZ	R0, L___Lib_I2C_12_I2Cx_Wait_For_Idle4
;__Lib_I2C_12.c, 188 :: 		
0x0552	0x4911    LDR	R1, [PC, #68]
0x0554	0x6809    LDR	R1, [R1, #0]
0x0556	0xB151    CBZ	R1, L___Lib_I2C_12_I2Cx_Wait_For_Idle122
;__Lib_I2C_12.c, 189 :: 		
0x0558	0xB92C    CBNZ	R4, L___Lib_I2C_12_I2Cx_Wait_For_Idle6
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
;__Lib_I2C_12.c, 190 :: 		
0x055A	0x2005    MOVS	R0, #5
0x055C	0x4C0A    LDR	R4, [PC, #40]
0x055E	0x6824    LDR	R4, [R4, #0]
0x0560	0x47A0    BLX	R4
;__Lib_I2C_12.c, 191 :: 		
0x0562	0x2000    MOVS	R0, #0
0x0564	0xE005    B	L_end_I2Cx_Wait_For_Idle
;__Lib_I2C_12.c, 192 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle6:
;__Lib_I2C_12.c, 193 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE start address is: 12 (R3)
0x0566	0x1E61    SUBS	R1, R4, #1
; timeout end address is: 16 (R4)
; timeout start address is: 0 (R0)
0x0568	0x4608    MOV	R0, R1
; timeout end address is: 0 (R0)
0x056A	0x4604    MOV	R4, R0
;__Lib_I2C_12.c, 194 :: 		
0x056C	0xE7FF    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle5
L___Lib_I2C_12_I2Cx_Wait_For_Idle122:
;__Lib_I2C_12.c, 188 :: 		
;__Lib_I2C_12.c, 194 :: 		
L___Lib_I2C_12_I2Cx_Wait_For_Idle5:
;__Lib_I2C_12.c, 195 :: 		
; timeout start address is: 16 (R4)
; I2C_BASE end address is: 12 (R3)
; timeout end address is: 16 (R4)
0x056E	0xE7EC    B	L___Lib_I2C_12_I2Cx_Wait_For_Idle3
L___Lib_I2C_12_I2Cx_Wait_For_Idle4:
;__Lib_I2C_12.c, 196 :: 		
0x0570	0x2001    MOVS	R0, #1
;__Lib_I2C_12.c, 197 :: 		
L_end_I2Cx_Wait_For_Idle:
0x0572	0xF8DDE000  LDR	LR, [SP, #0]
0x0576	0xB001    ADD	SP, SP, #4
0x0578	0x4770    BX	LR
0x057A	0xBF00    NOP
0x057C	0x54004000  	I2C1_CR1+0
0x0580	0x00482000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0584	0x07642000  	_I2C1_Timeout_Ptr+0
0x0588	0x07602000  	_I2Cx_Timeout_Ptr+0
0x058C	0x58004000  	I2C2_CR1+0
0x0590	0x004C2000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0594	0x07682000  	_I2C2_Timeout_Ptr+0
0x0598	0x00502000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of __Lib_I2C_12_I2Cx_Wait_For_Idle
_I2Cx_Is_Idle:
;__Lib_I2C_12.c, 167 :: 		
; I2C_BASE start address is: 0 (R0)
0x01DC	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 168 :: 		
0x01DE	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x01E2	0x680A    LDR	R2, [R1, #0]
0x01E4	0xF3C20140  UBFX	R1, R2, #1, #1
0x01E8	0xF0810101  EOR	R1, R1, #1
0x01EC	0xB2C9    UXTB	R1, R1
0x01EE	0xB2C8    UXTB	R0, R1
;__Lib_I2C_12.c, 169 :: 		
L_end_I2Cx_Is_Idle:
0x01F0	0xB001    ADD	SP, SP, #4
0x01F2	0x4770    BX	LR
; end of _I2Cx_Is_Idle
_ChekXForEvent:
;__Lib_I2C_12.c, 199 :: 		
; Event start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x04E8	0xB081    SUB	SP, SP, #4
0x04EA	0xF8CDE000  STR	LR, [SP, #0]
0x04EE	0x460B    MOV	R3, R1
; Event end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; Event start address is: 12 (R3)
;__Lib_I2C_12.c, 200 :: 		
; I2C_BASE end address is: 0 (R0)
0x04F0	0xF7FFFE80  BL	_I2Cx_Get_Status+0
0x04F4	0xEA000203  AND	R2, R0, R3, LSL #0
0x04F8	0x429A    CMP	R2, R3
0x04FA	0xF2400200  MOVW	R2, #0
0x04FE	0xD100    BNE	L__ChekXForEvent156
0x0500	0x2201    MOVS	R2, #1
L__ChekXForEvent156:
; Event end address is: 12 (R3)
0x0502	0xB2D0    UXTB	R0, R2
;__Lib_I2C_12.c, 201 :: 		
L_end_ChekXForEvent:
0x0504	0xF8DDE000  LDR	LR, [SP, #0]
0x0508	0xB001    ADD	SP, SP, #4
0x050A	0x4770    BX	LR
; end of _ChekXForEvent
_I2Cx_Get_Status:
;__Lib_I2C_12.c, 154 :: 		
; I2C_BASE start address is: 0 (R0)
0x01F4	0xB081    SUB	SP, SP, #4
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
;__Lib_I2C_12.c, 157 :: 		
0x01F6	0xF2000114  ADDW	R1, R0, #20
0x01FA	0x680A    LDR	R2, [R1, #0]
;__Lib_I2C_12.c, 158 :: 		
0x01FC	0xF2000118  ADDW	R1, R0, #24
; I2C_BASE end address is: 0 (R0)
0x0200	0x6809    LDR	R1, [R1, #0]
;__Lib_I2C_12.c, 160 :: 		
0x0202	0x0409    LSLS	R1, R1, #16
0x0204	0xEA420101  ORR	R1, R2, R1, LSL #0
0x0208	0x4608    MOV	R0, R1
;__Lib_I2C_12.c, 161 :: 		
L_end_I2Cx_Get_Status:
0x020A	0xB001    ADD	SP, SP, #4
0x020C	0x4770    BX	LR
; end of _I2Cx_Get_Status
_I2C2_Start:
;__Lib_I2C_12.c, 566 :: 		
0x1860	0xB081    SUB	SP, SP, #4
0x1862	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_I2C_12.c, 567 :: 		
0x1866	0x4803    LDR	R0, [PC, #12]
0x1868	0xF7FFFBF4  BL	_I2Cx_Start+0
;__Lib_I2C_12.c, 568 :: 		
L_end_I2C2_Start:
0x186C	0xF8DDE000  LDR	LR, [SP, #0]
0x1870	0xB001    ADD	SP, SP, #4
0x1872	0x4770    BX	LR
0x1874	0x58004000  	I2C2_CR1+0
; end of _I2C2_Start
_UART1_Read:
;__Lib_UART_123_45.c, 104 :: 		
0x1878	0xB081    SUB	SP, SP, #4
0x187A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 105 :: 		
0x187E	0x4803    LDR	R0, [PC, #12]
0x1880	0xF7FFF800  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 106 :: 		
L_end_UART1_Read:
0x1884	0xF8DDE000  LDR	LR, [SP, #0]
0x1888	0xB001    ADD	SP, SP, #4
0x188A	0x4770    BX	LR
0x188C	0x38004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_45_UARTx_Read:
;__Lib_UART_123_45.c, 96 :: 		
; UART_Base start address is: 0 (R0)
0x0884	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45.c, 98 :: 		
L___Lib_UART_123_45_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x0886	0x6802    LDR	R2, [R0, #0]
0x0888	0xF3C21140  UBFX	R1, R2, #5, #1
0x088C	0xB901    CBNZ	R1, L___Lib_UART_123_45_UARTx_Read5
0x088E	0xE7FA    B	L___Lib_UART_123_45_UARTx_Read4
L___Lib_UART_123_45_UARTx_Read5:
;__Lib_UART_123_45.c, 101 :: 		
0x0890	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x0892	0x6809    LDR	R1, [R1, #0]
0x0894	0xB288    UXTH	R0, R1
;__Lib_UART_123_45.c, 102 :: 		
L_end_UARTx_Read:
0x0896	0xB001    ADD	SP, SP, #4
0x0898	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Read
_UART1_Data_Ready:
;__Lib_UART_123_45.c, 131 :: 		
0x14A4	0xB081    SUB	SP, SP, #4
0x14A6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 132 :: 		
0x14AA	0x4803    LDR	R0, [PC, #12]
0x14AC	0xF7FFF9E4  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 133 :: 		
L_end_UART1_Data_Ready:
0x14B0	0xF8DDE000  LDR	LR, [SP, #0]
0x14B4	0xB001    ADD	SP, SP, #4
0x14B6	0x4770    BX	LR
0x14B8	0x38004001  	USART1_SR+0
; end of _UART1_Data_Ready
__Lib_UART_123_45_UARTx_Data_Ready:
;__Lib_UART_123_45.c, 126 :: 		
; UART_Base start address is: 0 (R0)
0x0878	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 128 :: 		
0x087A	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x087C	0xF3C11040  UBFX	R0, R1, #5, #1
;__Lib_UART_123_45.c, 129 :: 		
L_end_UARTx_Data_Ready:
0x0880	0xB001    ADD	SP, SP, #4
0x0882	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_123_45.c, 212 :: 		
0x131C	0xB081    SUB	SP, SP, #4
0x131E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 213 :: 		
0x1322	0x4803    LDR	R0, [PC, #12]
0x1324	0xF7FFFABA  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 214 :: 		
L_end_UART1_Tx_Idle:
0x1328	0xF8DDE000  LDR	LR, [SP, #0]
0x132C	0xB001    ADD	SP, SP, #4
0x132E	0x4770    BX	LR
0x1330	0x38004001  	USART1_SR+0
; end of _UART1_Tx_Idle
__Lib_UART_123_45_UARTx_Tx_Idle:
;__Lib_UART_123_45.c, 208 :: 		
; UART_Base start address is: 0 (R0)
0x089C	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 209 :: 		
0x089E	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x08A0	0xF3C11080  UBFX	R0, R1, #6, #1
;__Lib_UART_123_45.c, 210 :: 		
L_end_UARTx_Tx_Idle:
0x08A4	0xB001    ADD	SP, SP, #4
0x08A6	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Tx_Idle
_UART2_Read:
;__Lib_UART_123_45.c, 108 :: 		
0x134C	0xB081    SUB	SP, SP, #4
0x134E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 109 :: 		
0x1352	0x4803    LDR	R0, [PC, #12]
0x1354	0xF7FFFA96  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 110 :: 		
L_end_UART2_Read:
0x1358	0xF8DDE000  LDR	LR, [SP, #0]
0x135C	0xB001    ADD	SP, SP, #4
0x135E	0x4770    BX	LR
0x1360	0x44004000  	USART2_SR+0
; end of _UART2_Read
_UART2_Data_Ready:
;__Lib_UART_123_45.c, 135 :: 		
0x1334	0xB081    SUB	SP, SP, #4
0x1336	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 136 :: 		
0x133A	0x4803    LDR	R0, [PC, #12]
0x133C	0xF7FFFA9C  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 137 :: 		
L_end_UART2_Data_Ready:
0x1340	0xF8DDE000  LDR	LR, [SP, #0]
0x1344	0xB001    ADD	SP, SP, #4
0x1346	0x4770    BX	LR
0x1348	0x44004000  	USART2_SR+0
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
;__Lib_UART_123_45.c, 216 :: 		
0x1138	0xB081    SUB	SP, SP, #4
0x113A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 217 :: 		
0x113E	0x4803    LDR	R0, [PC, #12]
0x1140	0xF7FFFBAC  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 218 :: 		
L_end_UART2_Tx_Idle:
0x1144	0xF8DDE000  LDR	LR, [SP, #0]
0x1148	0xB001    ADD	SP, SP, #4
0x114A	0x4770    BX	LR
0x114C	0x44004000  	USART2_SR+0
; end of _UART2_Tx_Idle
_UART3_Read:
;__Lib_UART_123_45.c, 112 :: 		
0x1120	0xB081    SUB	SP, SP, #4
0x1122	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 113 :: 		
0x1126	0x4803    LDR	R0, [PC, #12]
0x1128	0xF7FFFBAC  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 114 :: 		
L_end_UART3_Read:
0x112C	0xF8DDE000  LDR	LR, [SP, #0]
0x1130	0xB001    ADD	SP, SP, #4
0x1132	0x4770    BX	LR
0x1134	0x48004000  	USART3_SR+0
; end of _UART3_Read
_UART3_Data_Ready:
;__Lib_UART_123_45.c, 139 :: 		
0x1168	0xB081    SUB	SP, SP, #4
0x116A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 140 :: 		
0x116E	0x4803    LDR	R0, [PC, #12]
0x1170	0xF7FFFB82  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 141 :: 		
L_end_UART3_Data_Ready:
0x1174	0xF8DDE000  LDR	LR, [SP, #0]
0x1178	0xB001    ADD	SP, SP, #4
0x117A	0x4770    BX	LR
0x117C	0x48004000  	USART3_SR+0
; end of _UART3_Data_Ready
_UART3_Tx_Idle:
;__Lib_UART_123_45.c, 220 :: 		
0x1150	0xB081    SUB	SP, SP, #4
0x1152	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 221 :: 		
0x1156	0x4803    LDR	R0, [PC, #12]
0x1158	0xF7FFFBA0  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 222 :: 		
L_end_UART3_Tx_Idle:
0x115C	0xF8DDE000  LDR	LR, [SP, #0]
0x1160	0xB001    ADD	SP, SP, #4
0x1162	0x4770    BX	LR
0x1164	0x48004000  	USART3_SR+0
; end of _UART3_Tx_Idle
_UART4_Read:
;__Lib_UART_123_45.c, 116 :: 		
0x1364	0xB081    SUB	SP, SP, #4
0x1366	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 117 :: 		
0x136A	0x4803    LDR	R0, [PC, #12]
0x136C	0xF7FFFA8A  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 118 :: 		
L_end_UART4_Read:
0x1370	0xF8DDE000  LDR	LR, [SP, #0]
0x1374	0xB001    ADD	SP, SP, #4
0x1376	0x4770    BX	LR
0x1378	0x4C004000  	UART4_SR+0
; end of _UART4_Read
_UART4_Data_Ready:
;__Lib_UART_123_45.c, 143 :: 		
0x1444	0xB081    SUB	SP, SP, #4
0x1446	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 144 :: 		
0x144A	0x4803    LDR	R0, [PC, #12]
0x144C	0xF7FFFA14  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 145 :: 		
L_end_UART4_Data_Ready:
0x1450	0xF8DDE000  LDR	LR, [SP, #0]
0x1454	0xB001    ADD	SP, SP, #4
0x1456	0x4770    BX	LR
0x1458	0x4C004000  	UART4_SR+0
; end of _UART4_Data_Ready
_UART4_Tx_Idle:
;__Lib_UART_123_45.c, 224 :: 		
0x142C	0xB081    SUB	SP, SP, #4
0x142E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 225 :: 		
0x1432	0x4803    LDR	R0, [PC, #12]
0x1434	0xF7FFFA32  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 226 :: 		
L_end_UART4_Tx_Idle:
0x1438	0xF8DDE000  LDR	LR, [SP, #0]
0x143C	0xB001    ADD	SP, SP, #4
0x143E	0x4770    BX	LR
0x1440	0x4C004000  	UART4_SR+0
; end of _UART4_Tx_Idle
_UART5_Read:
;__Lib_UART_123_45.c, 120 :: 		
0x145C	0xB081    SUB	SP, SP, #4
0x145E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 121 :: 		
0x1462	0x4803    LDR	R0, [PC, #12]
0x1464	0xF7FFFA0E  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 122 :: 		
L_end_UART5_Read:
0x1468	0xF8DDE000  LDR	LR, [SP, #0]
0x146C	0xB001    ADD	SP, SP, #4
0x146E	0x4770    BX	LR
0x1470	0x50004000  	UART5_SR+0
; end of _UART5_Read
_UART5_Data_Ready:
;__Lib_UART_123_45.c, 147 :: 		
0x148C	0xB081    SUB	SP, SP, #4
0x148E	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 148 :: 		
0x1492	0x4803    LDR	R0, [PC, #12]
0x1494	0xF7FFF9F0  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 149 :: 		
L_end_UART5_Data_Ready:
0x1498	0xF8DDE000  LDR	LR, [SP, #0]
0x149C	0xB001    ADD	SP, SP, #4
0x149E	0x4770    BX	LR
0x14A0	0x50004000  	UART5_SR+0
; end of _UART5_Data_Ready
_UART5_Tx_Idle:
;__Lib_UART_123_45.c, 228 :: 		
0x1474	0xB081    SUB	SP, SP, #4
0x1476	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 229 :: 		
0x147A	0x4803    LDR	R0, [PC, #12]
0x147C	0xF7FFFA0E  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 230 :: 		
L_end_UART5_Tx_Idle:
0x1480	0xF8DDE000  LDR	LR, [SP, #0]
0x1484	0xB001    ADD	SP, SP, #4
0x1486	0x4770    BX	LR
0x1488	0x50004000  	UART5_SR+0
; end of _UART5_Tx_Idle
__irgrid_driver_hal_i2cWrite:
;__hal_stm32.c, 98 :: 		static int hal_i2cWrite(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x1EC4	0xB082    SUB	SP, SP, #8
0x1EC6	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_stm32.c, 100 :: 		int res = 0;
0x1ECA	0xF2400400  MOVW	R4, #0
0x1ECE	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 102 :: 		res |= fp_i2cWrite(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x1ED2	0x4C05    LDR	R4, [PC, #20]
0x1ED4	0x6824    LDR	R4, [R4, #0]
0x1ED6	0x47A0    BLX	R4
0x1ED8	0xF9BD4004  LDRSH	R4, [SP, #4]
0x1EDC	0x4304    ORRS	R4, R0
;__hal_stm32.c, 103 :: 		return res;
0x1EDE	0xB220    SXTH	R0, R4
;__hal_stm32.c, 104 :: 		}
L_end_hal_i2cWrite:
0x1EE0	0xF8DDE000  LDR	LR, [SP, #0]
0x1EE4	0xB002    ADD	SP, SP, #8
0x1EE6	0x4770    BX	LR
0x1EE8	0x07502000  	__irgrid_driver_fp_i2cWrite+0
; end of __irgrid_driver_hal_i2cWrite
_I2C1_Write:
;__Lib_I2C_12.c, 556 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x13A0	0xB081    SUB	SP, SP, #4
0x13A2	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 557 :: 		
0x13A6	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x13A8	0x4613    MOV	R3, R2
0x13AA	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x13AC	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x13AE	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x13B0	0xF7FFFCA8  BL	_I2Cx_Write+0
0x13B4	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 558 :: 		
L_end_I2C1_Write:
0x13B6	0xF8DDE000  LDR	LR, [SP, #0]
0x13BA	0xB001    ADD	SP, SP, #4
0x13BC	0x4770    BX	LR
0x13BE	0xBF00    NOP
0x13C0	0x54004000  	I2C1_CR1+0
; end of _I2C1_Write
_I2Cx_Write:
;__Lib_I2C_12.c, 245 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x0D04	0xB082    SUB	SP, SP, #8
0x0D06	0xF8CDE000  STR	LR, [SP, #0]
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 0 (R0)
; slave_address start address is: 4 (R1)
; buf start address is: 8 (R2)
; count start address is: 12 (R3)
; END_mode start address is: 24 (R6)
0x0D0A	0x9E02    LDR	R6, [SP, #8]
;__Lib_I2C_12.c, 247 :: 		
; timeout start address is: 20 (R5)
0x0D0C	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 250 :: 		
0x0D10	0x4C56    LDR	R4, [PC, #344]
0x0D12	0x42A0    CMP	R0, R4
0x0D14	0xD106    BNE	L_I2Cx_Write16
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 251 :: 		
0x0D16	0x4C56    LDR	R4, [PC, #344]
; timeout start address is: 28 (R7)
0x0D18	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 252 :: 		
0x0D1A	0x4C56    LDR	R4, [PC, #344]
0x0D1C	0x6825    LDR	R5, [R4, #0]
0x0D1E	0x4C56    LDR	R4, [PC, #344]
0x0D20	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 253 :: 		
; timeout end address is: 28 (R7)
0x0D22	0xE00A    B	L_I2Cx_Write17
L_I2Cx_Write16:
;__Lib_I2C_12.c, 254 :: 		
; timeout start address is: 20 (R5)
0x0D24	0x4C55    LDR	R4, [PC, #340]
0x0D26	0x42A0    CMP	R0, R4
0x0D28	0xD106    BNE	L__I2Cx_Write125
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 255 :: 		
0x0D2A	0x4C55    LDR	R4, [PC, #340]
; timeout start address is: 28 (R7)
0x0D2C	0x6827    LDR	R7, [R4, #0]
;__Lib_I2C_12.c, 256 :: 		
0x0D2E	0x4C55    LDR	R4, [PC, #340]
0x0D30	0x6825    LDR	R5, [R4, #0]
0x0D32	0x4C51    LDR	R4, [PC, #324]
0x0D34	0x6025    STR	R5, [R4, #0]
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 257 :: 		
0x0D36	0xE000    B	L_I2Cx_Write18
L__I2Cx_Write125:
;__Lib_I2C_12.c, 254 :: 		
0x0D38	0x462F    MOV	R7, R5
;__Lib_I2C_12.c, 257 :: 		
L_I2Cx_Write18:
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
L_I2Cx_Write17:
;__Lib_I2C_12.c, 259 :: 		
; timeout start address is: 28 (R7)
0x0D3A	0x4C53    LDR	R4, [PC, #332]
0x0D3C	0x6027    STR	R7, [R4, #0]
;__Lib_I2C_12.c, 261 :: 		
0x0D3E	0xF2000510  ADDW	R5, R0, #16
0x0D42	0x004C    LSLS	R4, R1, #1
0x0D44	0xB2A4    UXTH	R4, R4
; slave_address end address is: 4 (R1)
0x0D46	0x602C    STR	R4, [R5, #0]
; I2C_BASE end address is: 0 (R0)
; buf end address is: 8 (R2)
; count end address is: 12 (R3)
; END_mode end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0D48	0x46B9    MOV	R9, R7
0x0D4A	0x4607    MOV	R7, R0
0x0D4C	0x4690    MOV	R8, R2
0x0D4E	0x4635    MOV	R5, R6
0x0D50	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 262 :: 		
L_I2Cx_Write19:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
0x0D52	0x494E    LDR	R1, [PC, #312]
0x0D54	0x4638    MOV	R0, R7
0x0D56	0xF7FFFBC7  BL	_ChekXForEvent+0
0x0D5A	0xB988    CBNZ	R0, L_I2Cx_Write20
;__Lib_I2C_12.c, 263 :: 		
0x0D5C	0x4C4A    LDR	R4, [PC, #296]
0x0D5E	0x6824    LDR	R4, [R4, #0]
0x0D60	0xB16C    CBZ	R4, L__I2Cx_Write126
;__Lib_I2C_12.c, 264 :: 		
0x0D62	0xF1B90F00  CMP	R9, #0
0x0D66	0xD106    BNE	L_I2Cx_Write22
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 265 :: 		
0x0D68	0x2004    MOVS	R0, #4
0x0D6A	0x4C43    LDR	R4, [PC, #268]
0x0D6C	0x6824    LDR	R4, [R4, #0]
0x0D6E	0x47A0    BLX	R4
;__Lib_I2C_12.c, 266 :: 		
0x0D70	0xF64F70FF  MOVW	R0, #65535
0x0D74	0xE076    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 267 :: 		
L_I2Cx_Write22:
;__Lib_I2C_12.c, 268 :: 		
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 28 (R7)
; count start address is: 24 (R6)
0x0D76	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0D7A	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 269 :: 		
0x0D7C	0xE7FF    B	L_I2Cx_Write21
L__I2Cx_Write126:
;__Lib_I2C_12.c, 263 :: 		
;__Lib_I2C_12.c, 269 :: 		
L_I2Cx_Write21:
;__Lib_I2C_12.c, 270 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x0D7E	0xE7E8    B	L_I2Cx_Write19
L_I2Cx_Write20:
;__Lib_I2C_12.c, 271 :: 		
; i start address is: 0 (R0)
0x0D80	0x2000    MOVS	R0, #0
; count end address is: 24 (R6)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
; END_mode end address is: 20 (R5)
0x0D82	0x9701    STR	R7, [SP, #4]
0x0D84	0x4629    MOV	R1, R5
0x0D86	0x4637    MOV	R7, R6
0x0D88	0x9E01    LDR	R6, [SP, #4]
L_I2Cx_Write23:
; i start address is: 0 (R0)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
; END_mode start address is: 4 (R1)
0x0D8A	0x1E7C    SUBS	R4, R7, #1
0x0D8C	0x42A0    CMP	R0, R4
0x0D8E	0xD226    BCS	L_I2Cx_Write24
;__Lib_I2C_12.c, 272 :: 		
0x0D90	0xF2060510  ADDW	R5, R6, #16
0x0D94	0xEB080400  ADD	R4, R8, R0, LSL #0
0x0D98	0x7824    LDRB	R4, [R4, #0]
0x0D9A	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 274 :: 		
0x0D9C	0x4C3A    LDR	R4, [PC, #232]
; timeout start address is: 36 (R9)
0x0D9E	0xF8D49000  LDR	R9, [R4, #0]
; END_mode end address is: 4 (R1)
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; timeout end address is: 36 (R9)
; i end address is: 0 (R0)
; I2C_BASE end address is: 24 (R6)
0x0DA2	0x4682    MOV	R10, R0
0x0DA4	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 275 :: 		
L_I2Cx_Write26:
; timeout start address is: 36 (R9)
; END_mode start address is: 20 (R5)
; count start address is: 28 (R7)
; buf start address is: 32 (R8)
; I2C_BASE start address is: 24 (R6)
; i start address is: 40 (R10)
0x0DA6	0x493A    LDR	R1, [PC, #232]
0x0DA8	0x4630    MOV	R0, R6
0x0DAA	0xF7FFFB9D  BL	_ChekXForEvent+0
0x0DAE	0xB988    CBNZ	R0, L_I2Cx_Write27
;__Lib_I2C_12.c, 276 :: 		
0x0DB0	0x4C35    LDR	R4, [PC, #212]
0x0DB2	0x6824    LDR	R4, [R4, #0]
0x0DB4	0xB16C    CBZ	R4, L__I2Cx_Write127
;__Lib_I2C_12.c, 277 :: 		
0x0DB6	0xF1B90F00  CMP	R9, #0
0x0DBA	0xD106    BNE	L_I2Cx_Write29
; count end address is: 28 (R7)
; buf end address is: 32 (R8)
; i end address is: 40 (R10)
; timeout end address is: 36 (R9)
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 278 :: 		
0x0DBC	0x2004    MOVS	R0, #4
0x0DBE	0x4C2E    LDR	R4, [PC, #184]
0x0DC0	0x6824    LDR	R4, [R4, #0]
0x0DC2	0x47A0    BLX	R4
;__Lib_I2C_12.c, 279 :: 		
0x0DC4	0xF64F70FF  MOVW	R0, #65535
0x0DC8	0xE04C    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 280 :: 		
L_I2Cx_Write29:
;__Lib_I2C_12.c, 281 :: 		
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
; timeout start address is: 36 (R9)
; i start address is: 40 (R10)
; buf start address is: 32 (R8)
; count start address is: 28 (R7)
0x0DCA	0xF1A90001  SUB	R0, R9, #1
; timeout end address is: 36 (R9)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0DCE	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 282 :: 		
0x0DD0	0xE7FF    B	L_I2Cx_Write28
L__I2Cx_Write127:
;__Lib_I2C_12.c, 276 :: 		
;__Lib_I2C_12.c, 282 :: 		
L_I2Cx_Write28:
;__Lib_I2C_12.c, 283 :: 		
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
0x0DD2	0xE7E8    B	L_I2Cx_Write26
L_I2Cx_Write27:
;__Lib_I2C_12.c, 271 :: 		
0x0DD4	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 0 (R0)
0x0DD8	0x4620    MOV	R0, R4
;__Lib_I2C_12.c, 284 :: 		
0x0DDA	0x4629    MOV	R1, R5
; count end address is: 28 (R7)
; END_mode end address is: 20 (R5)
0x0DDC	0xE7D5    B	L_I2Cx_Write23
L_I2Cx_Write24:
;__Lib_I2C_12.c, 286 :: 		
; END_mode start address is: 4 (R1)
0x0DDE	0xF2060510  ADDW	R5, R6, #16
0x0DE2	0xEB080400  ADD	R4, R8, R0, LSL #0
; buf end address is: 32 (R8)
; i end address is: 0 (R0)
0x0DE6	0x7824    LDRB	R4, [R4, #0]
0x0DE8	0x602C    STR	R4, [R5, #0]
;__Lib_I2C_12.c, 288 :: 		
0x0DEA	0x4C27    LDR	R4, [PC, #156]
; timeout start address is: 28 (R7)
0x0DEC	0x6827    LDR	R7, [R4, #0]
; END_mode end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0DEE	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 289 :: 		
L_I2Cx_Write30:
; timeout start address is: 28 (R7)
; END_mode start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
0x0DF0	0x4928    LDR	R1, [PC, #160]
0x0DF2	0x4630    MOV	R0, R6
0x0DF4	0xF7FFFB78  BL	_ChekXForEvent+0
0x0DF8	0xB970    CBNZ	R0, L_I2Cx_Write31
;__Lib_I2C_12.c, 290 :: 		
0x0DFA	0x4C23    LDR	R4, [PC, #140]
0x0DFC	0x6824    LDR	R4, [R4, #0]
0x0DFE	0xB154    CBZ	R4, L__I2Cx_Write128
;__Lib_I2C_12.c, 291 :: 		
0x0E00	0xB937    CBNZ	R7, L_I2Cx_Write33
; END_mode end address is: 20 (R5)
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 292 :: 		
0x0E02	0x2004    MOVS	R0, #4
0x0E04	0x4C1C    LDR	R4, [PC, #112]
0x0E06	0x6824    LDR	R4, [R4, #0]
0x0E08	0x47A0    BLX	R4
;__Lib_I2C_12.c, 293 :: 		
0x0E0A	0xF64F70FF  MOVW	R0, #65535
0x0E0E	0xE029    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 294 :: 		
L_I2Cx_Write33:
;__Lib_I2C_12.c, 295 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x0E10	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0E12	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 296 :: 		
0x0E14	0xE7FF    B	L_I2Cx_Write32
L__I2Cx_Write128:
;__Lib_I2C_12.c, 290 :: 		
;__Lib_I2C_12.c, 296 :: 		
L_I2Cx_Write32:
;__Lib_I2C_12.c, 297 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0E16	0xE7EB    B	L_I2Cx_Write30
L_I2Cx_Write31:
;__Lib_I2C_12.c, 298 :: 		
0x0E18	0x2D01    CMP	R5, #1
0x0E1A	0xD105    BNE	L_I2Cx_Write34
; END_mode end address is: 20 (R5)
;__Lib_I2C_12.c, 299 :: 		
0x0E1C	0x2501    MOVS	R5, #1
0x0E1E	0x6834    LDR	R4, [R6, #0]
0x0E20	0xF3652449  BFI	R4, R5, #9, #1
0x0E24	0x6034    STR	R4, [R6, #0]
; I2C_BASE end address is: 24 (R6)
0x0E26	0xE01C    B	L_I2Cx_Write35
L_I2Cx_Write34:
;__Lib_I2C_12.c, 301 :: 		
; I2C_BASE start address is: 24 (R6)
0x0E28	0x2501    MOVS	R5, #1
0x0E2A	0x6834    LDR	R4, [R6, #0]
0x0E2C	0xF3652408  BFI	R4, R5, #8, #1
0x0E30	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 303 :: 		
0x0E32	0x4C15    LDR	R4, [PC, #84]
; timeout start address is: 28 (R7)
0x0E34	0x6827    LDR	R7, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 28 (R7)
0x0E36	0x4635    MOV	R5, R6
;__Lib_I2C_12.c, 304 :: 		
L_I2Cx_Write36:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0E38	0x4917    LDR	R1, [PC, #92]
0x0E3A	0x4628    MOV	R0, R5
0x0E3C	0xF7FFFB54  BL	_ChekXForEvent+0
0x0E40	0xB978    CBNZ	R0, L_I2Cx_Write37
;__Lib_I2C_12.c, 305 :: 		
0x0E42	0x4C11    LDR	R4, [PC, #68]
0x0E44	0x6824    LDR	R4, [R4, #0]
0x0E46	0xB15C    CBZ	R4, L__I2Cx_Write129
;__Lib_I2C_12.c, 306 :: 		
0x0E48	0xB937    CBNZ	R7, L_I2Cx_Write39
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 307 :: 		
0x0E4A	0x2004    MOVS	R0, #4
0x0E4C	0x4C0A    LDR	R4, [PC, #40]
0x0E4E	0x6824    LDR	R4, [R4, #0]
0x0E50	0x47A0    BLX	R4
;__Lib_I2C_12.c, 308 :: 		
0x0E52	0xF64F70FF  MOVW	R0, #65535
0x0E56	0xE005    B	L_end_I2Cx_Write
;__Lib_I2C_12.c, 309 :: 		
L_I2Cx_Write39:
;__Lib_I2C_12.c, 310 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 20 (R5)
0x0E58	0x1E7C    SUBS	R4, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
0x0E5A	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x0E5C	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 311 :: 		
0x0E5E	0xE7FF    B	L_I2Cx_Write38
L__I2Cx_Write129:
;__Lib_I2C_12.c, 305 :: 		
;__Lib_I2C_12.c, 311 :: 		
L_I2Cx_Write38:
;__Lib_I2C_12.c, 312 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE end address is: 20 (R5)
; timeout end address is: 28 (R7)
0x0E60	0xE7EA    B	L_I2Cx_Write36
L_I2Cx_Write37:
;__Lib_I2C_12.c, 313 :: 		
L_I2Cx_Write35:
;__Lib_I2C_12.c, 314 :: 		
0x0E62	0x2000    MOVS	R0, #0
;__Lib_I2C_12.c, 315 :: 		
L_end_I2Cx_Write:
0x0E64	0xF8DDE000  LDR	LR, [SP, #0]
0x0E68	0xB002    ADD	SP, SP, #8
0x0E6A	0x4770    BX	LR
0x0E6C	0x54004000  	I2C1_CR1+0
0x0E70	0x00482000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0E74	0x07642000  	_I2C1_Timeout_Ptr+0
0x0E78	0x07602000  	_I2Cx_Timeout_Ptr+0
0x0E7C	0x58004000  	I2C2_CR1+0
0x0E80	0x004C2000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0E84	0x07682000  	_I2C2_Timeout_Ptr+0
0x0E88	0x00502000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0E8C	0x00820007  	#458882
0x0E90	0x00800007  	#458880
0x0E94	0x00840007  	#458884
0x0E98	0x00010003  	#196609
; end of _I2Cx_Write
_I2C2_Write:
;__Lib_I2C_12.c, 586 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x137C	0xB081    SUB	SP, SP, #4
0x137E	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 587 :: 		
0x1382	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x1384	0x4613    MOV	R3, R2
0x1386	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x1388	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x138A	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x138C	0xF7FFFCBA  BL	_I2Cx_Write+0
0x1390	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 588 :: 		
L_end_I2C2_Write:
0x1392	0xF8DDE000  LDR	LR, [SP, #0]
0x1396	0xB001    ADD	SP, SP, #4
0x1398	0x4770    BX	LR
0x139A	0xBF00    NOP
0x139C	0x58004000  	I2C2_CR1+0
; end of _I2C2_Write
__irgrid_driver_hal_i2cRead:
;__hal_stm32.c, 106 :: 		static int hal_i2cRead(uint8_t slaveAddress, uint8_t *pBuf, uint16_t nBytes, uint8_t endMode)
; endMode start address is: 12 (R3)
; nBytes start address is: 8 (R2)
; pBuf start address is: 4 (R1)
; slaveAddress start address is: 0 (R0)
0x1A34	0xB082    SUB	SP, SP, #8
0x1A36	0xF8CDE000  STR	LR, [SP, #0]
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
; slaveAddress start address is: 0 (R0)
; pBuf start address is: 4 (R1)
; nBytes start address is: 8 (R2)
; endMode start address is: 12 (R3)
;__hal_stm32.c, 108 :: 		int res = 0;
0x1A3A	0xF2400400  MOVW	R4, #0
0x1A3E	0xF8AD4004  STRH	R4, [SP, #4]
;__hal_stm32.c, 110 :: 		fp_i2cRead(slaveAddress, ptr, nBytes, endMode);
; endMode end address is: 12 (R3)
; nBytes end address is: 8 (R2)
; pBuf end address is: 4 (R1)
; slaveAddress end address is: 0 (R0)
0x1A42	0x4C04    LDR	R4, [PC, #16]
0x1A44	0x6824    LDR	R4, [R4, #0]
0x1A46	0x47A0    BLX	R4
;__hal_stm32.c, 111 :: 		return res;
0x1A48	0xF9BD0004  LDRSH	R0, [SP, #4]
;__hal_stm32.c, 112 :: 		}
L_end_hal_i2cRead:
0x1A4C	0xF8DDE000  LDR	LR, [SP, #0]
0x1A50	0xB002    ADD	SP, SP, #8
0x1A52	0x4770    BX	LR
0x1A54	0x07542000  	__irgrid_driver_fp_i2cRead+0
; end of __irgrid_driver_hal_i2cRead
_I2C1_Read:
;__Lib_I2C_12.c, 552 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x13C4	0xB081    SUB	SP, SP, #4
0x13C6	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 553 :: 		
0x13CA	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x13CC	0x4613    MOV	R3, R2
0x13CE	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x13D0	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x13D2	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x13D4	0xF7FFFA68  BL	_I2Cx_Read+0
0x13D8	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 554 :: 		
L_end_I2C1_Read:
0x13DA	0xF8DDE000  LDR	LR, [SP, #0]
0x13DE	0xB001    ADD	SP, SP, #4
0x13E0	0x4770    BX	LR
0x13E2	0xBF00    NOP
0x13E4	0x54004000  	I2C1_CR1+0
; end of _I2C1_Read
_I2Cx_Read:
;__Lib_I2C_12.c, 319 :: 		
; count start address is: 12 (R3)
; buf start address is: 8 (R2)
; slave_address start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x08A8	0xB082    SUB	SP, SP, #8
0x08AA	0xF8CDE000  STR	LR, [SP, #0]
0x08AE	0xB2CF    UXTB	R7, R1
0x08B0	0x4601    MOV	R1, R0
0x08B2	0x4698    MOV	R8, R3
; count end address is: 12 (R3)
; buf end address is: 8 (R2)
; slave_address end address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; I2C_BASE start address is: 4 (R1)
; slave_address start address is: 28 (R7)
; buf start address is: 8 (R2)
; count start address is: 32 (R8)
; END_mode start address is: 12 (R3)
0x08B4	0x9B02    LDR	R3, [SP, #8]
;__Lib_I2C_12.c, 321 :: 		
; i start address is: 24 (R6)
0x08B6	0xF04F0600  MOV	R6, #0
;__Lib_I2C_12.c, 322 :: 		
; timeout start address is: 20 (R5)
0x08BA	0xF04F0500  MOV	R5, #0
;__Lib_I2C_12.c, 325 :: 		
0x08BE	0x4CC4    LDR	R4, [PC, #784]
0x08C0	0x42A1    CMP	R1, R4
0x08C2	0xD107    BNE	L_I2Cx_Read40
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 326 :: 		
0x08C4	0x4CC3    LDR	R4, [PC, #780]
; timeout start address is: 36 (R9)
0x08C6	0xF8D49000  LDR	R9, [R4, #0]
;__Lib_I2C_12.c, 327 :: 		
0x08CA	0x4CC3    LDR	R4, [PC, #780]
0x08CC	0x6825    LDR	R5, [R4, #0]
0x08CE	0x4CC3    LDR	R4, [PC, #780]
0x08D0	0x6025    STR	R5, [R4, #0]
;__Lib_I2C_12.c, 328 :: 		
; timeout end address is: 36 (R9)
0x08D2	0xE00B    B	L_I2Cx_Read41
L_I2Cx_Read40:
;__Lib_I2C_12.c, 329 :: 		
; timeout start address is: 20 (R5)
0x08D4	0x4CC2    LDR	R4, [PC, #776]
0x08D6	0x42A1    CMP	R1, R4
0x08D8	0xD107    BNE	L__I2Cx_Read130
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 330 :: 		
0x08DA	0x4CC2    LDR	R4, [PC, #776]
; timeout start address is: 0 (R0)
0x08DC	0x6820    LDR	R0, [R4, #0]
;__Lib_I2C_12.c, 331 :: 		
0x08DE	0x4CC2    LDR	R4, [PC, #776]
0x08E0	0x6825    LDR	R5, [R4, #0]
0x08E2	0x4CBE    LDR	R4, [PC, #760]
0x08E4	0x6025    STR	R5, [R4, #0]
; timeout end address is: 0 (R0)
0x08E6	0x4681    MOV	R9, R0
;__Lib_I2C_12.c, 332 :: 		
0x08E8	0xE000    B	L_I2Cx_Read42
L__I2Cx_Read130:
;__Lib_I2C_12.c, 329 :: 		
0x08EA	0x46A9    MOV	R9, R5
;__Lib_I2C_12.c, 332 :: 		
L_I2Cx_Read42:
; timeout start address is: 36 (R9)
; timeout end address is: 36 (R9)
L_I2Cx_Read41:
;__Lib_I2C_12.c, 334 :: 		
; timeout start address is: 36 (R9)
0x08EC	0x4CBF    LDR	R4, [PC, #764]
0x08EE	0xF8C49000  STR	R9, [R4, #0]
;__Lib_I2C_12.c, 336 :: 		
0x08F2	0xE1F4    B	L_I2Cx_Read43
; count end address is: 32 (R8)
;__Lib_I2C_12.c, 337 :: 		
L_I2Cx_Read45:
;__Lib_I2C_12.c, 338 :: 		
0x08F4	0xF2010510  ADDW	R5, R1, #16
0x08F8	0x007C    LSLS	R4, R7, #1
0x08FA	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x08FC	0xF0440401  ORR	R4, R4, #1
0x0900	0xB2A4    UXTH	R4, R4
0x0902	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0904	0x9601    STR	R6, [SP, #4]
0x0906	0x4616    MOV	R6, R2
0x0908	0x464F    MOV	R7, R9
0x090A	0x9A01    LDR	R2, [SP, #4]
;__Lib_I2C_12.c, 339 :: 		
L_I2Cx_Read46:
; timeout start address is: 28 (R7)
; i start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 4 (R1)
0x090C	0xF2010414  ADDW	R4, R1, #20
0x0910	0x6825    LDR	R5, [R4, #0]
0x0912	0xF3C50440  UBFX	R4, R5, #1, #1
0x0916	0xB964    CBNZ	R4, L_I2Cx_Read47
;__Lib_I2C_12.c, 340 :: 		
0x0918	0x4CB4    LDR	R4, [PC, #720]
0x091A	0x6824    LDR	R4, [R4, #0]
0x091C	0xB144    CBZ	R4, L__I2Cx_Read131
;__Lib_I2C_12.c, 341 :: 		
0x091E	0xB927    CBNZ	R7, L_I2Cx_Read49
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 342 :: 		
0x0920	0x2003    MOVS	R0, #3
0x0922	0x4CAE    LDR	R4, [PC, #696]
0x0924	0x6824    LDR	R4, [R4, #0]
0x0926	0x47A0    BLX	R4
;__Lib_I2C_12.c, 343 :: 		
0x0928	0xE1E2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 344 :: 		
L_I2Cx_Read49:
;__Lib_I2C_12.c, 345 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; i start address is: 8 (R2)
0x092A	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x092C	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 346 :: 		
0x092E	0xE7FF    B	L_I2Cx_Read48
L__I2Cx_Read131:
;__Lib_I2C_12.c, 340 :: 		
;__Lib_I2C_12.c, 346 :: 		
L_I2Cx_Read48:
;__Lib_I2C_12.c, 347 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0930	0xE7EC    B	L_I2Cx_Read46
L_I2Cx_Read47:
;__Lib_I2C_12.c, 348 :: 		
0x0932	0x2500    MOVS	R5, #0
0x0934	0x680C    LDR	R4, [R1, #0]
0x0936	0xF365248A  BFI	R4, R5, #10, #1
0x093A	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 349 :: 		
0x093C	0xF2010414  ADDW	R4, R1, #20
0x0940	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 350 :: 		
0x0942	0xBF00    NOP
;__Lib_I2C_12.c, 351 :: 		
0x0944	0xF2010418  ADDW	R4, R1, #24
0x0948	0x6824    LDR	R4, [R4, #0]
0x094A	0x0424    LSLS	R4, R4, #16
0x094C	0xEA400404  ORR	R4, R0, R4, LSL #0
0x0950	0x4620    MOV	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 352 :: 		
0x0952	0x2B01    CMP	R3, #1
0x0954	0xD105    BNE	L_I2Cx_Read50
;__Lib_I2C_12.c, 353 :: 		
0x0956	0x2501    MOVS	R5, #1
0x0958	0x680C    LDR	R4, [R1, #0]
0x095A	0xF3652449  BFI	R4, R5, #9, #1
0x095E	0x600C    STR	R4, [R1, #0]
0x0960	0xE004    B	L_I2Cx_Read51
L_I2Cx_Read50:
;__Lib_I2C_12.c, 355 :: 		
0x0962	0x2501    MOVS	R5, #1
0x0964	0x680C    LDR	R4, [R1, #0]
0x0966	0xF3652408  BFI	R4, R5, #8, #1
0x096A	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 356 :: 		
L_I2Cx_Read51:
;__Lib_I2C_12.c, 358 :: 		
0x096C	0x4C9F    LDR	R4, [PC, #636]
; timeout start address is: 20 (R5)
0x096E	0x6825    LDR	R5, [R4, #0]
; i end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; buf end address is: 24 (R6)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 20 (R5)
0x0970	0x4691    MOV	R9, R2
0x0972	0x4698    MOV	R8, R3
0x0974	0x4637    MOV	R7, R6
0x0976	0x460E    MOV	R6, R1
;__Lib_I2C_12.c, 359 :: 		
L_I2Cx_Read52:
; timeout start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 28 (R7)
; END_mode start address is: 32 (R8)
; i start address is: 36 (R9)
0x0978	0x499D    LDR	R1, [PC, #628]
0x097A	0x4630    MOV	R0, R6
0x097C	0xF7FFFDB4  BL	_ChekXForEvent+0
0x0980	0xB968    CBNZ	R0, L_I2Cx_Read53
;__Lib_I2C_12.c, 360 :: 		
0x0982	0x4C9A    LDR	R4, [PC, #616]
0x0984	0x6824    LDR	R4, [R4, #0]
0x0986	0xB14C    CBZ	R4, L__I2Cx_Read132
;__Lib_I2C_12.c, 361 :: 		
0x0988	0xB925    CBNZ	R5, L_I2Cx_Read55
; I2C_BASE end address is: 24 (R6)
; buf end address is: 28 (R7)
; END_mode end address is: 32 (R8)
; i end address is: 36 (R9)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 362 :: 		
0x098A	0x2003    MOVS	R0, #3
0x098C	0x4C93    LDR	R4, [PC, #588]
0x098E	0x6824    LDR	R4, [R4, #0]
0x0990	0x47A0    BLX	R4
;__Lib_I2C_12.c, 363 :: 		
0x0992	0xE1AD    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 364 :: 		
L_I2Cx_Read55:
;__Lib_I2C_12.c, 365 :: 		
; timeout start address is: 20 (R5)
; i start address is: 36 (R9)
; END_mode start address is: 32 (R8)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 24 (R6)
0x0994	0x1E6C    SUBS	R4, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
0x0996	0x4620    MOV	R0, R4
; timeout end address is: 0 (R0)
0x0998	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 366 :: 		
0x099A	0xE7FF    B	L_I2Cx_Read54
L__I2Cx_Read132:
;__Lib_I2C_12.c, 360 :: 		
;__Lib_I2C_12.c, 366 :: 		
L_I2Cx_Read54:
;__Lib_I2C_12.c, 367 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x099C	0xE7EC    B	L_I2Cx_Read52
L_I2Cx_Read53:
;__Lib_I2C_12.c, 368 :: 		
0x099E	0xEB070509  ADD	R5, R7, R9, LSL #0
; buf end address is: 28 (R7)
; i end address is: 36 (R9)
0x09A2	0xF2060410  ADDW	R4, R6, #16
0x09A6	0x6824    LDR	R4, [R4, #0]
0x09A8	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 369 :: 		
0x09AA	0xF1B80F01  CMP	R8, #1
0x09AE	0xD113    BNE	L_I2Cx_Read56
; END_mode end address is: 32 (R8)
;__Lib_I2C_12.c, 370 :: 		
0x09B0	0x4C8E    LDR	R4, [PC, #568]
; timeout start address is: 4 (R1)
0x09B2	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x09B4	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 371 :: 		
L_I2Cx_Read57:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x09B6	0x6805    LDR	R5, [R0, #0]
0x09B8	0xF3C52440  UBFX	R4, R5, #9, #1
0x09BC	0xB95C    CBNZ	R4, L_I2Cx_Read58
;__Lib_I2C_12.c, 372 :: 		
0x09BE	0x4C8B    LDR	R4, [PC, #556]
0x09C0	0x6824    LDR	R4, [R4, #0]
0x09C2	0xB13C    CBZ	R4, L__I2Cx_Read133
;__Lib_I2C_12.c, 373 :: 		
0x09C4	0xB921    CBNZ	R1, L_I2Cx_Read60
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 374 :: 		
0x09C6	0x2003    MOVS	R0, #3
0x09C8	0x4C84    LDR	R4, [PC, #528]
0x09CA	0x6824    LDR	R4, [R4, #0]
0x09CC	0x47A0    BLX	R4
;__Lib_I2C_12.c, 375 :: 		
0x09CE	0xE18F    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 376 :: 		
L_I2Cx_Read60:
;__Lib_I2C_12.c, 377 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x09D0	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 378 :: 		
0x09D2	0xE7FF    B	L_I2Cx_Read59
L__I2Cx_Read133:
;__Lib_I2C_12.c, 372 :: 		
;__Lib_I2C_12.c, 378 :: 		
L_I2Cx_Read59:
;__Lib_I2C_12.c, 379 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x09D4	0xE7EF    B	L_I2Cx_Read57
L_I2Cx_Read58:
;__Lib_I2C_12.c, 380 :: 		
0x09D6	0xE012    B	L_I2Cx_Read61
L_I2Cx_Read56:
;__Lib_I2C_12.c, 382 :: 		
; I2C_BASE start address is: 24 (R6)
0x09D8	0x4C84    LDR	R4, [PC, #528]
; timeout start address is: 4 (R1)
0x09DA	0x6821    LDR	R1, [R4, #0]
; I2C_BASE end address is: 24 (R6)
; timeout end address is: 4 (R1)
0x09DC	0x4630    MOV	R0, R6
;__Lib_I2C_12.c, 383 :: 		
L_I2Cx_Read62:
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x09DE	0x6805    LDR	R5, [R0, #0]
0x09E0	0xF3C52400  UBFX	R4, R5, #8, #1
0x09E4	0xB95C    CBNZ	R4, L_I2Cx_Read63
;__Lib_I2C_12.c, 384 :: 		
0x09E6	0x4C81    LDR	R4, [PC, #516]
0x09E8	0x6824    LDR	R4, [R4, #0]
0x09EA	0xB13C    CBZ	R4, L__I2Cx_Read134
;__Lib_I2C_12.c, 385 :: 		
0x09EC	0xB921    CBNZ	R1, L_I2Cx_Read65
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 386 :: 		
0x09EE	0x2003    MOVS	R0, #3
0x09F0	0x4C7A    LDR	R4, [PC, #488]
0x09F2	0x6824    LDR	R4, [R4, #0]
0x09F4	0x47A0    BLX	R4
;__Lib_I2C_12.c, 387 :: 		
0x09F6	0xE17B    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 388 :: 		
L_I2Cx_Read65:
;__Lib_I2C_12.c, 389 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE start address is: 0 (R0)
0x09F8	0x1E49    SUBS	R1, R1, #1
; timeout end address is: 4 (R1)
;__Lib_I2C_12.c, 390 :: 		
0x09FA	0xE7FF    B	L_I2Cx_Read64
L__I2Cx_Read134:
;__Lib_I2C_12.c, 384 :: 		
;__Lib_I2C_12.c, 390 :: 		
L_I2Cx_Read64:
;__Lib_I2C_12.c, 391 :: 		
; timeout start address is: 4 (R1)
; I2C_BASE end address is: 0 (R0)
; timeout end address is: 4 (R1)
0x09FC	0xE7EF    B	L_I2Cx_Read62
L_I2Cx_Read63:
;__Lib_I2C_12.c, 392 :: 		
L_I2Cx_Read61:
;__Lib_I2C_12.c, 393 :: 		
0x09FE	0xE177    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 395 :: 		
L_I2Cx_Read66:
;__Lib_I2C_12.c, 396 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; slave_address start address is: 28 (R7)
0x0A00	0x2501    MOVS	R5, #1
0x0A02	0x680C    LDR	R4, [R1, #0]
0x0A04	0xF365248A  BFI	R4, R5, #10, #1
0x0A08	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 397 :: 		
0x0A0A	0x2501    MOVS	R5, #1
0x0A0C	0x680C    LDR	R4, [R1, #0]
0x0A0E	0xF36524CB  BFI	R4, R5, #11, #1
0x0A12	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 398 :: 		
0x0A14	0xF2010510  ADDW	R5, R1, #16
0x0A18	0x007C    LSLS	R4, R7, #1
0x0A1A	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0A1C	0xF0440401  ORR	R4, R4, #1
0x0A20	0xB2A4    UXTH	R4, R4
0x0A22	0x602C    STR	R4, [R5, #0]
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0A24	0x464F    MOV	R7, R9
;__Lib_I2C_12.c, 399 :: 		
L_I2Cx_Read67:
; timeout start address is: 28 (R7)
; i start address is: 24 (R6)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0A26	0xF2010414  ADDW	R4, R1, #20
0x0A2A	0x6825    LDR	R5, [R4, #0]
0x0A2C	0xF3C50440  UBFX	R4, R5, #1, #1
0x0A30	0xB964    CBNZ	R4, L_I2Cx_Read68
;__Lib_I2C_12.c, 400 :: 		
0x0A32	0x4C6E    LDR	R4, [PC, #440]
0x0A34	0x6824    LDR	R4, [R4, #0]
0x0A36	0xB144    CBZ	R4, L__I2Cx_Read135
;__Lib_I2C_12.c, 401 :: 		
0x0A38	0xB927    CBNZ	R7, L_I2Cx_Read70
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 402 :: 		
0x0A3A	0x2003    MOVS	R0, #3
0x0A3C	0x4C67    LDR	R4, [PC, #412]
0x0A3E	0x6824    LDR	R4, [R4, #0]
0x0A40	0x47A0    BLX	R4
;__Lib_I2C_12.c, 403 :: 		
0x0A42	0xE155    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 404 :: 		
L_I2Cx_Read70:
;__Lib_I2C_12.c, 405 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x0A44	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0A46	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 406 :: 		
0x0A48	0xE7FF    B	L_I2Cx_Read69
L__I2Cx_Read135:
;__Lib_I2C_12.c, 400 :: 		
;__Lib_I2C_12.c, 406 :: 		
L_I2Cx_Read69:
;__Lib_I2C_12.c, 407 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0A4A	0xE7EC    B	L_I2Cx_Read67
L_I2Cx_Read68:
;__Lib_I2C_12.c, 408 :: 		
0x0A4C	0xF2010414  ADDW	R4, R1, #20
0x0A50	0x6820    LDR	R0, [R4, #0]
; temp start address is: 0 (R0)
;__Lib_I2C_12.c, 409 :: 		
0x0A52	0xBF00    NOP
;__Lib_I2C_12.c, 410 :: 		
0x0A54	0xF2010418  ADDW	R4, R1, #24
0x0A58	0x6824    LDR	R4, [R4, #0]
0x0A5A	0x0424    LSLS	R4, R4, #16
0x0A5C	0x4320    ORRS	R0, R4
; temp end address is: 0 (R0)
;__Lib_I2C_12.c, 411 :: 		
0x0A5E	0x2500    MOVS	R5, #0
0x0A60	0x680C    LDR	R4, [R1, #0]
0x0A62	0xF365248A  BFI	R4, R5, #10, #1
0x0A66	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 413 :: 		
0x0A68	0x4C60    LDR	R4, [PC, #384]
; timeout start address is: 28 (R7)
0x0A6A	0x6827    LDR	R7, [R4, #0]
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 414 :: 		
L_I2Cx_Read71:
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; buf start address is: 8 (R2)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
0x0A6C	0xF2010414  ADDW	R4, R1, #20
0x0A70	0x6825    LDR	R5, [R4, #0]
0x0A72	0xF3C50480  UBFX	R4, R5, #2, #1
0x0A76	0xB964    CBNZ	R4, L_I2Cx_Read72
;__Lib_I2C_12.c, 415 :: 		
0x0A78	0x4C5C    LDR	R4, [PC, #368]
0x0A7A	0x6824    LDR	R4, [R4, #0]
0x0A7C	0xB144    CBZ	R4, L__I2Cx_Read136
;__Lib_I2C_12.c, 416 :: 		
0x0A7E	0xB927    CBNZ	R7, L_I2Cx_Read74
; buf end address is: 8 (R2)
; i end address is: 24 (R6)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
; timeout end address is: 28 (R7)
;__Lib_I2C_12.c, 417 :: 		
0x0A80	0x2003    MOVS	R0, #3
0x0A82	0x4C56    LDR	R4, [PC, #344]
0x0A84	0x6824    LDR	R4, [R4, #0]
0x0A86	0x47A0    BLX	R4
;__Lib_I2C_12.c, 418 :: 		
0x0A88	0xE132    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 419 :: 		
L_I2Cx_Read74:
;__Lib_I2C_12.c, 420 :: 		
; timeout start address is: 28 (R7)
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
0x0A8A	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0A8C	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 421 :: 		
0x0A8E	0xE7FF    B	L_I2Cx_Read73
L__I2Cx_Read136:
;__Lib_I2C_12.c, 415 :: 		
;__Lib_I2C_12.c, 421 :: 		
L_I2Cx_Read73:
;__Lib_I2C_12.c, 422 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0A90	0xE7EC    B	L_I2Cx_Read71
L_I2Cx_Read72:
;__Lib_I2C_12.c, 423 :: 		
0x0A92	0x2B01    CMP	R3, #1
0x0A94	0xD105    BNE	L_I2Cx_Read75
;__Lib_I2C_12.c, 424 :: 		
0x0A96	0x2501    MOVS	R5, #1
0x0A98	0x680C    LDR	R4, [R1, #0]
0x0A9A	0xF3652449  BFI	R4, R5, #9, #1
0x0A9E	0x600C    STR	R4, [R1, #0]
0x0AA0	0xE004    B	L_I2Cx_Read76
L_I2Cx_Read75:
;__Lib_I2C_12.c, 426 :: 		
0x0AA2	0x2501    MOVS	R5, #1
0x0AA4	0x680C    LDR	R4, [R1, #0]
0x0AA6	0xF3652408  BFI	R4, R5, #8, #1
0x0AAA	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 427 :: 		
L_I2Cx_Read76:
;__Lib_I2C_12.c, 428 :: 		
0x0AAC	0x1995    ADDS	R5, R2, R6
0x0AAE	0xF2010410  ADDW	R4, R1, #16
0x0AB2	0x6824    LDR	R4, [R4, #0]
0x0AB4	0x702C    STRB	R4, [R5, #0]
0x0AB6	0x1C74    ADDS	R4, R6, #1
; i end address is: 24 (R6)
;__Lib_I2C_12.c, 429 :: 		
0x0AB8	0x1915    ADDS	R5, R2, R4
; buf end address is: 8 (R2)
0x0ABA	0xF2010410  ADDW	R4, R1, #16
0x0ABE	0x6824    LDR	R4, [R4, #0]
0x0AC0	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 430 :: 		
0x0AC2	0x2B01    CMP	R3, #1
0x0AC4	0xD114    BNE	L_I2Cx_Read77
; END_mode end address is: 12 (R3)
;__Lib_I2C_12.c, 431 :: 		
0x0AC6	0x4C49    LDR	R4, [PC, #292]
; timeout start address is: 8 (R2)
0x0AC8	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 432 :: 		
L_I2Cx_Read78:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0ACA	0x680D    LDR	R5, [R1, #0]
0x0ACC	0xF3C52440  UBFX	R4, R5, #9, #1
0x0AD0	0xB964    CBNZ	R4, L_I2Cx_Read79
;__Lib_I2C_12.c, 433 :: 		
0x0AD2	0x4C46    LDR	R4, [PC, #280]
0x0AD4	0x6824    LDR	R4, [R4, #0]
0x0AD6	0xB144    CBZ	R4, L__I2Cx_Read137
;__Lib_I2C_12.c, 434 :: 		
0x0AD8	0xB922    CBNZ	R2, L_I2Cx_Read81
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 435 :: 		
0x0ADA	0x2003    MOVS	R0, #3
0x0ADC	0x4C3F    LDR	R4, [PC, #252]
0x0ADE	0x6824    LDR	R4, [R4, #0]
0x0AE0	0x47A0    BLX	R4
;__Lib_I2C_12.c, 436 :: 		
0x0AE2	0xE105    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 437 :: 		
L_I2Cx_Read81:
;__Lib_I2C_12.c, 438 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x0AE4	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0AE6	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 439 :: 		
0x0AE8	0xE7FF    B	L_I2Cx_Read80
L__I2Cx_Read137:
;__Lib_I2C_12.c, 433 :: 		
;__Lib_I2C_12.c, 439 :: 		
L_I2Cx_Read80:
;__Lib_I2C_12.c, 440 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x0AEA	0xE7EE    B	L_I2Cx_Read78
L_I2Cx_Read79:
;__Lib_I2C_12.c, 441 :: 		
0x0AEC	0x4608    MOV	R0, R1
0x0AEE	0xE013    B	L_I2Cx_Read82
L_I2Cx_Read77:
;__Lib_I2C_12.c, 443 :: 		
0x0AF0	0x4C3E    LDR	R4, [PC, #248]
; timeout start address is: 8 (R2)
0x0AF2	0x6822    LDR	R2, [R4, #0]
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 444 :: 		
L_I2Cx_Read83:
; timeout start address is: 8 (R2)
; I2C_BASE start address is: 4 (R1)
0x0AF4	0x680D    LDR	R5, [R1, #0]
0x0AF6	0xF3C52400  UBFX	R4, R5, #8, #1
0x0AFA	0xB964    CBNZ	R4, L_I2Cx_Read84
;__Lib_I2C_12.c, 445 :: 		
0x0AFC	0x4C3B    LDR	R4, [PC, #236]
0x0AFE	0x6824    LDR	R4, [R4, #0]
0x0B00	0xB144    CBZ	R4, L__I2Cx_Read138
;__Lib_I2C_12.c, 446 :: 		
0x0B02	0xB922    CBNZ	R2, L_I2Cx_Read86
; timeout end address is: 8 (R2)
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 447 :: 		
0x0B04	0x2003    MOVS	R0, #3
0x0B06	0x4C35    LDR	R4, [PC, #212]
0x0B08	0x6824    LDR	R4, [R4, #0]
0x0B0A	0x47A0    BLX	R4
;__Lib_I2C_12.c, 448 :: 		
0x0B0C	0xE0F0    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 449 :: 		
L_I2Cx_Read86:
;__Lib_I2C_12.c, 450 :: 		
; I2C_BASE start address is: 4 (R1)
; timeout start address is: 8 (R2)
0x0B0E	0x1E50    SUBS	R0, R2, #1
; timeout end address is: 8 (R2)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0B10	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 451 :: 		
0x0B12	0xE7FF    B	L_I2Cx_Read85
L__I2Cx_Read138:
;__Lib_I2C_12.c, 445 :: 		
;__Lib_I2C_12.c, 451 :: 		
L_I2Cx_Read85:
;__Lib_I2C_12.c, 452 :: 		
; timeout start address is: 8 (R2)
; timeout end address is: 8 (R2)
0x0B14	0xE7EE    B	L_I2Cx_Read83
L_I2Cx_Read84:
;__Lib_I2C_12.c, 453 :: 		
0x0B16	0x4608    MOV	R0, R1
L_I2Cx_Read82:
; I2C_BASE end address is: 4 (R1)
;__Lib_I2C_12.c, 455 :: 		
; I2C_BASE start address is: 0 (R0)
0x0B18	0x2500    MOVS	R5, #0
0x0B1A	0x6804    LDR	R4, [R0, #0]
0x0B1C	0xF36524CB  BFI	R4, R5, #11, #1
0x0B20	0x6004    STR	R4, [R0, #0]
; I2C_BASE end address is: 0 (R0)
;__Lib_I2C_12.c, 457 :: 		
0x0B22	0xE0E5    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 459 :: 		
L_I2Cx_Read87:
;__Lib_I2C_12.c, 460 :: 		
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x0B24	0x2501    MOVS	R5, #1
0x0B26	0x680C    LDR	R4, [R1, #0]
0x0B28	0xF365248A  BFI	R4, R5, #10, #1
0x0B2C	0x600C    STR	R4, [R1, #0]
;__Lib_I2C_12.c, 461 :: 		
0x0B2E	0xF2010510  ADDW	R5, R1, #16
0x0B32	0x007C    LSLS	R4, R7, #1
0x0B34	0xB2A4    UXTH	R4, R4
; slave_address end address is: 28 (R7)
0x0B36	0xF0440401  ORR	R4, R4, #1
0x0B3A	0xB2A4    UXTH	R4, R4
0x0B3C	0x602C    STR	R4, [R5, #0]
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
0x0B3E	0x4646    MOV	R6, R8
0x0B40	0x46C8    MOV	R8, R9
0x0B42	0x4689    MOV	R9, R1
0x0B44	0x4617    MOV	R7, R2
0x0B46	0x461D    MOV	R5, R3
;__Lib_I2C_12.c, 462 :: 		
L_I2Cx_Read88:
; timeout start address is: 32 (R8)
; END_mode start address is: 20 (R5)
; count start address is: 24 (R6)
; buf start address is: 28 (R7)
; I2C_BASE start address is: 36 (R9)
0x0B48	0x492A    LDR	R1, [PC, #168]
0x0B4A	0x4648    MOV	R0, R9
0x0B4C	0xF7FFFCCC  BL	_ChekXForEvent+0
0x0B50	0xB978    CBNZ	R0, L_I2Cx_Read89
;__Lib_I2C_12.c, 463 :: 		
0x0B52	0x4C26    LDR	R4, [PC, #152]
0x0B54	0x6824    LDR	R4, [R4, #0]
0x0B56	0xB15C    CBZ	R4, L__I2Cx_Read139
;__Lib_I2C_12.c, 464 :: 		
0x0B58	0xF1B80F00  CMP	R8, #0
0x0B5C	0xD104    BNE	L_I2Cx_Read91
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; timeout end address is: 32 (R8)
; buf end address is: 28 (R7)
;__Lib_I2C_12.c, 465 :: 		
0x0B5E	0x2003    MOVS	R0, #3
0x0B60	0x4C1E    LDR	R4, [PC, #120]
0x0B62	0x6824    LDR	R4, [R4, #0]
0x0B64	0x47A0    BLX	R4
;__Lib_I2C_12.c, 466 :: 		
0x0B66	0xE0C3    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 467 :: 		
L_I2Cx_Read91:
;__Lib_I2C_12.c, 468 :: 		
; buf start address is: 28 (R7)
; timeout start address is: 32 (R8)
; I2C_BASE start address is: 36 (R9)
; count start address is: 24 (R6)
; END_mode start address is: 20 (R5)
0x0B68	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0B6C	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 469 :: 		
0x0B6E	0xE7FF    B	L_I2Cx_Read90
L__I2Cx_Read139:
;__Lib_I2C_12.c, 463 :: 		
;__Lib_I2C_12.c, 469 :: 		
L_I2Cx_Read90:
;__Lib_I2C_12.c, 470 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x0B70	0xE7EA    B	L_I2Cx_Read88
L_I2Cx_Read89:
;__Lib_I2C_12.c, 471 :: 		
; i start address is: 4 (R1)
0x0B72	0x2100    MOVS	R1, #0
; END_mode end address is: 20 (R5)
; count end address is: 24 (R6)
; I2C_BASE end address is: 36 (R9)
; i end address is: 4 (R1)
; buf end address is: 28 (R7)
0x0B74	0x46A8    MOV	R8, R5
0x0B76	0x464A    MOV	R2, R9
0x0B78	0x46B1    MOV	R9, R6
0x0B7A	0x463B    MOV	R3, R7
;__Lib_I2C_12.c, 472 :: 		
L_I2Cx_Read92:
; i start address is: 4 (R1)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
; count start address is: 36 (R9)
; END_mode start address is: 32 (R8)
0x0B7C	0xF1A90403  SUB	R4, R9, #3
0x0B80	0x42A1    CMP	R1, R4
0x0B82	0xD222    BCS	L_I2Cx_Read93
;__Lib_I2C_12.c, 473 :: 		
0x0B84	0x4C19    LDR	R4, [PC, #100]
; timeout start address is: 20 (R5)
0x0B86	0x6825    LDR	R5, [R4, #0]
; buf end address is: 12 (R3)
; count end address is: 36 (R9)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
0x0B88	0x468A    MOV	R10, R1
0x0B8A	0x4617    MOV	R7, R2
0x0B8C	0x461E    MOV	R6, R3
;__Lib_I2C_12.c, 474 :: 		
L_I2Cx_Read94:
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; count start address is: 36 (R9)
; buf start address is: 24 (R6)
; I2C_BASE start address is: 28 (R7)
; i start address is: 40 (R10)
0x0B8E	0x4918    LDR	R1, [PC, #96]
0x0B90	0x4638    MOV	R0, R7
0x0B92	0xF7FFFCA9  BL	_ChekXForEvent+0
0x0B96	0xB960    CBNZ	R0, L_I2Cx_Read95
;__Lib_I2C_12.c, 475 :: 		
0x0B98	0x4C14    LDR	R4, [PC, #80]
0x0B9A	0x6824    LDR	R4, [R4, #0]
0x0B9C	0xB144    CBZ	R4, L__I2Cx_Read140
;__Lib_I2C_12.c, 476 :: 		
0x0B9E	0xB925    CBNZ	R5, L_I2Cx_Read97
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; i end address is: 40 (R10)
; buf end address is: 24 (R6)
; END_mode end address is: 32 (R8)
; timeout end address is: 20 (R5)
;__Lib_I2C_12.c, 477 :: 		
0x0BA0	0x2003    MOVS	R0, #3
0x0BA2	0x4C0E    LDR	R4, [PC, #56]
0x0BA4	0x6824    LDR	R4, [R4, #0]
0x0BA6	0x47A0    BLX	R4
;__Lib_I2C_12.c, 478 :: 		
0x0BA8	0xE0A2    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 479 :: 		
L_I2Cx_Read97:
;__Lib_I2C_12.c, 480 :: 		
; timeout start address is: 20 (R5)
; END_mode start address is: 32 (R8)
; buf start address is: 24 (R6)
; i start address is: 40 (R10)
; I2C_BASE start address is: 28 (R7)
; count start address is: 36 (R9)
0x0BAA	0x1E68    SUBS	R0, R5, #1
; timeout end address is: 20 (R5)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0BAC	0x4605    MOV	R5, R0
;__Lib_I2C_12.c, 481 :: 		
0x0BAE	0xE7FF    B	L_I2Cx_Read96
L__I2Cx_Read140:
;__Lib_I2C_12.c, 475 :: 		
;__Lib_I2C_12.c, 481 :: 		
L_I2Cx_Read96:
;__Lib_I2C_12.c, 482 :: 		
; timeout start address is: 20 (R5)
; timeout end address is: 20 (R5)
0x0BB0	0xE7ED    B	L_I2Cx_Read94
L_I2Cx_Read95:
;__Lib_I2C_12.c, 483 :: 		
0x0BB2	0xEB06050A  ADD	R5, R6, R10, LSL #0
0x0BB6	0xF2070410  ADDW	R4, R7, #16
0x0BBA	0x6824    LDR	R4, [R4, #0]
0x0BBC	0x702C    STRB	R4, [R5, #0]
0x0BBE	0xF10A0401  ADD	R4, R10, #1
; i end address is: 40 (R10)
; i start address is: 4 (R1)
0x0BC2	0x4621    MOV	R1, R4
;__Lib_I2C_12.c, 484 :: 		
; count end address is: 36 (R9)
; I2C_BASE end address is: 28 (R7)
; buf end address is: 24 (R6)
0x0BC4	0x4633    MOV	R3, R6
0x0BC6	0x463A    MOV	R2, R7
0x0BC8	0xE7D8    B	L_I2Cx_Read92
L_I2Cx_Read93:
;__Lib_I2C_12.c, 485 :: 		
; I2C_BASE start address is: 8 (R2)
; buf start address is: 12 (R3)
0x0BCA	0x4C08    LDR	R4, [PC, #32]
0x0BCC	0xF000B814  B	#40
0x0BD0	0x54004000  	I2C1_CR1+0
0x0BD4	0x00482000  	__Lib_I2C_12__I2C1_TIMEOUT+0
0x0BD8	0x07642000  	_I2C1_Timeout_Ptr+0
0x0BDC	0x07602000  	_I2Cx_Timeout_Ptr+0
0x0BE0	0x58004000  	I2C2_CR1+0
0x0BE4	0x004C2000  	__Lib_I2C_12__I2C2_TIMEOUT+0
0x0BE8	0x07682000  	_I2C2_Timeout_Ptr+0
0x0BEC	0x00502000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0BF0	0x00400003  	#196672
0x0BF4	0x00020003  	#196610
; timeout start address is: 28 (R7)
0x0BF8	0x6827    LDR	R7, [R4, #0]
; buf end address is: 12 (R3)
; i end address is: 4 (R1)
; I2C_BASE end address is: 8 (R2)
; timeout end address is: 28 (R7)
; END_mode end address is: 32 (R8)
0x0BFA	0x9301    STR	R3, [SP, #4]
0x0BFC	0x460B    MOV	R3, R1
0x0BFE	0x4616    MOV	R6, R2
0x0C00	0x4642    MOV	R2, R8
0x0C02	0x9901    LDR	R1, [SP, #4]
;__Lib_I2C_12.c, 486 :: 		
L_I2Cx_Read98:
; timeout start address is: 28 (R7)
; END_mode start address is: 8 (R2)
; buf start address is: 4 (R1)
; I2C_BASE start address is: 24 (R6)
; i start address is: 12 (R3)
0x0C04	0xF2060414  ADDW	R4, R6, #20
0x0C08	0x6825    LDR	R5, [R4, #0]
0x0C0A	0xF3C50480  UBFX	R4, R5, #2, #1
0x0C0E	0xB964    CBNZ	R4, L_I2Cx_Read99
;__Lib_I2C_12.c, 487 :: 		
0x0C10	0x4C39    LDR	R4, [PC, #228]
0x0C12	0x6824    LDR	R4, [R4, #0]
0x0C14	0xB144    CBZ	R4, L__I2Cx_Read141
;__Lib_I2C_12.c, 488 :: 		
0x0C16	0xB927    CBNZ	R7, L_I2Cx_Read101
; END_mode end address is: 8 (R2)
; i end address is: 12 (R3)
; buf end address is: 4 (R1)
; timeout end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 489 :: 		
0x0C18	0x2003    MOVS	R0, #3
0x0C1A	0x4C38    LDR	R4, [PC, #224]
0x0C1C	0x6824    LDR	R4, [R4, #0]
0x0C1E	0x47A0    BLX	R4
;__Lib_I2C_12.c, 490 :: 		
0x0C20	0xE066    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 491 :: 		
L_I2Cx_Read101:
;__Lib_I2C_12.c, 492 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 28 (R7)
; buf start address is: 4 (R1)
; i start address is: 12 (R3)
; END_mode start address is: 8 (R2)
0x0C22	0x1E78    SUBS	R0, R7, #1
; timeout end address is: 28 (R7)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0C24	0x4607    MOV	R7, R0
;__Lib_I2C_12.c, 493 :: 		
0x0C26	0xE7FF    B	L_I2Cx_Read100
L__I2Cx_Read141:
;__Lib_I2C_12.c, 487 :: 		
;__Lib_I2C_12.c, 493 :: 		
L_I2Cx_Read100:
;__Lib_I2C_12.c, 494 :: 		
; timeout start address is: 28 (R7)
; timeout end address is: 28 (R7)
0x0C28	0xE7EC    B	L_I2Cx_Read98
L_I2Cx_Read99:
;__Lib_I2C_12.c, 495 :: 		
0x0C2A	0x2500    MOVS	R5, #0
0x0C2C	0x6834    LDR	R4, [R6, #0]
0x0C2E	0xF365248A  BFI	R4, R5, #10, #1
0x0C32	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 496 :: 		
0x0C34	0x18CD    ADDS	R5, R1, R3
0x0C36	0xF2060410  ADDW	R4, R6, #16
0x0C3A	0x6824    LDR	R4, [R4, #0]
0x0C3C	0x702C    STRB	R4, [R5, #0]
0x0C3E	0x1C58    ADDS	R0, R3, #1
; i end address is: 12 (R3)
; i start address is: 0 (R0)
;__Lib_I2C_12.c, 498 :: 		
0x0C40	0x4C2D    LDR	R4, [PC, #180]
; timeout start address is: 12 (R3)
0x0C42	0x6823    LDR	R3, [R4, #0]
; END_mode end address is: 8 (R2)
; timeout end address is: 12 (R3)
; i end address is: 0 (R0)
; buf end address is: 4 (R1)
; I2C_BASE end address is: 24 (R6)
0x0C44	0x4617    MOV	R7, R2
0x0C46	0x4602    MOV	R2, R0
;__Lib_I2C_12.c, 499 :: 		
L_I2Cx_Read102:
; timeout start address is: 12 (R3)
; i start address is: 8 (R2)
; I2C_BASE start address is: 24 (R6)
; buf start address is: 4 (R1)
; END_mode start address is: 28 (R7)
0x0C48	0xF2060414  ADDW	R4, R6, #20
0x0C4C	0x6825    LDR	R5, [R4, #0]
0x0C4E	0xF3C50480  UBFX	R4, R5, #2, #1
0x0C52	0xB964    CBNZ	R4, L_I2Cx_Read103
;__Lib_I2C_12.c, 500 :: 		
0x0C54	0x4C28    LDR	R4, [PC, #160]
0x0C56	0x6824    LDR	R4, [R4, #0]
0x0C58	0xB144    CBZ	R4, L__I2Cx_Read142
;__Lib_I2C_12.c, 501 :: 		
0x0C5A	0xB923    CBNZ	R3, L_I2Cx_Read105
; END_mode end address is: 28 (R7)
; timeout end address is: 12 (R3)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 502 :: 		
0x0C5C	0x2003    MOVS	R0, #3
0x0C5E	0x4C27    LDR	R4, [PC, #156]
0x0C60	0x6824    LDR	R4, [R4, #0]
0x0C62	0x47A0    BLX	R4
;__Lib_I2C_12.c, 503 :: 		
0x0C64	0xE044    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 504 :: 		
L_I2Cx_Read105:
;__Lib_I2C_12.c, 505 :: 		
; I2C_BASE start address is: 24 (R6)
; i start address is: 8 (R2)
; buf start address is: 4 (R1)
; timeout start address is: 12 (R3)
; END_mode start address is: 28 (R7)
0x0C66	0x1E58    SUBS	R0, R3, #1
; timeout end address is: 12 (R3)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0C68	0x4603    MOV	R3, R0
;__Lib_I2C_12.c, 506 :: 		
0x0C6A	0xE7FF    B	L_I2Cx_Read104
L__I2Cx_Read142:
;__Lib_I2C_12.c, 500 :: 		
;__Lib_I2C_12.c, 506 :: 		
L_I2Cx_Read104:
;__Lib_I2C_12.c, 507 :: 		
; timeout start address is: 12 (R3)
; timeout end address is: 12 (R3)
0x0C6C	0xE7EC    B	L_I2Cx_Read102
L_I2Cx_Read103:
;__Lib_I2C_12.c, 508 :: 		
0x0C6E	0x2F01    CMP	R7, #1
0x0C70	0xD107    BNE	L_I2Cx_Read106
; END_mode end address is: 28 (R7)
;__Lib_I2C_12.c, 509 :: 		
0x0C72	0x2501    MOVS	R5, #1
0x0C74	0x6834    LDR	R4, [R6, #0]
0x0C76	0xF3652449  BFI	R4, R5, #9, #1
0x0C7A	0x6034    STR	R4, [R6, #0]
0x0C7C	0x4610    MOV	R0, R2
0x0C7E	0x4632    MOV	R2, R6
0x0C80	0xE021    B	L_I2Cx_Read107
L_I2Cx_Read106:
;__Lib_I2C_12.c, 511 :: 		
0x0C82	0x2501    MOVS	R5, #1
0x0C84	0x6834    LDR	R4, [R6, #0]
0x0C86	0xF3652408  BFI	R4, R5, #8, #1
0x0C8A	0x6034    STR	R4, [R6, #0]
;__Lib_I2C_12.c, 513 :: 		
0x0C8C	0x4C1A    LDR	R4, [PC, #104]
; timeout start address is: 32 (R8)
0x0C8E	0xF8D48000  LDR	R8, [R4, #0]
; timeout end address is: 32 (R8)
; buf end address is: 4 (R1)
; i end address is: 8 (R2)
; I2C_BASE end address is: 24 (R6)
0x0C92	0x4617    MOV	R7, R2
0x0C94	0x460D    MOV	R5, R1
;__Lib_I2C_12.c, 514 :: 		
L_I2Cx_Read108:
; timeout start address is: 32 (R8)
; buf start address is: 20 (R5)
; I2C_BASE start address is: 24 (R6)
; i start address is: 28 (R7)
0x0C96	0x491A    LDR	R1, [PC, #104]
0x0C98	0x4630    MOV	R0, R6
0x0C9A	0xF7FFFC25  BL	_ChekXForEvent+0
0x0C9E	0xB978    CBNZ	R0, L_I2Cx_Read109
;__Lib_I2C_12.c, 515 :: 		
0x0CA0	0x4C15    LDR	R4, [PC, #84]
0x0CA2	0x6824    LDR	R4, [R4, #0]
0x0CA4	0xB15C    CBZ	R4, L__I2Cx_Read143
;__Lib_I2C_12.c, 516 :: 		
0x0CA6	0xF1B80F00  CMP	R8, #0
0x0CAA	0xD104    BNE	L_I2Cx_Read111
; buf end address is: 20 (R5)
; i end address is: 28 (R7)
; timeout end address is: 32 (R8)
; I2C_BASE end address is: 24 (R6)
;__Lib_I2C_12.c, 517 :: 		
0x0CAC	0x2003    MOVS	R0, #3
0x0CAE	0x4C13    LDR	R4, [PC, #76]
0x0CB0	0x6824    LDR	R4, [R4, #0]
0x0CB2	0x47A0    BLX	R4
;__Lib_I2C_12.c, 518 :: 		
0x0CB4	0xE01C    B	L_end_I2Cx_Read
;__Lib_I2C_12.c, 519 :: 		
L_I2Cx_Read111:
;__Lib_I2C_12.c, 520 :: 		
; I2C_BASE start address is: 24 (R6)
; timeout start address is: 32 (R8)
; i start address is: 28 (R7)
; buf start address is: 20 (R5)
0x0CB6	0xF1A80001  SUB	R0, R8, #1
; timeout end address is: 32 (R8)
; timeout start address is: 0 (R0)
; timeout end address is: 0 (R0)
0x0CBA	0x4680    MOV	R8, R0
;__Lib_I2C_12.c, 521 :: 		
0x0CBC	0xE7FF    B	L_I2Cx_Read110
L__I2Cx_Read143:
;__Lib_I2C_12.c, 515 :: 		
;__Lib_I2C_12.c, 521 :: 		
L_I2Cx_Read110:
;__Lib_I2C_12.c, 522 :: 		
; timeout start address is: 32 (R8)
; timeout end address is: 32 (R8)
0x0CBE	0xE7EA    B	L_I2Cx_Read108
L_I2Cx_Read109:
;__Lib_I2C_12.c, 523 :: 		
0x0CC0	0x4629    MOV	R1, R5
; i end address is: 28 (R7)
; I2C_BASE end address is: 24 (R6)
0x0CC2	0x4632    MOV	R2, R6
0x0CC4	0x4638    MOV	R0, R7
L_I2Cx_Read107:
; buf end address is: 20 (R5)
;__Lib_I2C_12.c, 524 :: 		
; i start address is: 0 (R0)
; I2C_BASE start address is: 8 (R2)
; buf start address is: 4 (R1)
0x0CC6	0x180D    ADDS	R5, R1, R0
0x0CC8	0xF2020410  ADDW	R4, R2, #16
0x0CCC	0x6824    LDR	R4, [R4, #0]
0x0CCE	0x702C    STRB	R4, [R5, #0]
0x0CD0	0x1C44    ADDS	R4, R0, #1
; i end address is: 0 (R0)
;__Lib_I2C_12.c, 525 :: 		
0x0CD2	0x190D    ADDS	R5, R1, R4
; buf end address is: 4 (R1)
0x0CD4	0xF2020410  ADDW	R4, R2, #16
; I2C_BASE end address is: 8 (R2)
0x0CD8	0x6824    LDR	R4, [R4, #0]
0x0CDA	0x702C    STRB	R4, [R5, #0]
;__Lib_I2C_12.c, 526 :: 		
0x0CDC	0xE008    B	L_I2Cx_Read44
;__Lib_I2C_12.c, 528 :: 		
L_I2Cx_Read43:
; I2C_BASE start address is: 4 (R1)
; END_mode start address is: 12 (R3)
; i start address is: 24 (R6)
; buf start address is: 8 (R2)
; timeout start address is: 36 (R9)
; count start address is: 32 (R8)
; slave_address start address is: 28 (R7)
0x0CDE	0xF1B80F01  CMP	R8, #1
0x0CE2	0xF43FAE07  BEQ	L_I2Cx_Read45
0x0CE6	0xF1B80F02  CMP	R8, #2
0x0CEA	0xF43FAE89  BEQ	L_I2Cx_Read66
; i end address is: 24 (R6)
0x0CEE	0xE719    B	L_I2Cx_Read87
; slave_address end address is: 28 (R7)
; count end address is: 32 (R8)
; timeout end address is: 36 (R9)
; buf end address is: 8 (R2)
; END_mode end address is: 12 (R3)
; I2C_BASE end address is: 4 (R1)
L_I2Cx_Read44:
;__Lib_I2C_12.c, 529 :: 		
L_end_I2Cx_Read:
0x0CF0	0xF8DDE000  LDR	LR, [SP, #0]
0x0CF4	0xB002    ADD	SP, SP, #8
0x0CF6	0x4770    BX	LR
0x0CF8	0x00502000  	__Lib_I2C_12__I2Cx_TIMEOUT+0
0x0CFC	0x07602000  	_I2Cx_Timeout_Ptr+0
0x0D00	0x00010003  	#196609
; end of _I2Cx_Read
_I2C2_Read:
;__Lib_I2C_12.c, 582 :: 		
; END_mode start address is: 12 (R3)
; count start address is: 8 (R2)
; buf start address is: 4 (R1)
; slave_address start address is: 0 (R0)
0x1408	0xB081    SUB	SP, SP, #4
0x140A	0xF8CDE000  STR	LR, [SP, #0]
; END_mode end address is: 12 (R3)
; count end address is: 8 (R2)
; buf end address is: 4 (R1)
; slave_address end address is: 0 (R0)
; slave_address start address is: 0 (R0)
; buf start address is: 4 (R1)
; count start address is: 8 (R2)
; END_mode start address is: 12 (R3)
;__Lib_I2C_12.c, 583 :: 		
0x140E	0xB408    PUSH	(R3)
; count end address is: 8 (R2)
0x1410	0x4613    MOV	R3, R2
0x1412	0x460A    MOV	R2, R1
; buf end address is: 4 (R1)
0x1414	0xB2C1    UXTB	R1, R0
; slave_address end address is: 0 (R0)
0x1416	0x4804    LDR	R0, [PC, #16]
; END_mode end address is: 12 (R3)
0x1418	0xF7FFFA46  BL	_I2Cx_Read+0
0x141C	0xB001    ADD	SP, SP, #4
;__Lib_I2C_12.c, 584 :: 		
L_end_I2C2_Read:
0x141E	0xF8DDE000  LDR	LR, [SP, #0]
0x1422	0xB001    ADD	SP, SP, #4
0x1424	0x4770    BX	LR
0x1426	0xBF00    NOP
0x1428	0x58004000  	I2C2_CR1+0
; end of _I2C2_Read
__irgrid_driver__set_trim:
;__irgrid_driver.c, 417 :: 		static void _set_trim()
0x2BEC	0xB083    SUB	SP, SP, #12
0x2BEE	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid_driver.c, 421 :: 		tmp[0] = 0x04;
0x2BF2	0xAB01    ADD	R3, SP, #4
0x2BF4	0x2004    MOVS	R0, #4
0x2BF6	0x7018    STRB	R0, [R3, #0]
;__irgrid_driver.c, 422 :: 		tmp[1] = (uint8_t) _eeprom_data[_IRGRID_OSC_TRIM_VALUE] - 0xAA;
0x2BF8	0x1C59    ADDS	R1, R3, #1
0x2BFA	0x4A0D    LDR	R2, [PC, #52]
0x2BFC	0x7810    LDRB	R0, [R2, #0]
0x2BFE	0x38AA    SUBS	R0, #170
0x2C00	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 423 :: 		tmp[2] = _eeprom_data[_IRGRID_OSC_TRIM_VALUE];
0x2C02	0x1C99    ADDS	R1, R3, #2
0x2C04	0x4610    MOV	R0, R2
0x2C06	0x7800    LDRB	R0, [R0, #0]
0x2C08	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 424 :: 		tmp[3] = 0x56;
0x2C0A	0x1CD9    ADDS	R1, R3, #3
0x2C0C	0x2056    MOVS	R0, #86
0x2C0E	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 425 :: 		tmp[4] = 0x00;
0x2C10	0x1D19    ADDS	R1, R3, #4
0x2C12	0x2000    MOVS	R0, #0
0x2C14	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 427 :: 		hal_i2cStart();
0x2C16	0xF7FEFF65  BL	__irgrid_driver_hal_i2cStart+0
;__irgrid_driver.c, 428 :: 		hal_i2cWrite(_slaveRAM, tmp, 5, END_MODE_STOP);
0x2C1A	0xA901    ADD	R1, SP, #4
0x2C1C	0x4805    LDR	R0, [PC, #20]
0x2C1E	0x7800    LDRB	R0, [R0, #0]
0x2C20	0x2301    MOVS	R3, #1
0x2C22	0x2205    MOVS	R2, #5
0x2C24	0xF7FFF94E  BL	__irgrid_driver_hal_i2cWrite+0
;__irgrid_driver.c, 429 :: 		}
L_end__set_trim:
0x2C28	0xF8DDE000  LDR	LR, [SP, #0]
0x2C2C	0xB003    ADD	SP, SP, #12
0x2C2E	0x4770    BX	LR
0x2C30	0x03972000  	__irgrid_driver__eeprom_data+247
0x2C34	0x00472000  	__irgrid_driver__slaveRAM+0
; end of __irgrid_driver__set_trim
__irgrid_driver__set_cgf:
;__irgrid_driver.c, 370 :: 		static void _set_cgf()
0x2B14	0xB083    SUB	SP, SP, #12
0x2B16	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid_driver.c, 376 :: 		switch (_refresh_rate)
0x2B1A	0xE00F    B	L___irgrid_driver__set_cgf32
;__irgrid_driver.c, 378 :: 		case 0:
L___irgrid_driver__set_cgf34:
;__irgrid_driver.c, 379 :: 		Hz_LSB = 0x3F;
; Hz_LSB start address is: 12 (R3)
0x2B1C	0x233F    MOVS	R3, #63
;__irgrid_driver.c, 380 :: 		break;
; Hz_LSB end address is: 12 (R3)
0x2B1E	0xE02A    B	L___irgrid_driver__set_cgf33
;__irgrid_driver.c, 381 :: 		case 1:
L___irgrid_driver__set_cgf35:
;__irgrid_driver.c, 382 :: 		Hz_LSB = 0x3E;
; Hz_LSB start address is: 12 (R3)
0x2B20	0x233E    MOVS	R3, #62
;__irgrid_driver.c, 383 :: 		break;
; Hz_LSB end address is: 12 (R3)
0x2B22	0xE028    B	L___irgrid_driver__set_cgf33
;__irgrid_driver.c, 384 :: 		case 2:
L___irgrid_driver__set_cgf36:
;__irgrid_driver.c, 385 :: 		Hz_LSB = 0x3D;
; Hz_LSB start address is: 12 (R3)
0x2B24	0x233D    MOVS	R3, #61
;__irgrid_driver.c, 386 :: 		break;
; Hz_LSB end address is: 12 (R3)
0x2B26	0xE026    B	L___irgrid_driver__set_cgf33
;__irgrid_driver.c, 387 :: 		case 4:
L___irgrid_driver__set_cgf37:
;__irgrid_driver.c, 388 :: 		Hz_LSB = 0x3C;
; Hz_LSB start address is: 12 (R3)
0x2B28	0x233C    MOVS	R3, #60
;__irgrid_driver.c, 389 :: 		break;
; Hz_LSB end address is: 12 (R3)
0x2B2A	0xE024    B	L___irgrid_driver__set_cgf33
;__irgrid_driver.c, 390 :: 		case 8:
L___irgrid_driver__set_cgf38:
;__irgrid_driver.c, 391 :: 		Hz_LSB = 0x3B;
; Hz_LSB start address is: 12 (R3)
0x2B2C	0x233B    MOVS	R3, #59
;__irgrid_driver.c, 392 :: 		break;
; Hz_LSB end address is: 12 (R3)
0x2B2E	0xE022    B	L___irgrid_driver__set_cgf33
;__irgrid_driver.c, 393 :: 		case 16:
L___irgrid_driver__set_cgf39:
;__irgrid_driver.c, 394 :: 		Hz_LSB = 0x3A;
; Hz_LSB start address is: 12 (R3)
0x2B30	0x233A    MOVS	R3, #58
;__irgrid_driver.c, 395 :: 		break;
; Hz_LSB end address is: 12 (R3)
0x2B32	0xE020    B	L___irgrid_driver__set_cgf33
;__irgrid_driver.c, 396 :: 		case 32:
L___irgrid_driver__set_cgf40:
;__irgrid_driver.c, 397 :: 		Hz_LSB = 0x39;
; Hz_LSB start address is: 12 (R3)
0x2B34	0x2339    MOVS	R3, #57
;__irgrid_driver.c, 398 :: 		break;
; Hz_LSB end address is: 12 (R3)
0x2B36	0xE01E    B	L___irgrid_driver__set_cgf33
;__irgrid_driver.c, 399 :: 		default:
L___irgrid_driver__set_cgf41:
;__irgrid_driver.c, 400 :: 		Hz_LSB = 0x3E;
; Hz_LSB start address is: 12 (R3)
0x2B38	0x233E    MOVS	R3, #62
;__irgrid_driver.c, 401 :: 		break;
; Hz_LSB end address is: 12 (R3)
0x2B3A	0xE01C    B	L___irgrid_driver__set_cgf33
;__irgrid_driver.c, 402 :: 		}
L___irgrid_driver__set_cgf32:
0x2B3C	0x4820    LDR	R0, [PC, #128]
0x2B3E	0x7800    LDRB	R0, [R0, #0]
0x2B40	0x2800    CMP	R0, #0
0x2B42	0xD0EB    BEQ	L___irgrid_driver__set_cgf34
0x2B44	0x481E    LDR	R0, [PC, #120]
0x2B46	0x7800    LDRB	R0, [R0, #0]
0x2B48	0x2801    CMP	R0, #1
0x2B4A	0xD0E9    BEQ	L___irgrid_driver__set_cgf35
0x2B4C	0x481C    LDR	R0, [PC, #112]
0x2B4E	0x7800    LDRB	R0, [R0, #0]
0x2B50	0x2802    CMP	R0, #2
0x2B52	0xD0E7    BEQ	L___irgrid_driver__set_cgf36
0x2B54	0x481A    LDR	R0, [PC, #104]
0x2B56	0x7800    LDRB	R0, [R0, #0]
0x2B58	0x2804    CMP	R0, #4
0x2B5A	0xD0E5    BEQ	L___irgrid_driver__set_cgf37
0x2B5C	0x4818    LDR	R0, [PC, #96]
0x2B5E	0x7800    LDRB	R0, [R0, #0]
0x2B60	0x2808    CMP	R0, #8
0x2B62	0xD0E3    BEQ	L___irgrid_driver__set_cgf38
0x2B64	0x4816    LDR	R0, [PC, #88]
0x2B66	0x7800    LDRB	R0, [R0, #0]
0x2B68	0x2810    CMP	R0, #16
0x2B6A	0xD0E1    BEQ	L___irgrid_driver__set_cgf39
0x2B6C	0x4814    LDR	R0, [PC, #80]
0x2B6E	0x7800    LDRB	R0, [R0, #0]
0x2B70	0x2820    CMP	R0, #32
0x2B72	0xD0DF    BEQ	L___irgrid_driver__set_cgf40
0x2B74	0xE7E0    B	L___irgrid_driver__set_cgf41
L___irgrid_driver__set_cgf33:
;__irgrid_driver.c, 404 :: 		Hz_MSB = 0x46;
; Hz_LSB start address is: 12 (R3)
; Hz_MSB start address is: 16 (R4)
0x2B76	0x2446    MOVS	R4, #70
;__irgrid_driver.c, 406 :: 		tmp[0] = 0x03;
0x2B78	0xAA01    ADD	R2, SP, #4
0x2B7A	0x2003    MOVS	R0, #3
0x2B7C	0x7010    STRB	R0, [R2, #0]
;__irgrid_driver.c, 407 :: 		tmp[1] = (uint8_t)Hz_LSB - 0x55;
0x2B7E	0x1C51    ADDS	R1, R2, #1
0x2B80	0xF2A30055  SUBW	R0, R3, #85
0x2B84	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 408 :: 		tmp[2] = (Hz_LSB);
0x2B86	0x1C90    ADDS	R0, R2, #2
0x2B88	0x7003    STRB	R3, [R0, #0]
; Hz_LSB end address is: 12 (R3)
;__irgrid_driver.c, 409 :: 		tmp[3] = Hz_MSB - 0x55;
0x2B8A	0x1CD1    ADDS	R1, R2, #3
0x2B8C	0xF2A40055  SUBW	R0, R4, #85
0x2B90	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 410 :: 		tmp[4] = Hz_MSB;
0x2B92	0x1D10    ADDS	R0, R2, #4
0x2B94	0x7004    STRB	R4, [R0, #0]
; Hz_MSB end address is: 16 (R4)
;__irgrid_driver.c, 412 :: 		hal_i2cStart();
0x2B96	0xF7FEFFA5  BL	__irgrid_driver_hal_i2cStart+0
;__irgrid_driver.c, 413 :: 		hal_i2cWrite(_slaveRAM, tmp, 5, END_MODE_STOP);
0x2B9A	0xA901    ADD	R1, SP, #4
0x2B9C	0x4809    LDR	R0, [PC, #36]
0x2B9E	0x7800    LDRB	R0, [R0, #0]
0x2BA0	0x2301    MOVS	R3, #1
0x2BA2	0x2205    MOVS	R2, #5
0x2BA4	0xF7FFF98E  BL	__irgrid_driver_hal_i2cWrite+0
;__irgrid_driver.c, 414 :: 		resolution = (_get_cfg() & 0x30) >> 4;
0x2BA8	0xF7FEFFDC  BL	__irgrid_driver__get_cfg+0
0x2BAC	0xF0000030  AND	R0, R0, #48
0x2BB0	0xB280    UXTH	R0, R0
0x2BB2	0x0901    LSRS	R1, R0, #4
0x2BB4	0x4804    LDR	R0, [PC, #16]
0x2BB6	0x8001    STRH	R1, [R0, #0]
;__irgrid_driver.c, 415 :: 		}
L_end__set_cgf:
0x2BB8	0xF8DDE000  LDR	LR, [SP, #0]
0x2BBC	0xB003    ADD	SP, SP, #12
0x2BBE	0x4770    BX	LR
0x2BC0	0x074C2000  	__irgrid_driver__refresh_rate+0
0x2BC4	0x00472000  	__irgrid_driver__slaveRAM+0
0x2BC8	0x03A42000  	__irgrid_driver_resolution+0
; end of __irgrid_driver__set_cgf
__irgrid_driver__get_cfg:
;__irgrid_driver.c, 494 :: 		static uint16_t _get_cfg()
0x1B64	0xB083    SUB	SP, SP, #12
0x1B66	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid_driver.c, 500 :: 		tmp[0] = 0x02;
0x1B6A	0xF10D0206  ADD	R2, SP, #6
0x1B6E	0x2002    MOVS	R0, #2
0x1B70	0x7010    STRB	R0, [R2, #0]
;__irgrid_driver.c, 501 :: 		tmp[1] = 0x92;
0x1B72	0x1C51    ADDS	R1, R2, #1
0x1B74	0x2092    MOVS	R0, #146
0x1B76	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 502 :: 		tmp[2] = 0x00;
0x1B78	0x1C91    ADDS	R1, R2, #2
0x1B7A	0x2000    MOVS	R0, #0
0x1B7C	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 503 :: 		tmp[3] = 0x01;
0x1B7E	0x1CD1    ADDS	R1, R2, #3
0x1B80	0x2001    MOVS	R0, #1
0x1B82	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 505 :: 		hal_i2cStart();
0x1B84	0xF7FFFFAE  BL	__irgrid_driver_hal_i2cStart+0
;__irgrid_driver.c, 506 :: 		hal_i2cWrite(_slaveRAM, tmp, 4, END_MODE_RESTART);
0x1B88	0xF10D0106  ADD	R1, SP, #6
0x1B8C	0x480C    LDR	R0, [PC, #48]
0x1B8E	0x7800    LDRB	R0, [R0, #0]
0x1B90	0x2300    MOVS	R3, #0
0x1B92	0x2204    MOVS	R2, #4
0x1B94	0xF000F996  BL	__irgrid_driver_hal_i2cWrite+0
;__irgrid_driver.c, 507 :: 		hal_i2cRead(_slaveRAM, rd, 2, END_MODE_STOP );
0x1B98	0xA901    ADD	R1, SP, #4
0x1B9A	0x4809    LDR	R0, [PC, #36]
0x1B9C	0x7800    LDRB	R0, [R0, #0]
0x1B9E	0x2301    MOVS	R3, #1
0x1BA0	0x2202    MOVS	R2, #2
0x1BA2	0xF7FFFF47  BL	__irgrid_driver_hal_i2cRead+0
;__irgrid_driver.c, 509 :: 		config = ((uint16_t) (rd[1] << 8) | rd[0]);
0x1BA6	0xAA01    ADD	R2, SP, #4
0x1BA8	0x1C50    ADDS	R0, R2, #1
0x1BAA	0x7800    LDRB	R0, [R0, #0]
0x1BAC	0x0201    LSLS	R1, R0, #8
0x1BAE	0xB289    UXTH	R1, R1
0x1BB0	0x7810    LDRB	R0, [R2, #0]
0x1BB2	0xEA410000  ORR	R0, R1, R0, LSL #0
;__irgrid_driver.c, 510 :: 		return config;
;__irgrid_driver.c, 511 :: 		}
L_end__get_cfg:
0x1BB6	0xF8DDE000  LDR	LR, [SP, #0]
0x1BBA	0xB003    ADD	SP, SP, #12
0x1BBC	0x4770    BX	LR
0x1BBE	0xBF00    NOP
0x1BC0	0x00472000  	__irgrid_driver__slaveRAM+0
; end of __irgrid_driver__get_cfg
_mikrobus_logWrite:
;easymx_v7_STM32F107VC.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x2F54	0xB083    SUB	SP, SP, #12
0x2F56	0xF8CDE000  STR	LR, [SP, #0]
0x2F5A	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x2F5C	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_STM32F107VC.c, 322 :: 		uint8_t row = 13;
0x2F5E	0x220D    MOVS	R2, #13
0x2F60	0xF88D2008  STRB	R2, [SP, #8]
0x2F64	0x220A    MOVS	R2, #10
0x2F66	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_STM32F107VC.c, 323 :: 		uint8_t line = 10;
;easymx_v7_STM32F107VC.c, 324 :: 		switch( format )
0x2F6A	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_STM32F107VC.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x2F6C	0xF7FFFE2E  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 328 :: 		break;
0x2F70	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_STM32F107VC.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x2F72	0x7802    LDRB	R2, [R0, #0]
0x2F74	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_STM32F107VC.c, 332 :: 		_log_write( ptr );
0x2F76	0x9001    STR	R0, [SP, #4]
0x2F78	0xF7FFFE28  BL	easymx_v7_STM32F107VC__log_write+0
0x2F7C	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 333 :: 		ptr++;
0x2F7E	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x2F80	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_STM32F107VC.c, 335 :: 		break;
0x2F82	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_STM32F107VC.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x2F84	0x7802    LDRB	R2, [R0, #0]
0x2F86	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_STM32F107VC.c, 339 :: 		_log_write( ptr );
0x2F88	0x9001    STR	R0, [SP, #4]
0x2F8A	0xF7FFFE1F  BL	easymx_v7_STM32F107VC__log_write+0
0x2F8E	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 340 :: 		ptr++;
0x2F90	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x2F92	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_STM32F107VC.c, 342 :: 		_log_write( &row );
0x2F94	0xAA02    ADD	R2, SP, #8
0x2F96	0x4610    MOV	R0, R2
0x2F98	0xF7FFFE18  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 343 :: 		_log_write( &line );
0x2F9C	0xF10D0209  ADD	R2, SP, #9
0x2FA0	0x4610    MOV	R0, R2
0x2FA2	0xF7FFFE13  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 344 :: 		break;
0x2FA6	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_STM32F107VC.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x2FA8	0x2006    MOVS	R0, #6
0x2FAA	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_STM32F107VC.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x2FAC	0x2900    CMP	R1, #0
0x2FAE	0xD0DD    BEQ	L_mikrobus_logWrite97
0x2FB0	0x2901    CMP	R1, #1
0x2FB2	0xD0DE    BEQ	L_mikrobus_logWrite98
0x2FB4	0x2902    CMP	R1, #2
0x2FB6	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x2FB8	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_STM32F107VC.c, 348 :: 		return 0;
0x2FBA	0x2000    MOVS	R0, #0
;easymx_v7_STM32F107VC.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x2FBC	0xF8DDE000  LDR	LR, [SP, #0]
0x2FC0	0xB003    ADD	SP, SP, #12
0x2FC2	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_STM32F107VC__log_write:
;__em_f107vc_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x2BCC	0xB081    SUB	SP, SP, #4
0x2BCE	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_f107vc_log.c, 19 :: 		logger( *data_ );
0x2BD2	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x2BD4	0xB2CC    UXTB	R4, R1
0x2BD6	0xB2A0    UXTH	R0, R4
0x2BD8	0x4C03    LDR	R4, [PC, #12]
0x2BDA	0x6824    LDR	R4, [R4, #0]
0x2BDC	0x47A0    BLX	R4
;__em_f107vc_log.c, 20 :: 		return 0;
0x2BDE	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 21 :: 		}
L_end__log_write:
0x2BE0	0xF8DDE000  LDR	LR, [SP, #0]
0x2BE4	0xB001    ADD	SP, SP, #4
0x2BE6	0x4770    BX	LR
0x2BE8	0x01942000  	_logger+0
; end of easymx_v7_STM32F107VC__log_write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x1BC4	0xB081    SUB	SP, SP, #4
0x1BC6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x1BCA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1BCC	0x4803    LDR	R0, [PC, #12]
0x1BCE	0xF7FFFC0B  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x1BD2	0xF8DDE000  LDR	LR, [SP, #0]
0x1BD6	0xB001    ADD	SP, SP, #4
0x1BD8	0x4770    BX	LR
0x1BDA	0xBF00    NOP
0x1BDC	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x13E8	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x13EA	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x13EE	0x4601    MOV	R1, R0
0x13F0	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x13F4	0x680B    LDR	R3, [R1, #0]
0x13F6	0xF3C312C0  UBFX	R2, R3, #7, #1
0x13FA	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x13FC	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x13FE	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x1400	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x1402	0xB001    ADD	SP, SP, #4
0x1404	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45.c, 45 :: 		
; _data start address is: 0 (R0)
0x1BE0	0xB081    SUB	SP, SP, #4
0x1BE2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 46 :: 		
0x1BE6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1BE8	0x4803    LDR	R0, [PC, #12]
0x1BEA	0xF7FFFBFD  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 47 :: 		
L_end_UART2_Write:
0x1BEE	0xF8DDE000  LDR	LR, [SP, #0]
0x1BF2	0xB001    ADD	SP, SP, #4
0x1BF4	0x4770    BX	LR
0x1BF6	0xBF00    NOP
0x1BF8	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45.c, 49 :: 		
; _data start address is: 0 (R0)
0x1B10	0xB081    SUB	SP, SP, #4
0x1B12	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 50 :: 		
0x1B16	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1B18	0x4803    LDR	R0, [PC, #12]
0x1B1A	0xF7FFFC65  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 51 :: 		
L_end_UART3_Write:
0x1B1E	0xF8DDE000  LDR	LR, [SP, #0]
0x1B22	0xB001    ADD	SP, SP, #4
0x1B24	0x4770    BX	LR
0x1B26	0xBF00    NOP
0x1B28	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45.c, 53 :: 		
; _data start address is: 0 (R0)
0x1B2C	0xB081    SUB	SP, SP, #4
0x1B2E	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 54 :: 		
0x1B32	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1B34	0x4803    LDR	R0, [PC, #12]
0x1B36	0xF7FFFC57  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 55 :: 		
L_end_UART4_Write:
0x1B3A	0xF8DDE000  LDR	LR, [SP, #0]
0x1B3E	0xB001    ADD	SP, SP, #4
0x1B40	0x4770    BX	LR
0x1B42	0xBF00    NOP
0x1B44	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45.c, 57 :: 		
; _data start address is: 0 (R0)
0x1B48	0xB081    SUB	SP, SP, #4
0x1B4A	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 58 :: 		
0x1B4E	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x1B50	0x4803    LDR	R0, [PC, #12]
0x1B52	0xF7FFFC49  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 59 :: 		
L_end_UART5_Write:
0x1B56	0xF8DDE000  LDR	LR, [SP, #0]
0x1B5A	0xB001    ADD	SP, SP, #4
0x1B5C	0x4770    BX	LR
0x1B5E	0xBF00    NOP
0x1B60	0x50004000  	UART5_SR+0
; end of _UART5_Write
_applicationTask:
;Click_IR_Grid_STM.c, 49 :: 		void applicationTask()
0x3178	0xB082    SUB	SP, SP, #8
0x317A	0xF8CDE000  STR	LR, [SP, #0]
;Click_IR_Grid_STM.c, 55 :: 		if( 1 != irgrid_measure() )
0x317E	0xF7FFFD95  BL	_irgrid_measure+0
0x3182	0x2801    CMP	R0, #1
0x3184	0xD002    BEQ	L_applicationTask4
;Click_IR_Grid_STM.c, 57 :: 		irgrid_get_temperature( &ir_tmp[ 0 ] );
0x3186	0x482D    LDR	R0, [PC, #180]
0x3188	0xF7FFFDDA  BL	_irgrid_get_temperature+0
;Click_IR_Grid_STM.c, 58 :: 		}
L_applicationTask4:
;Click_IR_Grid_STM.c, 60 :: 		for (rc = 0; rc < 4; rc++)
0x318C	0x2000    MOVS	R0, #0
0x318E	0xF88D0004  STRB	R0, [SP, #4]
L_applicationTask5:
0x3192	0xF89D0004  LDRB	R0, [SP, #4]
0x3196	0x2804    CMP	R0, #4
0x3198	0xD234    BCS	L_applicationTask6
;Click_IR_Grid_STM.c, 62 :: 		for (cc = 0; cc < 16; cc++)
0x319A	0x2000    MOVS	R0, #0
0x319C	0xF88D0005  STRB	R0, [SP, #5]
L_applicationTask8:
0x31A0	0xF89D0005  LDRB	R0, [SP, #5]
0x31A4	0x2810    CMP	R0, #16
0x31A6	0xD223    BCS	L_applicationTask9
;Click_IR_Grid_STM.c, 64 :: 		i = (cc * 4) + rc;
0x31A8	0xF89D0005  LDRB	R0, [SP, #5]
0x31AC	0x0081    LSLS	R1, R0, #2
0x31AE	0xB209    SXTH	R1, R1
0x31B0	0xF89D0004  LDRB	R0, [SP, #4]
0x31B4	0x1808    ADDS	R0, R1, R0
0x31B6	0xB200    SXTH	R0, R0
;Click_IR_Grid_STM.c, 66 :: 		FloatToStr( ir_tmp[ i ], txt );
0x31B8	0xB2C0    UXTB	R0, R0
0x31BA	0x0081    LSLS	R1, R0, #2
0x31BC	0x481F    LDR	R0, [PC, #124]
0x31BE	0x1840    ADDS	R0, R0, R1
0x31C0	0x6800    LDR	R0, [R0, #0]
0x31C2	0x491F    LDR	R1, [PC, #124]
0x31C4	0xF7FFFDCC  BL	_FloatToStr+0
;Click_IR_Grid_STM.c, 67 :: 		Ltrim( txt );
0x31C8	0x481D    LDR	R0, [PC, #116]
0x31CA	0xF7FFFF1F  BL	_Ltrim+0
;Click_IR_Grid_STM.c, 68 :: 		txt[ 6 ] = 0;
0x31CE	0x2100    MOVS	R1, #0
0x31D0	0x481C    LDR	R0, [PC, #112]
0x31D2	0x7001    STRB	R1, [R0, #0]
;Click_IR_Grid_STM.c, 69 :: 		mikrobus_logWrite( txt, _LOG_TEXT );
0x31D4	0x2101    MOVS	R1, #1
0x31D6	0x481A    LDR	R0, [PC, #104]
0x31D8	0xF7FFFEBC  BL	_mikrobus_logWrite+0
;Click_IR_Grid_STM.c, 70 :: 		mikrobus_logWrite( "\t", _LOG_TEXT );
0x31DC	0x481A    LDR	R0, [PC, #104]
0x31DE	0x2101    MOVS	R1, #1
0x31E0	0xF7FFFEB8  BL	_mikrobus_logWrite+0
;Click_IR_Grid_STM.c, 62 :: 		for (cc = 0; cc < 16; cc++)
0x31E4	0xF89D0005  LDRB	R0, [SP, #5]
0x31E8	0x1C40    ADDS	R0, R0, #1
0x31EA	0xF88D0005  STRB	R0, [SP, #5]
;Click_IR_Grid_STM.c, 71 :: 		}
0x31EE	0xE7D7    B	L_applicationTask8
L_applicationTask9:
;Click_IR_Grid_STM.c, 72 :: 		mikrobus_logWrite( " " ,_LOG_LINE );
0x31F0	0x4816    LDR	R0, [PC, #88]
0x31F2	0x2102    MOVS	R1, #2
0x31F4	0xF7FFFEAE  BL	_mikrobus_logWrite+0
;Click_IR_Grid_STM.c, 60 :: 		for (rc = 0; rc < 4; rc++)
0x31F8	0xF89D0004  LDRB	R0, [SP, #4]
0x31FC	0x1C40    ADDS	R0, R0, #1
0x31FE	0xF88D0004  STRB	R0, [SP, #4]
;Click_IR_Grid_STM.c, 73 :: 		}
0x3202	0xE7C6    B	L_applicationTask5
L_applicationTask6:
;Click_IR_Grid_STM.c, 74 :: 		mikrobus_logWrite( " " ,_LOG_LINE );
0x3204	0x4812    LDR	R0, [PC, #72]
0x3206	0x2102    MOVS	R1, #2
0x3208	0xF7FFFEA4  BL	_mikrobus_logWrite+0
;Click_IR_Grid_STM.c, 75 :: 		mikrobus_logWrite( " " ,_LOG_LINE );
0x320C	0x4811    LDR	R0, [PC, #68]
0x320E	0x2102    MOVS	R1, #2
0x3210	0xF7FFFEA0  BL	_mikrobus_logWrite+0
;Click_IR_Grid_STM.c, 76 :: 		mikrobus_logWrite( " " ,_LOG_LINE );
0x3214	0x4810    LDR	R0, [PC, #64]
0x3216	0x2102    MOVS	R1, #2
0x3218	0xF7FFFE9C  BL	_mikrobus_logWrite+0
;Click_IR_Grid_STM.c, 77 :: 		Delay_ms(500);
0x321C	0xF648577F  MOVW	R7, #36223
0x3220	0xF2C0075B  MOVT	R7, #91
0x3224	0xBF00    NOP
0x3226	0xBF00    NOP
L_applicationTask11:
0x3228	0x1E7F    SUBS	R7, R7, #1
0x322A	0xD1FD    BNE	L_applicationTask11
0x322C	0xBF00    NOP
0x322E	0xBF00    NOP
0x3230	0xBF00    NOP
;Click_IR_Grid_STM.c, 78 :: 		}
L_end_applicationTask:
0x3232	0xF8DDE000  LDR	LR, [SP, #0]
0x3236	0xB002    ADD	SP, SP, #8
0x3238	0x4770    BX	LR
0x323A	0xBF00    NOP
0x323C	0x00542000  	_ir_tmp+0
0x3240	0x01542000  	_txt+0
0x3244	0x015A2000  	_txt+6
0x3248	0x00332000  	?lstr3_Click_IR_Grid_STM+0
0x324C	0x00352000  	?lstr4_Click_IR_Grid_STM+0
0x3250	0x00372000  	?lstr5_Click_IR_Grid_STM+0
0x3254	0x00392000  	?lstr6_Click_IR_Grid_STM+0
0x3258	0x003B2000  	?lstr7_Click_IR_Grid_STM+0
; end of _applicationTask
_irgrid_measure:
;__irgrid_driver.c, 667 :: 		uint8_t irgrid_measure()
0x2CAC	0xB082    SUB	SP, SP, #8
0x2CAE	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid_driver.c, 671 :: 		i = 0;
0x2CB2	0x2000    MOVS	R0, #0
0x2CB4	0xF88D0004  STRB	R0, [SP, #4]
;__irgrid_driver.c, 673 :: 		do
L_irgrid_measure57:
;__irgrid_driver.c, 675 :: 		_get_eeprom();
0x2CB8	0xF7FFFEFC  BL	__irgrid_driver__get_eeprom+0
;__irgrid_driver.c, 676 :: 		_set_trim();
0x2CBC	0xF7FFFF96  BL	__irgrid_driver__set_trim+0
;__irgrid_driver.c, 677 :: 		_set_cgf();
0x2CC0	0xF7FFFF28  BL	__irgrid_driver__set_cgf+0
;__irgrid_driver.c, 679 :: 		if (i++ > 16)
0x2CC4	0xF89D1004  LDRB	R1, [SP, #4]
0x2CC8	0xF89D0004  LDRB	R0, [SP, #4]
0x2CCC	0x1C40    ADDS	R0, R0, #1
0x2CCE	0xF88D0004  STRB	R0, [SP, #4]
0x2CD2	0x2910    CMP	R1, #16
0x2CD4	0xD901    BLS	L_irgrid_measure60
;__irgrid_driver.c, 681 :: 		return 1;
0x2CD6	0x2001    MOVS	R0, #1
0x2CD8	0xE013    B	L_end_irgrid_measure
;__irgrid_driver.c, 682 :: 		}
L_irgrid_measure60:
;__irgrid_driver.c, 684 :: 		} while (!((_get_cfg() & 0x0400) >> 10));
0x2CDA	0xF7FEFF43  BL	__irgrid_driver__get_cfg+0
0x2CDE	0xF4006080  AND	R0, R0, #1024
0x2CE2	0xB280    UXTH	R0, R0
0x2CE4	0x0A80    LSRS	R0, R0, #10
0x2CE6	0xB280    UXTH	R0, R0
0x2CE8	0x2800    CMP	R0, #0
0x2CEA	0xD0E5    BEQ	L_irgrid_measure57
;__irgrid_driver.c, 686 :: 		_get_ptat();
0x2CEC	0xF7FFF980  BL	__irgrid_driver__get_ptat+0
;__irgrid_driver.c, 687 :: 		_get_ir();
0x2CF0	0xF7FFFC7C  BL	__irgrid_driver__get_ir+0
;__irgrid_driver.c, 688 :: 		_calc_ta();
0x2CF4	0xF7FFFCCC  BL	__irgrid_driver__calc_ta+0
;__irgrid_driver.c, 689 :: 		_get_cpix();
0x2CF8	0xF7FFFE1A  BL	__irgrid_driver__get_cpix+0
;__irgrid_driver.c, 690 :: 		_calc_to();
0x2CFC	0xF7FFF9AA  BL	__irgrid_driver__calc_to+0
;__irgrid_driver.c, 692 :: 		return 0;
0x2D00	0x2000    MOVS	R0, #0
;__irgrid_driver.c, 693 :: 		}
L_end_irgrid_measure:
0x2D02	0xF8DDE000  LDR	LR, [SP, #0]
0x2D06	0xB002    ADD	SP, SP, #8
0x2D08	0x4770    BX	LR
; end of _irgrid_measure
__irgrid_driver__get_ptat:
;__irgrid_driver.c, 455 :: 		static void _get_ptat()
0x1FF0	0xB083    SUB	SP, SP, #12
0x1FF2	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid_driver.c, 460 :: 		tmp[0] = 0x02;
0x1FF6	0xF10D0206  ADD	R2, SP, #6
0x1FFA	0x2002    MOVS	R0, #2
0x1FFC	0x7010    STRB	R0, [R2, #0]
;__irgrid_driver.c, 461 :: 		tmp[1] = 0x40;
0x1FFE	0x1C51    ADDS	R1, R2, #1
0x2000	0x2040    MOVS	R0, #64
0x2002	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 462 :: 		tmp[2] = 0x00;
0x2004	0x1C91    ADDS	R1, R2, #2
0x2006	0x2000    MOVS	R0, #0
0x2008	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 463 :: 		tmp[3] = 0x01;
0x200A	0x1CD1    ADDS	R1, R2, #3
0x200C	0x2001    MOVS	R0, #1
0x200E	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 465 :: 		hal_i2cStart();
0x2010	0xF7FFFD68  BL	__irgrid_driver_hal_i2cStart+0
;__irgrid_driver.c, 466 :: 		hal_i2cWrite(_slaveRAM, tmp, 4, END_MODE_RESTART);
0x2014	0xF10D0106  ADD	R1, SP, #6
0x2018	0x480C    LDR	R0, [PC, #48]
0x201A	0x7800    LDRB	R0, [R0, #0]
0x201C	0x2300    MOVS	R3, #0
0x201E	0x2204    MOVS	R2, #4
0x2020	0xF7FFFF50  BL	__irgrid_driver_hal_i2cWrite+0
;__irgrid_driver.c, 467 :: 		hal_i2cRead(_slaveRAM, rd, 2, END_MODE_STOP );
0x2024	0xA901    ADD	R1, SP, #4
0x2026	0x4809    LDR	R0, [PC, #36]
0x2028	0x7800    LDRB	R0, [R0, #0]
0x202A	0x2301    MOVS	R3, #1
0x202C	0x2202    MOVS	R2, #2
0x202E	0xF7FFFD01  BL	__irgrid_driver_hal_i2cRead+0
;__irgrid_driver.c, 469 :: 		ptat = ((uint16_t)(rd[1] << 8) | rd[0]);
0x2032	0xAA01    ADD	R2, SP, #4
0x2034	0x1C50    ADDS	R0, R2, #1
0x2036	0x7800    LDRB	R0, [R0, #0]
0x2038	0x0201    LSLS	R1, R0, #8
0x203A	0xB289    UXTH	R1, R1
0x203C	0x7810    LDRB	R0, [R2, #0]
0x203E	0x4301    ORRS	R1, R0
0x2040	0x4803    LDR	R0, [PC, #12]
0x2042	0x8001    STRH	R1, [R0, #0]
;__irgrid_driver.c, 470 :: 		}
L_end__get_ptat:
0x2044	0xF8DDE000  LDR	LR, [SP, #0]
0x2048	0xB003    ADD	SP, SP, #12
0x204A	0x4770    BX	LR
0x204C	0x00472000  	__irgrid_driver__slaveRAM+0
0x2050	0x073E2000  	__irgrid_driver_ptat+0
; end of __irgrid_driver__get_ptat
__irgrid_driver__get_ir:
;__irgrid_driver.c, 431 :: 		static void _get_ir()
0x25EC	0xB0A2    SUB	SP, SP, #136
0x25EE	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid_driver.c, 437 :: 		tmp_w[0] = 0x02;
0x25F2	0xAA01    ADD	R2, SP, #4
0x25F4	0x2002    MOVS	R0, #2
0x25F6	0x7010    STRB	R0, [R2, #0]
;__irgrid_driver.c, 438 :: 		tmp_w[1] = 0x00;
0x25F8	0x1C51    ADDS	R1, R2, #1
0x25FA	0x2000    MOVS	R0, #0
0x25FC	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 439 :: 		tmp_w[2] = 0x01;
0x25FE	0x1C91    ADDS	R1, R2, #2
0x2600	0x2001    MOVS	R0, #1
0x2602	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 440 :: 		tmp_w[3] = 0x40;
0x2604	0x1CD1    ADDS	R1, R2, #3
0x2606	0x2040    MOVS	R0, #64
0x2608	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 442 :: 		hal_i2cStart();
0x260A	0xF7FFFA6B  BL	__irgrid_driver_hal_i2cStart+0
;__irgrid_driver.c, 443 :: 		hal_i2cWrite( _slaveRAM, tmp_w, 4, END_MODE_RESTART );
0x260E	0xA901    ADD	R1, SP, #4
0x2610	0x481D    LDR	R0, [PC, #116]
0x2612	0x7800    LDRB	R0, [R0, #0]
0x2614	0x2300    MOVS	R3, #0
0x2616	0x2204    MOVS	R2, #4
0x2618	0xF7FFFC54  BL	__irgrid_driver_hal_i2cWrite+0
;__irgrid_driver.c, 444 :: 		hal_i2cRead( _slaveRAM, tmp_r, 128, END_MODE_STOP );
0x261C	0xA902    ADD	R1, SP, #8
0x261E	0x481A    LDR	R0, [PC, #104]
0x2620	0x7800    LDRB	R0, [R0, #0]
0x2622	0x2301    MOVS	R3, #1
0x2624	0x2280    MOVS	R2, #128
0x2626	0xF7FFFA05  BL	__irgrid_driver_hal_i2cRead+0
;__irgrid_driver.c, 446 :: 		for (i = 0; i < 64; i++)
; i start address is: 16 (R4)
0x262A	0x2400    MOVS	R4, #0
; i end address is: 16 (R4)
L___irgrid_driver__get_ir42:
; i start address is: 16 (R4)
0x262C	0x2C40    CMP	R4, #64
0x262E	0xD226    BCS	L___irgrid_driver__get_ir43
;__irgrid_driver.c, 448 :: 		_ir_data[i] = 0;
0x2630	0x0061    LSLS	R1, R4, #1
0x2632	0x4816    LDR	R0, [PC, #88]
0x2634	0x1841    ADDS	R1, R0, R1
0x2636	0x2000    MOVS	R0, #0
0x2638	0xB200    SXTH	R0, R0
0x263A	0x8008    STRH	R0, [R1, #0]
;__irgrid_driver.c, 449 :: 		_ir_data[i] |= tmp_r[(i * 2) + 1];
0x263C	0x0061    LSLS	R1, R4, #1
0x263E	0x4813    LDR	R0, [PC, #76]
0x2640	0x1842    ADDS	R2, R0, R1
0x2642	0xB208    SXTH	R0, R1
0x2644	0x1C40    ADDS	R0, R0, #1
0x2646	0xB200    SXTH	R0, R0
0x2648	0xAB02    ADD	R3, SP, #8
0x264A	0x1818    ADDS	R0, R3, R0
0x264C	0x7801    LDRB	R1, [R0, #0]
0x264E	0xF9B20000  LDRSH	R0, [R2, #0]
0x2652	0x4308    ORRS	R0, R1
0x2654	0x8010    STRH	R0, [R2, #0]
;__irgrid_driver.c, 450 :: 		_ir_data[i] <<= 8;
0x2656	0x0061    LSLS	R1, R4, #1
0x2658	0x480C    LDR	R0, [PC, #48]
0x265A	0x1841    ADDS	R1, R0, R1
0x265C	0xF9B10000  LDRSH	R0, [R1, #0]
0x2660	0x0200    LSLS	R0, R0, #8
0x2662	0x8008    STRH	R0, [R1, #0]
;__irgrid_driver.c, 451 :: 		_ir_data[i] |= tmp_r[i * 2];
0x2664	0x0061    LSLS	R1, R4, #1
0x2666	0x4809    LDR	R0, [PC, #36]
0x2668	0x1842    ADDS	R2, R0, R1
0x266A	0xB208    SXTH	R0, R1
0x266C	0x1818    ADDS	R0, R3, R0
0x266E	0x7801    LDRB	R1, [R0, #0]
0x2670	0xF9B20000  LDRSH	R0, [R2, #0]
0x2674	0x4308    ORRS	R0, R1
0x2676	0x8010    STRH	R0, [R2, #0]
;__irgrid_driver.c, 446 :: 		for (i = 0; i < 64; i++)
0x2678	0x1C64    ADDS	R4, R4, #1
0x267A	0xB2E4    UXTB	R4, R4
;__irgrid_driver.c, 452 :: 		}
; i end address is: 16 (R4)
0x267C	0xE7D6    B	L___irgrid_driver__get_ir42
L___irgrid_driver__get_ir43:
;__irgrid_driver.c, 453 :: 		}
L_end__get_ir:
0x267E	0xF8DDE000  LDR	LR, [SP, #0]
0x2682	0xB022    ADD	SP, SP, #136
0x2684	0x4770    BX	LR
0x2686	0xBF00    NOP
0x2688	0x00472000  	__irgrid_driver__slaveRAM+0
0x268C	0x05BC2000  	__irgrid_driver__ir_data+0
; end of __irgrid_driver__get_ir
__irgrid_driver__calc_ta:
;__irgrid_driver.c, 513 :: 		static void _calc_ta()
0x2690	0xB086    SUB	SP, SP, #24
0x2692	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid_driver.c, 515 :: 		k_t1_scale = (int16_t) (_eeprom_data[_IRGRID_KT_SCALE] & 0xF0) >> 4;
0x2696	0x4A96    LDR	R2, [PC, #600]
0x2698	0x7810    LDRB	R0, [R2, #0]
0x269A	0xF00000F0  AND	R0, R0, #240
0x269E	0xB2C0    UXTB	R0, R0
0x26A0	0x1101    ASRS	R1, R0, #4
0x26A2	0x4894    LDR	R0, [PC, #592]
0x26A4	0x8001    STRH	R1, [R0, #0]
;__irgrid_driver.c, 516 :: 		k_t2_scale = (int16_t) (_eeprom_data[_IRGRID_KT_SCALE] & 0x0F) + 10;
0x26A6	0x4610    MOV	R0, R2
0x26A8	0x7800    LDRB	R0, [R0, #0]
0x26AA	0xF000000F  AND	R0, R0, #15
0x26AE	0xB2C0    UXTB	R0, R0
0x26B0	0xF200010A  ADDW	R1, R0, #10
0x26B4	0x4890    LDR	R0, [PC, #576]
0x26B6	0x8001    STRH	R1, [R0, #0]
;__irgrid_driver.c, 517 :: 		v_th = (float) 256 * _eeprom_data[_IRGRID_VTH_H] + _eeprom_data[_IRGRID_VTH_L];
0x26B8	0x4890    LDR	R0, [PC, #576]
0x26BA	0x7800    LDRB	R0, [R0, #0]
0x26BC	0xF7FFF924  BL	__UnsignedIntegralToFloat+0
0x26C0	0xF04F4287  MOV	R2, #1132462080
0x26C4	0xF7FFF9C8  BL	__Mul_FP+0
0x26C8	0x9002    STR	R0, [SP, #8]
0x26CA	0x488D    LDR	R0, [PC, #564]
0x26CC	0x7800    LDRB	R0, [R0, #0]
0x26CE	0xF7FFF91B  BL	__UnsignedIntegralToFloat+0
0x26D2	0x9A02    LDR	R2, [SP, #8]
0x26D4	0xF7FFF92E  BL	__Add_FP+0
0x26D8	0x498A    LDR	R1, [PC, #552]
0x26DA	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 519 :: 		if (v_th >= 32768.0)
0x26DC	0xF04F428E  MOV	R2, #1191182336
0x26E0	0xF7FFFBAE  BL	__Compare_FP+0
0x26E4	0xF2400000  MOVW	R0, #0
0x26E8	0xDB00    BLT	L___irgrid_driver__calc_ta104
0x26EA	0x2001    MOVS	R0, #1
L___irgrid_driver__calc_ta104:
0x26EC	0xB140    CBZ	R0, L___irgrid_driver__calc_ta46
;__irgrid_driver.c, 521 :: 		v_th -= 65536.0;
0x26EE	0x4885    LDR	R0, [PC, #532]
0x26F0	0x9002    STR	R0, [SP, #8]
0x26F2	0x6800    LDR	R0, [R0, #0]
0x26F4	0xF04F428F  MOV	R2, #1199570944
0x26F8	0xF7FFFBF8  BL	__Sub_FP+0
0x26FC	0x9902    LDR	R1, [SP, #8]
0x26FE	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 522 :: 		}
L___irgrid_driver__calc_ta46:
;__irgrid_driver.c, 523 :: 		v_th = v_th / _pow(2, (3 - resolution));
0x2700	0x4881    LDR	R0, [PC, #516]
0x2702	0xF9B00000  LDRSH	R0, [R0, #0]
0x2706	0xF1C00003  RSB	R0, R0, #3
0x270A	0xB200    SXTH	R0, R0
0x270C	0xF7FFFB78  BL	__SignedIntegralToFloat+0
0x2710	0x4601    MOV	R1, R0
0x2712	0xF04F4080  MOV	R0, #1073741824
0x2716	0xF7FFFB19  BL	__irgrid_driver__pow+0
0x271A	0x9003    STR	R0, [SP, #12]
0x271C	0x4879    LDR	R0, [PC, #484]
0x271E	0x9002    STR	R0, [SP, #8]
0x2720	0x6800    LDR	R0, [R0, #0]
0x2722	0x9101    STR	R1, [SP, #4]
0x2724	0x9903    LDR	R1, [SP, #12]
0x2726	0x460A    MOV	R2, R1
0x2728	0xF7FEF81E  BL	__Div_FP+0
0x272C	0x9901    LDR	R1, [SP, #4]
0x272E	0x9902    LDR	R1, [SP, #8]
0x2730	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 524 :: 		k_t1 = (float) 256 * _eeprom_data[_IRGRID_KT1_H] + _eeprom_data[_IRGRID_KT1_L];
0x2732	0x4876    LDR	R0, [PC, #472]
0x2734	0x7800    LDRB	R0, [R0, #0]
0x2736	0xF7FFF8E7  BL	__UnsignedIntegralToFloat+0
0x273A	0xF04F4287  MOV	R2, #1132462080
0x273E	0xF7FFF98B  BL	__Mul_FP+0
0x2742	0x9002    STR	R0, [SP, #8]
0x2744	0x4872    LDR	R0, [PC, #456]
0x2746	0x7800    LDRB	R0, [R0, #0]
0x2748	0xF7FFF8DE  BL	__UnsignedIntegralToFloat+0
0x274C	0x9A02    LDR	R2, [SP, #8]
0x274E	0xF7FFF8F1  BL	__Add_FP+0
0x2752	0x4970    LDR	R1, [PC, #448]
0x2754	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 526 :: 		if (k_t1 >= 32768.0)
0x2756	0xF04F428E  MOV	R2, #1191182336
0x275A	0xF7FFFB71  BL	__Compare_FP+0
0x275E	0xF2400000  MOVW	R0, #0
0x2762	0xDB00    BLT	L___irgrid_driver__calc_ta105
0x2764	0x2001    MOVS	R0, #1
L___irgrid_driver__calc_ta105:
0x2766	0xB140    CBZ	R0, L___irgrid_driver__calc_ta47
;__irgrid_driver.c, 528 :: 		k_t1 -= 65536.0;
0x2768	0x486A    LDR	R0, [PC, #424]
0x276A	0x9002    STR	R0, [SP, #8]
0x276C	0x6800    LDR	R0, [R0, #0]
0x276E	0xF04F428F  MOV	R2, #1199570944
0x2772	0xF7FFFBBB  BL	__Sub_FP+0
0x2776	0x9902    LDR	R1, [SP, #8]
0x2778	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 529 :: 		}
L___irgrid_driver__calc_ta47:
;__irgrid_driver.c, 531 :: 		k_t1 /= (_pow(2, k_t1_scale) * _pow(2, (3 - resolution)));
0x277A	0x485E    LDR	R0, [PC, #376]
0x277C	0xF9B00000  LDRSH	R0, [R0, #0]
0x2780	0xF7FFFB3E  BL	__SignedIntegralToFloat+0
0x2784	0x4601    MOV	R1, R0
0x2786	0xF04F4080  MOV	R0, #1073741824
0x278A	0xF7FFFADF  BL	__irgrid_driver__pow+0
0x278E	0x9002    STR	R0, [SP, #8]
0x2790	0x485D    LDR	R0, [PC, #372]
0x2792	0xF9B00000  LDRSH	R0, [R0, #0]
0x2796	0xF1C00003  RSB	R0, R0, #3
0x279A	0xB200    SXTH	R0, R0
0x279C	0xF7FFFB30  BL	__SignedIntegralToFloat+0
0x27A0	0x4601    MOV	R1, R0
0x27A2	0xF04F4080  MOV	R0, #1073741824
0x27A6	0xF7FFFAD1  BL	__irgrid_driver__pow+0
0x27AA	0x9A02    LDR	R2, [SP, #8]
0x27AC	0xF7FFF954  BL	__Mul_FP+0
0x27B0	0x9003    STR	R0, [SP, #12]
0x27B2	0x4858    LDR	R0, [PC, #352]
0x27B4	0x9002    STR	R0, [SP, #8]
0x27B6	0x6800    LDR	R0, [R0, #0]
0x27B8	0x9101    STR	R1, [SP, #4]
0x27BA	0x9903    LDR	R1, [SP, #12]
0x27BC	0x460A    MOV	R2, R1
0x27BE	0xF7FDFFD3  BL	__Div_FP+0
0x27C2	0x9901    LDR	R1, [SP, #4]
0x27C4	0x9902    LDR	R1, [SP, #8]
0x27C6	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 532 :: 		k_t2 = (float) 256 * _eeprom_data[_IRGRID_KT2_H] + _eeprom_data[_IRGRID_KT2_L];
0x27C8	0x4853    LDR	R0, [PC, #332]
0x27CA	0x7800    LDRB	R0, [R0, #0]
0x27CC	0xF7FFF89C  BL	__UnsignedIntegralToFloat+0
0x27D0	0xF04F4287  MOV	R2, #1132462080
0x27D4	0xF7FFF940  BL	__Mul_FP+0
0x27D8	0x9002    STR	R0, [SP, #8]
0x27DA	0x4850    LDR	R0, [PC, #320]
0x27DC	0x7800    LDRB	R0, [R0, #0]
0x27DE	0xF7FFF893  BL	__UnsignedIntegralToFloat+0
0x27E2	0x9A02    LDR	R2, [SP, #8]
0x27E4	0xF7FFF8A6  BL	__Add_FP+0
0x27E8	0x494D    LDR	R1, [PC, #308]
0x27EA	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 534 :: 		if (k_t2 >= 32768.0)
0x27EC	0xF04F428E  MOV	R2, #1191182336
0x27F0	0xF7FFFB26  BL	__Compare_FP+0
0x27F4	0xF2400000  MOVW	R0, #0
0x27F8	0xDB00    BLT	L___irgrid_driver__calc_ta106
0x27FA	0x2001    MOVS	R0, #1
L___irgrid_driver__calc_ta106:
0x27FC	0xB140    CBZ	R0, L___irgrid_driver__calc_ta48
;__irgrid_driver.c, 536 :: 		k_t2 -= 65536.0;
0x27FE	0x4848    LDR	R0, [PC, #288]
0x2800	0x9002    STR	R0, [SP, #8]
0x2802	0x6800    LDR	R0, [R0, #0]
0x2804	0xF04F428F  MOV	R2, #1199570944
0x2808	0xF7FFFB70  BL	__Sub_FP+0
0x280C	0x9902    LDR	R1, [SP, #8]
0x280E	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 537 :: 		}
L___irgrid_driver__calc_ta48:
;__irgrid_driver.c, 539 :: 		k_t2 /= (_pow(2, k_t2_scale) * _pow(2, (3 - resolution)));
0x2810	0x4839    LDR	R0, [PC, #228]
0x2812	0xF9B00000  LDRSH	R0, [R0, #0]
0x2816	0xF7FFFAF3  BL	__SignedIntegralToFloat+0
0x281A	0x4601    MOV	R1, R0
0x281C	0xF04F4080  MOV	R0, #1073741824
0x2820	0xF7FFFA94  BL	__irgrid_driver__pow+0
0x2824	0x9002    STR	R0, [SP, #8]
0x2826	0x4838    LDR	R0, [PC, #224]
0x2828	0xF9B00000  LDRSH	R0, [R0, #0]
0x282C	0xF1C00003  RSB	R0, R0, #3
0x2830	0xB200    SXTH	R0, R0
0x2832	0xF7FFFAE5  BL	__SignedIntegralToFloat+0
0x2836	0x4601    MOV	R1, R0
0x2838	0xF04F4080  MOV	R0, #1073741824
0x283C	0xF7FFFA86  BL	__irgrid_driver__pow+0
0x2840	0x9A02    LDR	R2, [SP, #8]
0x2842	0xF7FFF909  BL	__Mul_FP+0
0x2846	0x9003    STR	R0, [SP, #12]
0x2848	0x4835    LDR	R0, [PC, #212]
0x284A	0x9002    STR	R0, [SP, #8]
0x284C	0x6800    LDR	R0, [R0, #0]
0x284E	0x9101    STR	R1, [SP, #4]
0x2850	0x9903    LDR	R1, [SP, #12]
0x2852	0x460A    MOV	R2, R1
0x2854	0xF7FDFF88  BL	__Div_FP+0
0x2858	0x9901    LDR	R1, [SP, #4]
0x285A	0x9902    LDR	R1, [SP, #8]
0x285C	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 541 :: 		_temperature_amb = ((-k_t1 + _sqrt(_pow(k_t1, 2) - (4 * k_t2 * (v_th - (float) ptat)))) / (2 * k_t2)) + 25.0;
0x285E	0x492D    LDR	R1, [PC, #180]
0x2860	0x6808    LDR	R0, [R1, #0]
0x2862	0xF0804000  EOR	R0, R0, #-2147483648
0x2866	0x9005    STR	R0, [SP, #20]
0x2868	0x4608    MOV	R0, R1
0x286A	0x6800    LDR	R0, [R0, #0]
0x286C	0xF04F4180  MOV	R1, #1073741824
0x2870	0xF7FFFA6C  BL	__irgrid_driver__pow+0
0x2874	0x9004    STR	R0, [SP, #16]
0x2876	0x482A    LDR	R0, [PC, #168]
0x2878	0x6802    LDR	R2, [R0, #0]
0x287A	0xF04F4081  MOV	R0, #1082130432
0x287E	0xF7FFF8EB  BL	__Mul_FP+0
0x2882	0x9003    STR	R0, [SP, #12]
0x2884	0x4827    LDR	R0, [PC, #156]
0x2886	0xF9B00000  LDRSH	R0, [R0, #0]
0x288A	0xF7FFFAB9  BL	__SignedIntegralToFloat+0
0x288E	0x9002    STR	R0, [SP, #8]
0x2890	0x481C    LDR	R0, [PC, #112]
0x2892	0x6800    LDR	R0, [R0, #0]
0x2894	0x9101    STR	R1, [SP, #4]
0x2896	0x9902    LDR	R1, [SP, #8]
0x2898	0x460A    MOV	R2, R1
0x289A	0xF7FFFB27  BL	__Sub_FP+0
0x289E	0x9901    LDR	R1, [SP, #4]
0x28A0	0x9A03    LDR	R2, [SP, #12]
0x28A2	0xF7FFF8D9  BL	__Mul_FP+0
0x28A6	0x9002    STR	R0, [SP, #8]
0x28A8	0x9804    LDR	R0, [SP, #16]
0x28AA	0x9101    STR	R1, [SP, #4]
0x28AC	0x9902    LDR	R1, [SP, #8]
0x28AE	0x460A    MOV	R2, R1
0x28B0	0xF7FFFB1C  BL	__Sub_FP+0
0x28B4	0x9901    LDR	R1, [SP, #4]
0x28B6	0xF7FFF9B5  BL	__irgrid_driver__sqrt+0
0x28BA	0x9A05    LDR	R2, [SP, #20]
0x28BC	0xF7FFF83A  BL	__Add_FP+0
0x28C0	0x9003    STR	R0, [SP, #12]
0x28C2	0x4817    LDR	R0, [PC, #92]
0x28C4	0x6802    LDR	R2, [R0, #0]
0x28C6	0xF04F4080  MOV	R0, #1073741824
0x28CA	0xF7FFF8C5  BL	__Mul_FP+0
0x28CE	0x9002    STR	R0, [SP, #8]
0x28D0	0x9803    LDR	R0, [SP, #12]
0x28D2	0x9101    STR	R1, [SP, #4]
0x28D4	0x9902    LDR	R1, [SP, #8]
0x28D6	0x460A    MOV	R2, R1
0x28D8	0xF7FDFF46  BL	__Div_FP+0
0x28DC	0x9901    LDR	R1, [SP, #4]
0x28DE	0x4A12    LDR	R2, [PC, #72]
0x28E0	0xF7FFF828  BL	__Add_FP+0
0x28E4	0x4911    LDR	R1, [PC, #68]
0x28E6	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 542 :: 		}
L_end__calc_ta:
0x28E8	0xF8DDE000  LDR	LR, [SP, #0]
0x28EC	0xB006    ADD	SP, SP, #24
0x28EE	0x4770    BX	LR
0x28F0	0x03722000  	__irgrid_driver__eeprom_data+210
0x28F4	0x03AA2000  	__irgrid_driver_k_t1_scale+0
0x28F8	0x073C2000  	__irgrid_driver_k_t2_scale+0
0x28FC	0x037B2000  	__irgrid_driver__eeprom_data+219
0x2900	0x037A2000  	__irgrid_driver__eeprom_data+218
0x2904	0x07402000  	__irgrid_driver_v_th+0
0x2908	0x03A42000  	__irgrid_driver_resolution+0
0x290C	0x037D2000  	__irgrid_driver__eeprom_data+221
0x2910	0x037C2000  	__irgrid_driver__eeprom_data+220
0x2914	0x07442000  	__irgrid_driver_k_t1+0
0x2918	0x037F2000  	__irgrid_driver__eeprom_data+223
0x291C	0x037E2000  	__irgrid_driver__eeprom_data+222
0x2920	0x07482000  	__irgrid_driver_k_t2+0
0x2924	0x073E2000  	__irgrid_driver_ptat+0
0x2928	0x000041C8  	#1103626240
0x292C	0x03B82000  	__irgrid_driver__temperature_amb+0
; end of __irgrid_driver__calc_ta
__UnsignedIntegralToFloat:
;__Lib_MathDouble.c, 262 :: 		
0x1908	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 264 :: 		
0x190A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 265 :: 		
0x190C	0xBF08    IT	EQ
;__Lib_MathDouble.c, 267 :: 		
0x190E	0xE00F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 269 :: 		
0x1910	0xB502    PUSH	(R1, R14)
;__Lib_MathDouble.c, 271 :: 		
0x1912	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 272 :: 		
0x1916	0xD402    BMI	__me_label_cont
;__Lib_MathDouble.c, 274 :: 		
__me_loop:
0x1918	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 275 :: 		
0x191A	0x0040    LSLS	R0, R0, #1
;__Lib_MathDouble.c, 277 :: 		
0x191C	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 279 :: 		
__me_label_cont:
0x191E	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 280 :: 		
0x1920	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 281 :: 		
0x1922	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 282 :: 		
0x1924	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 284 :: 		
0x1926	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 285 :: 		
0x1928	0xEA4050C2  ORR	R0, R0, R2, LSL #23
;__Lib_MathDouble.c, 287 :: 		
0x192C	0xE8BD4002  POP	(R1, R14)
;__Lib_MathDouble.c, 288 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 290 :: 		
L_end__UnsignedIntegralToFloat:
0x1930	0xB001    ADD	SP, SP, #4
0x1932	0x4770    BX	LR
; end of __UnsignedIntegralToFloat
__Mul_FP:
;__Lib_MathDouble.c, 666 :: 		
0x1A58	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 668 :: 		
0x1A5A	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 670 :: 		
0x1A5C	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 671 :: 		
0x1A60	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 672 :: 		
0x1A62	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 673 :: 		
0x1A66	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 675 :: 		
0x1A6A	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 676 :: 		
0x1A6E	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 677 :: 		
0x1A72	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 678 :: 		
0x1A74	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 679 :: 		
0x1A76	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 681 :: 		
0x1A7A	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 683 :: 		
0x1A7E	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 685 :: 		
0x1A80	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 686 :: 		
0x1A82	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 688 :: 		
0x1A84	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 689 :: 		
0x1A88	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 690 :: 		
0x1A8C	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 691 :: 		
0x1A8E	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 692 :: 		
0x1A90	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 694 :: 		
0x1A94	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 696 :: 		
0x1A98	0xE01F    BEQ	__me_lab_end
;__Lib_MathDouble.c, 698 :: 		
0x1A9A	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 699 :: 		
0x1A9C	0xD019    BEQ	__me_ovfl
;__Lib_MathDouble.c, 701 :: 		
0x1A9E	0x195B    ADDS	R3, R3, R5
;__Lib_MathDouble.c, 703 :: 		
0x1AA0	0xFBA15404  UMULL	R5, R4, R1, R4
;__Lib_MathDouble.c, 705 :: 		
0x1AA4	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 706 :: 		
0x1AA6	0xBF5C    ITT	PL
;__Lib_MathDouble.c, 707 :: 		
0x1AA8	0x0064    LSLPL	R4, R4, #1
;__Lib_MathDouble.c, 708 :: 		
0x1AAA	0x1E5B    SUBPL	R3, R3, #1
;__Lib_MathDouble.c, 710 :: 		
0x1AAC	0x3480    ADDS	R4, #128
;__Lib_MathDouble.c, 711 :: 		
0x1AAE	0xBF24    ITT	CS
;__Lib_MathDouble.c, 712 :: 		
0x1AB0	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 713 :: 		
0x1AB2	0x0864    LSRCS	R4, R4, #1
;__Lib_MathDouble.c, 715 :: 		
0x1AB4	0x3B7E    SUBS	R3, #126
;__Lib_MathDouble.c, 716 :: 		
0x1AB6	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 717 :: 		
0x1AB8	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 719 :: 		
0x1ABC	0xE00D    BLE	__me_lab_end
;__Lib_MathDouble.c, 721 :: 		
0x1ABE	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 722 :: 		
0x1AC0	0xD207    BCS	__me_ovfl
;__Lib_MathDouble.c, 724 :: 		
0x1AC2	0xEA4F2014  LSR	R0, R4, #8
;__Lib_MathDouble.c, 725 :: 		
0x1AC6	0xF4300000  BICS	R0, R0, #8388608
;__Lib_MathDouble.c, 726 :: 		
0x1ACA	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 727 :: 		
0x1ACE	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 730 :: 		
0x1AD0	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 732 :: 		
__me_ovfl:
0x1AD2	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 733 :: 		
0x1AD4	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 734 :: 		
0x1AD6	0xEA460007  ORR	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 735 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 736 :: 		
0x1ADA	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 738 :: 		
L_end__Mul_FP:
0x1ADE	0xB001    ADD	SP, SP, #4
0x1AE0	0x4770    BX	LR
; end of __Mul_FP
__Add_FP:
;__Lib_MathDouble.c, 413 :: 		
0x1934	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 415 :: 		
0x1936	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 417 :: 		
0x193A	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 418 :: 		
0x193E	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 419 :: 		
0x1942	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 420 :: 		
0x1944	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 422 :: 		
0x1946	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 423 :: 		
0x1948	0xBF18    IT	NE
;__Lib_MathDouble.c, 424 :: 		
0x194A	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 426 :: 		
0x194E	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 428 :: 		
__me_lab1:
0x1950	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 430 :: 		
0x1954	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 432 :: 		
0x1956	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 434 :: 		
0x1958	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 435 :: 		
0x195C	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 436 :: 		
0x195E	0xBF48    IT	MI
;__Lib_MathDouble.c, 437 :: 		
0x1960	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 439 :: 		
0x1962	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 440 :: 		
0x1966	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 441 :: 		
0x196A	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 442 :: 		
0x196C	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 444 :: 		
0x196E	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 445 :: 		
0x1970	0xBF14    ITE	NE
;__Lib_MathDouble.c, 446 :: 		
0x1972	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 447 :: 		
0x1976	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 449 :: 		
0x1978	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 451 :: 		
__me_lab2:
0x197A	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 453 :: 		
0x197E	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 454 :: 		
0x1980	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 456 :: 		
0x1982	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 457 :: 		
0x1986	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 458 :: 		
0x1988	0xBF48    IT	MI
;__Lib_MathDouble.c, 459 :: 		
0x198A	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 461 :: 		
0x198C	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 462 :: 		
0x198E	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 463 :: 		
0x1990	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 464 :: 		
0x1992	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 465 :: 		
0x1994	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 466 :: 		
0x1996	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 467 :: 		
0x1998	0xBF48    IT	MI
;__Lib_MathDouble.c, 468 :: 		
0x199A	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 470 :: 		
0x199C	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 471 :: 		
0x199E	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 472 :: 		
0x19A0	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 473 :: 		
0x19A4	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 474 :: 		
0x19A6	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 475 :: 		
0x19AA	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 476 :: 		
0x19AC	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 477 :: 		
0x19B0	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 479 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 480 :: 		
0x19B4	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 481 :: 		
0x19B6	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 482 :: 		
0x19B8	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 484 :: 		
0x19BC	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 485 :: 		
0x19BE	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 486 :: 		
0x19C0	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 487 :: 		
0x19C2	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 488 :: 		
0x19C6	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 490 :: 		
__me_loop:
0x19CA	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 491 :: 		
0x19CE	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 492 :: 		
0x19D0	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 494 :: 		
0x19D2	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 495 :: 		
0x19D6	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 496 :: 		
0x19D8	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 497 :: 		
0x19DC	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 498 :: 		
0x19E0	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 499 :: 		
0x19E2	0xBF28    IT	CS
;__Lib_MathDouble.c, 500 :: 		
0x19E4	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 501 :: 		
0x19E6	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 502 :: 		
0x19EA	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 503 :: 		
0x19EE	0xBF08    IT	EQ
;__Lib_MathDouble.c, 504 :: 		
0x19F0	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 506 :: 		
__me_no_round:
;__Lib_MathDouble.c, 507 :: 		
0x19F4	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 508 :: 		
0x19F6	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 509 :: 		
0x19F8	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 511 :: 		
0x19FC	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 512 :: 		
0x19FE	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 513 :: 		
0x1A00	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 515 :: 		
0x1A02	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 516 :: 		
0x1A06	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 518 :: 		
0x1A0A	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 519 :: 		
0x1A0E	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 520 :: 		
0x1A12	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 523 :: 		
0x1A16	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 525 :: 		
__me_ovfl1:
0x1A18	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 526 :: 		
__me_ovfl0:
0x1A1A	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 527 :: 		
__me_ovfl:
0x1A1E	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 528 :: 		
0x1A22	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 529 :: 		
0x1A24	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 530 :: 		
0x1A28	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 531 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 532 :: 		
0x1A2A	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 534 :: 		
L_end__Add_FP:
0x1A2E	0xB001    ADD	SP, SP, #4
0x1A30	0x4770    BX	LR
; end of __Add_FP
__Compare_FP:
;__Lib_MathDouble.c, 839 :: 		
0x1E40	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 841 :: 		
0x1E42	0xB510    PUSH	(R4, R14)
;__Lib_MathDouble.c, 843 :: 		
0x1E44	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 844 :: 		
0x1E46	0xBF08    IT	EQ
;__Lib_MathDouble.c, 846 :: 		
0x1E48	0xE02A    BEQ	__me_lab_end
;__Lib_MathDouble.c, 848 :: 		
0x1E4A	0xEA400402  ORR	R4, R0, R2, LSL #0
;__Lib_MathDouble.c, 849 :: 		
0x1E4E	0xEA4F0444  LSL	R4, R4, #1
;__Lib_MathDouble.c, 850 :: 		
0x1E52	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 851 :: 		
0x1E54	0xBF08    IT	EQ
;__Lib_MathDouble.c, 853 :: 		
0x1E56	0xE023    BEQ	__me_lab_end
;__Lib_MathDouble.c, 855 :: 		
0x1E58	0x0044    LSLS	R4, R0, #1
;__Lib_MathDouble.c, 856 :: 		
0x1E5A	0xD104    BNE	__me_ct2_
;__Lib_MathDouble.c, 858 :: 		
0x1E5C	0x4294    CMP	R4, R2
;__Lib_MathDouble.c, 859 :: 		
0x1E5E	0xD401    BMI	__me_labop2_pos
;__Lib_MathDouble.c, 860 :: 		
0x1E60	0x1CA4    ADDS	R4, R4, #2
;__Lib_MathDouble.c, 861 :: 		
0x1E62	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 862 :: 		
__me_labop2_pos:
;__Lib_MathDouble.c, 864 :: 		
0x1E64	0xE01C    B	__me_lab_end
;__Lib_MathDouble.c, 866 :: 		
__me_ct2_:
0x1E66	0xEA4F0440  LSL	R4, R0, #1
;__Lib_MathDouble.c, 867 :: 		
0x1E6A	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 868 :: 		
0x1E6E	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 869 :: 		
0x1E70	0xD10A    BNE	__me_ct1_
;__Lib_MathDouble.c, 870 :: 		
0x1E72	0xEA4F0442  LSL	R4, R2, #1
;__Lib_MathDouble.c, 871 :: 		
0x1E76	0xEA4F6414  LSR	R4, R4, #24
;__Lib_MathDouble.c, 872 :: 		
0x1E7A	0x2CFF    CMP	R4, #255
;__Lib_MathDouble.c, 873 :: 		
0x1E7C	0xD104    BNE	__me_ct1_
;__Lib_MathDouble.c, 875 :: 		
0x1E7E	0xEA4F74D2  LSR	R4, R2, #31
;__Lib_MathDouble.c, 876 :: 		
0x1E82	0xEBB434D0  SUBS	R4, R4, R0, LSR #31
;__Lib_MathDouble.c, 878 :: 		
0x1E86	0xE00B    B	__me_lab_end
;__Lib_MathDouble.c, 880 :: 		
__me_ct1_:
0x1E88	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 881 :: 		
0x1E8A	0xD406    BMI	__me_op2_m
;__Lib_MathDouble.c, 883 :: 		
0x1E8C	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 884 :: 		
0x1E8E	0xDC02    BGT	__me_labop1_pos
;__Lib_MathDouble.c, 885 :: 		
0x1E90	0x2400    MOVS	R4, #0
;__Lib_MathDouble.c, 886 :: 		
0x1E92	0x2C01    CMP	R4, #1
;__Lib_MathDouble.c, 888 :: 		
0x1E94	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 889 :: 		
__me_labop1_pos:
;__Lib_MathDouble.c, 890 :: 		
0x1E96	0x4290    CMP	R0, R2
;__Lib_MathDouble.c, 892 :: 		
0x1E98	0xE002    B	__me_lab_end
;__Lib_MathDouble.c, 893 :: 		
__me_op2_m:
0x1E9A	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 894 :: 		
0x1E9C	0xBF48    IT	MI
;__Lib_MathDouble.c, 895 :: 		
0x1E9E	0x4282    CMPMI	R2, R0
;__Lib_MathDouble.c, 896 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 897 :: 		
0x1EA0	0xE8BD4010  POP	(R4, R14)
;__Lib_MathDouble.c, 899 :: 		
L_end__Compare_FP:
0x1EA4	0xB001    ADD	SP, SP, #4
0x1EA6	0x4770    BX	LR
; end of __Compare_FP
__Sub_FP:
;__Lib_MathDouble.c, 539 :: 		
0x1EEC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 541 :: 		
0x1EEE	0xF0824200  EOR	R2, R2, #-2147483648
;__Lib_MathDouble.c, 542 :: 		
0x1EF2	0xE92D41FA  PUSH	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 544 :: 		
0x1EF6	0xEA4F2402  LSL	R4, R2, #8
;__Lib_MathDouble.c, 545 :: 		
0x1EFA	0xEA4F0542  LSL	R5, R2, #1
;__Lib_MathDouble.c, 546 :: 		
0x1EFE	0x0E2D    LSRS	R5, R5, #24
;__Lib_MathDouble.c, 547 :: 		
0x1F00	0xD104    BNE	__me_lab1
;__Lib_MathDouble.c, 549 :: 		
0x1F02	0x2C00    CMP	R4, #0
;__Lib_MathDouble.c, 550 :: 		
0x1F04	0xBF18    IT	NE
;__Lib_MathDouble.c, 551 :: 		
0x1F06	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 553 :: 		
0x1F0A	0xE06C    B	__me_lab_end
;__Lib_MathDouble.c, 555 :: 		
__me_lab1:
0x1F0C	0xF0444400  ORR	R4, R4, #-2147483648
;__Lib_MathDouble.c, 557 :: 		
0x1F10	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 559 :: 		
0x1F12	0xD05F    BEQ	__me_ovfl1
;__Lib_MathDouble.c, 561 :: 		
0x1F14	0xEA4F0494  LSR	R4, R4, #2
;__Lib_MathDouble.c, 562 :: 		
0x1F18	0x2A00    CMP	R2, #0
;__Lib_MathDouble.c, 563 :: 		
0x1F1A	0xBF48    IT	MI
;__Lib_MathDouble.c, 564 :: 		
0x1F1C	0x4264    RSBMI	R4, R4, #0
;__Lib_MathDouble.c, 566 :: 		
0x1F1E	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 567 :: 		
0x1F22	0xEA4F0340  LSL	R3, R0, #1
;__Lib_MathDouble.c, 568 :: 		
0x1F26	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 569 :: 		
0x1F28	0xD105    BNE	__me_lab2
;__Lib_MathDouble.c, 571 :: 		
0x1F2A	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 572 :: 		
0x1F2C	0xBF14    ITE	NE
;__Lib_MathDouble.c, 573 :: 		
0x1F2E	0xF04F0000  MOVNE	R0, #0
;__Lib_MathDouble.c, 574 :: 		
0x1F32	0x4610    MOVEQ	R0, R2
;__Lib_MathDouble.c, 576 :: 		
0x1F34	0xE057    B	__me_lab_end
;__Lib_MathDouble.c, 578 :: 		
__me_lab2:
0x1F36	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 580 :: 		
0x1F3A	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 581 :: 		
0x1F3C	0xD04B    BEQ	__me_ovfl0
;__Lib_MathDouble.c, 583 :: 		
0x1F3E	0xEA4F0191  LSR	R1, R1, #2
;__Lib_MathDouble.c, 584 :: 		
0x1F42	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 585 :: 		
0x1F44	0xBF48    IT	MI
;__Lib_MathDouble.c, 586 :: 		
0x1F46	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 588 :: 		
0x1F48	0x1B5E    SUBS	R6, R3, R5
;__Lib_MathDouble.c, 589 :: 		
0x1F4A	0xBF41    ITTTT	MI
;__Lib_MathDouble.c, 590 :: 		
0x1F4C	0x460F    MOVMI	R7, R1
;__Lib_MathDouble.c, 591 :: 		
0x1F4E	0x4621    MOVMI	R1, R4
;__Lib_MathDouble.c, 592 :: 		
0x1F50	0x463C    MOVMI	R4, R7
;__Lib_MathDouble.c, 593 :: 		
0x1F52	0x4276    RSBMI	R6, R6, #0
;__Lib_MathDouble.c, 594 :: 		
0x1F54	0xBF48    IT	MI
;__Lib_MathDouble.c, 595 :: 		
0x1F56	0x462B    MOVMI	R3, R5
;__Lib_MathDouble.c, 597 :: 		
0x1F58	0x2E19    CMP	R6, #25
;__Lib_MathDouble.c, 598 :: 		
0x1F5A	0xBF47    ITTEE	MI
;__Lib_MathDouble.c, 599 :: 		
0x1F5C	0xFA44F706  ASRMI	R7, R4, R6
;__Lib_MathDouble.c, 600 :: 		
0x1F60	0x19C9    ADDMI	R1, R1, R7
;__Lib_MathDouble.c, 601 :: 		
0x1F62	0xF04F0800  MOVPL	R8, #0
;__Lib_MathDouble.c, 602 :: 		
0x1F66	0xE003    BPL	__me_skip_sticky
;__Lib_MathDouble.c, 603 :: 		
0x1F68	0xF1C6071C  RSB	R7, R6, #28
;__Lib_MathDouble.c, 604 :: 		
0x1F6C	0xFA04F807  LSL	R8, R4, R7
;__Lib_MathDouble.c, 606 :: 		
__me_skip_sticky:
;__Lib_MathDouble.c, 607 :: 		
0x1F70	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 608 :: 		
0x1F72	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 609 :: 		
0x1F74	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 611 :: 		
0x1F78	0xE035    BEQ	__me_lab_end
;__Lib_MathDouble.c, 612 :: 		
0x1F7A	0xBF46    ITTE	MI
;__Lib_MathDouble.c, 613 :: 		
0x1F7C	0x4249    RSBMI	R1, R1, #0
;__Lib_MathDouble.c, 614 :: 		
0x1F7E	0xF04F0701  MOVMI	R7, #1
;__Lib_MathDouble.c, 615 :: 		
0x1F82	0xF04F0700  MOVPL	R7, #0
;__Lib_MathDouble.c, 617 :: 		
__me_loop:
0x1F86	0xF1A30301  SUB	R3, R3, #1
;__Lib_MathDouble.c, 618 :: 		
0x1F8A	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 619 :: 		
0x1F8C	0xD5FB    BPL	__me_loop
;__Lib_MathDouble.c, 621 :: 		
0x1F8E	0xF0110480  ANDS	R4, R1, #128
;__Lib_MathDouble.c, 622 :: 		
0x1F92	0xD00D    BEQ	__me_no_round
;__Lib_MathDouble.c, 623 :: 		
0x1F94	0xF0010520  AND	R5, R1, #32
;__Lib_MathDouble.c, 624 :: 		
0x1F98	0xEA480805  ORR	R8, R8, R5, LSL #0
;__Lib_MathDouble.c, 625 :: 		
0x1F9C	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 626 :: 		
0x1F9E	0xBF28    IT	CS
;__Lib_MathDouble.c, 627 :: 		
0x1FA0	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 628 :: 		
0x1FA2	0xF0010440  AND	R4, R1, #64
;__Lib_MathDouble.c, 629 :: 		
0x1FA6	0xEA580804  ORRS	R8, R8, R4, LSL #0
;__Lib_MathDouble.c, 630 :: 		
0x1FAA	0xBF08    IT	EQ
;__Lib_MathDouble.c, 631 :: 		
0x1FAC	0xF4217180  BICEQ	R1, R1, #256
;__Lib_MathDouble.c, 633 :: 		
__me_no_round:
;__Lib_MathDouble.c, 634 :: 		
0x1FB0	0x1C9B    ADDS	R3, R3, #2
;__Lib_MathDouble.c, 635 :: 		
0x1FB2	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 636 :: 		
0x1FB4	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 638 :: 		
0x1FB8	0xE015    BLE	__me_lab_end
;__Lib_MathDouble.c, 639 :: 		
0x1FBA	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 640 :: 		
0x1FBC	0xD20D    BCS	__me_ovfl
;__Lib_MathDouble.c, 642 :: 		
0x1FBE	0xF02101FF  BIC	R1, R1, #255
;__Lib_MathDouble.c, 643 :: 		
0x1FC2	0xEA4F0141  LSL	R1, R1, #1
;__Lib_MathDouble.c, 645 :: 		
0x1FC6	0xEA4F2051  LSR	R0, R1, #9
;__Lib_MathDouble.c, 646 :: 		
0x1FCA	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 647 :: 		
0x1FCE	0xEA4070C7  ORR	R0, R0, R7, LSL #31
;__Lib_MathDouble.c, 650 :: 		
0x1FD2	0xE008    B	__me_lab_end
;__Lib_MathDouble.c, 652 :: 		
__me_ovfl1:
0x1FD4	0x4610    MOV	R0, R2
;__Lib_MathDouble.c, 653 :: 		
__me_ovfl0:
0x1FD6	0xEA4F77D0  LSR	R7, R0, #31
;__Lib_MathDouble.c, 654 :: 		
__me_ovfl:
0x1FDA	0xEA4F77C7  LSL	R7, R7, #31
;__Lib_MathDouble.c, 655 :: 		
0x1FDE	0x20FF    MOVS	R0, #255
;__Lib_MathDouble.c, 656 :: 		
0x1FE0	0xEA4F50C0  LSL	R0, R0, #23
;__Lib_MathDouble.c, 657 :: 		
0x1FE4	0x4338    ORRS	R0, R7
;__Lib_MathDouble.c, 658 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 659 :: 		
0x1FE6	0xE8BD41FA  POP	(R1, R3, R4, R5, R6, R7, R8, R14)
;__Lib_MathDouble.c, 661 :: 		
L_end__Sub_FP:
0x1FEA	0xB001    ADD	SP, SP, #4
0x1FEC	0x4770    BX	LR
; end of __Sub_FP
__SignedIntegralToFloat:
;__Lib_MathDouble.c, 186 :: 		
0x1E00	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 188 :: 		
0x1E02	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 189 :: 		
0x1E04	0xBF08    IT	EQ
;__Lib_MathDouble.c, 191 :: 		
0x1E06	0xE019    BEQ	__me_lab_end
;__Lib_MathDouble.c, 193 :: 		
0x1E08	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 195 :: 		
0x1E0A	0xBF54    ITE	PL
;__Lib_MathDouble.c, 196 :: 		
0x1E0C	0x4601    MOVPL	R1, R0
;__Lib_MathDouble.c, 197 :: 		
0x1E0E	0xF1D00100  RSBSMI	R1, R0, #0
;__Lib_MathDouble.c, 199 :: 		
0x1E12	0xF04F029E  MOV	R2, #158
;__Lib_MathDouble.c, 201 :: 		
0x1E16	0xD402    BMI	__me_lab1
;__Lib_MathDouble.c, 202 :: 		
__me_loop:
0x1E18	0x1E52    SUBS	R2, R2, #1
;__Lib_MathDouble.c, 203 :: 		
0x1E1A	0x0049    LSLS	R1, R1, #1
;__Lib_MathDouble.c, 204 :: 		
0x1E1C	0xD5FC    BPL	__me_loop
;__Lib_MathDouble.c, 206 :: 		
__me_lab1:
0x1E1E	0x3180    ADDS	R1, #128
;__Lib_MathDouble.c, 207 :: 		
0x1E20	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 208 :: 		
0x1E22	0x1C52    ADDCS	R2, R2, #1
;__Lib_MathDouble.c, 209 :: 		
0x1E24	0x0049    LSLCC	R1, R1, #1
;__Lib_MathDouble.c, 211 :: 		
0x1E26	0xEA4F2151  LSR	R1, R1, #9
;__Lib_MathDouble.c, 212 :: 		
0x1E2A	0xEA4151C2  ORR	R1, R1, R2, LSL #23
;__Lib_MathDouble.c, 213 :: 		
0x1E2E	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 214 :: 		
0x1E30	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 215 :: 		
0x1E32	0xF0414000  ORRMI	R0, R1, #-2147483648
;__Lib_MathDouble.c, 216 :: 		
0x1E36	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 218 :: 		
0x1E38	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 219 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 221 :: 		
L_end__SignedIntegralToFloat:
0x1E3C	0xB001    ADD	SP, SP, #4
0x1E3E	0x4770    BX	LR
; end of __SignedIntegralToFloat
__irgrid_driver__pow:
;__irgrid_driver.c, 332 :: 		static double _pow(double x, double y) {
; x start address is: 0 (R0)
0x1D4C	0xB084    SUB	SP, SP, #16
0x1D4E	0xF8CDE000  STR	LR, [SP, #0]
0x1D52	0x9103    STR	R1, [SP, #12]
0x1D54	0x4601    MOV	R1, R0
; x end address is: 0 (R0)
; x start address is: 4 (R1)
;__irgrid_driver.c, 333 :: 		unsigned char sign = 0;
0x1D56	0x2200    MOVS	R2, #0
0x1D58	0xF88D2008  STRB	R2, [SP, #8]
;__irgrid_driver.c, 337 :: 		if(y == 0.0)
0x1D5C	0x9A03    LDR	R2, [SP, #12]
0x1D5E	0xF04F0000  MOV	R0, #0
0x1D62	0xF000F86D  BL	__Compare_FP+0
0x1D66	0xF2400000  MOVW	R0, #0
0x1D6A	0xD100    BNE	L___irgrid_driver__pow92
0x1D6C	0x2001    MOVS	R0, #1
L___irgrid_driver__pow92:
0x1D6E	0xB110    CBZ	R0, L___irgrid_driver__pow27
; x end address is: 4 (R1)
;__irgrid_driver.c, 338 :: 		return 1.0;
0x1D70	0xF04F507E  MOV	R0, #1065353216
0x1D74	0xE03F    B	L_end__pow
L___irgrid_driver__pow27:
;__irgrid_driver.c, 339 :: 		if(x == 0.0)
; x start address is: 4 (R1)
0x1D76	0xF04F0000  MOV	R0, #0
0x1D7A	0x460A    MOV	R2, R1
0x1D7C	0xF000F860  BL	__Compare_FP+0
0x1D80	0xF2400000  MOVW	R0, #0
0x1D84	0xD100    BNE	L___irgrid_driver__pow93
0x1D86	0x2001    MOVS	R0, #1
L___irgrid_driver__pow93:
0x1D88	0xB110    CBZ	R0, L___irgrid_driver__pow28
; x end address is: 4 (R1)
;__irgrid_driver.c, 340 :: 		return 0.0;
0x1D8A	0xF04F0000  MOV	R0, #0
0x1D8E	0xE032    B	L_end__pow
L___irgrid_driver__pow28:
;__irgrid_driver.c, 341 :: 		if(x < 0.0) {
; x start address is: 4 (R1)
0x1D90	0xF04F0000  MOV	R0, #0
0x1D94	0x460A    MOV	R2, R1
0x1D96	0xF000F853  BL	__Compare_FP+0
0x1D9A	0xF2400000  MOVW	R0, #0
0x1D9E	0xDD00    BLE	L___irgrid_driver__pow94
0x1DA0	0x2001    MOVS	R0, #1
L___irgrid_driver__pow94:
0x1DA2	0xB1C8    CBZ	R0, L___irgrid_driver__pow65
;__irgrid_driver.c, 342 :: 		yi = (long)y;
0x1DA4	0x9101    STR	R1, [SP, #4]
0x1DA6	0x9803    LDR	R0, [SP, #12]
0x1DA8	0xF7FFFB88  BL	__FloatToSignedIntegral+0
; yi start address is: 12 (R3)
0x1DAC	0x4603    MOV	R3, R0
;__irgrid_driver.c, 343 :: 		if((double)yi != y)
0x1DAE	0xF000F827  BL	__SignedIntegralToFloat+0
0x1DB2	0x9901    LDR	R1, [SP, #4]
0x1DB4	0x9A03    LDR	R2, [SP, #12]
0x1DB6	0xF000F843  BL	__Compare_FP+0
0x1DBA	0xF2400000  MOVW	R0, #0
0x1DBE	0xD000    BEQ	L___irgrid_driver__pow95
0x1DC0	0x2001    MOVS	R0, #1
L___irgrid_driver__pow95:
0x1DC2	0xB110    CBZ	R0, L___irgrid_driver__pow30
; x end address is: 4 (R1)
; yi end address is: 12 (R3)
;__irgrid_driver.c, 344 :: 		return 0.0;
0x1DC4	0xF04F0000  MOV	R0, #0
0x1DC8	0xE015    B	L_end__pow
L___irgrid_driver__pow30:
;__irgrid_driver.c, 345 :: 		sign = yi & 1;
; yi start address is: 12 (R3)
; x start address is: 4 (R1)
0x1DCA	0xF0030201  AND	R2, R3, #1
; yi end address is: 12 (R3)
0x1DCE	0xF88D2008  STRB	R2, [SP, #8]
;__irgrid_driver.c, 346 :: 		x = -x;
0x1DD2	0xF0814000  EOR	R0, R1, #-2147483648
; x end address is: 4 (R1)
; x start address is: 0 (R0)
; x end address is: 0 (R0)
;__irgrid_driver.c, 347 :: 		}
0x1DD6	0xE000    B	L___irgrid_driver__pow29
L___irgrid_driver__pow65:
;__irgrid_driver.c, 341 :: 		if(x < 0.0) {
0x1DD8	0x4608    MOV	R0, R1
;__irgrid_driver.c, 347 :: 		}
L___irgrid_driver__pow29:
;__irgrid_driver.c, 348 :: 		x = _log(x);
; x start address is: 0 (R0)
; x end address is: 0 (R0)
0x1DDA	0xF7FFFD59  BL	__irgrid_driver__log+0
;__irgrid_driver.c, 349 :: 		x = x*y;
0x1DDE	0x9A03    LDR	R2, [SP, #12]
0x1DE0	0xF7FFFE3A  BL	__Mul_FP+0
;__irgrid_driver.c, 350 :: 		x = _exp(x);
0x1DE4	0xF7FFFCBA  BL	__irgrid_driver__exp+0
; x start address is: 0 (R0)
;__irgrid_driver.c, 352 :: 		if(sign)
0x1DE8	0xF89D2008  LDRB	R2, [SP, #8]
0x1DEC	0xB11A    CBZ	R2, L___irgrid_driver__pow31
;__irgrid_driver.c, 353 :: 		return -x;
0x1DEE	0xF0804200  EOR	R2, R0, #-2147483648
; x end address is: 0 (R0)
0x1DF2	0x4610    MOV	R0, R2
0x1DF4	0xE7FF    B	L_end__pow
L___irgrid_driver__pow31:
;__irgrid_driver.c, 354 :: 		return x;
; x start address is: 0 (R0)
; x end address is: 0 (R0)
;__irgrid_driver.c, 355 :: 		}
L_end__pow:
0x1DF6	0xF8DDE000  LDR	LR, [SP, #0]
0x1DFA	0xB004    ADD	SP, SP, #16
0x1DFC	0x4770    BX	LR
; end of __irgrid_driver__pow
__FloatToSignedIntegral:
;__Lib_MathDouble.c, 4 :: 		
0x14BC	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 6 :: 		
0x14BE	0xB506    PUSH	(R1, R2, R14)
;__Lib_MathDouble.c, 8 :: 		
0x14C0	0xEA4F0240  LSL	R2, R0, #1
;__Lib_MathDouble.c, 9 :: 		
0x14C4	0xEA4F6212  LSR	R2, R2, #24
;__Lib_MathDouble.c, 11 :: 		
0x14C8	0x3A7F    SUBS	R2, #127
;__Lib_MathDouble.c, 12 :: 		
0x14CA	0xBF44    ITT	MI
;__Lib_MathDouble.c, 13 :: 		
0x14CC	0xF04F0000  MOVMI	R0, #0
;__Lib_MathDouble.c, 15 :: 		
0x14D0	0xE011    BMI	__me_lab_end
;__Lib_MathDouble.c, 17 :: 		
0x14D2	0xF1D2021F  RSBS	R2, R2, #31
;__Lib_MathDouble.c, 18 :: 		
0x14D6	0xD909    BLS	__me_ovfl
;__Lib_MathDouble.c, 20 :: 		
0x14D8	0xEA4F2100  LSL	R1, R0, #8
;__Lib_MathDouble.c, 21 :: 		
0x14DC	0xF0414100  ORR	R1, R1, #-2147483648
;__Lib_MathDouble.c, 23 :: 		
0x14E0	0x40D1    LSRS	R1, R2
;__Lib_MathDouble.c, 25 :: 		
0x14E2	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 26 :: 		
0x14E4	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 27 :: 		
0x14E6	0x4248    RSBMI	R0, R1, #0
;__Lib_MathDouble.c, 28 :: 		
0x14E8	0x4608    MOVPL	R0, R1
;__Lib_MathDouble.c, 31 :: 		
0x14EA	0xE004    B	__me_lab_end
;__Lib_MathDouble.c, 33 :: 		
__me_ovfl:
0x14EC	0x2800    CMP	R0, #0
;__Lib_MathDouble.c, 34 :: 		
0x14EE	0xF04F4000  MOV	R0, #-2147483648
;__Lib_MathDouble.c, 35 :: 		
0x14F2	0xBF58    IT	PL
;__Lib_MathDouble.c, 36 :: 		
0x14F4	0x1E40    SUBPL	R0, R0, #1
;__Lib_MathDouble.c, 37 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 38 :: 		
0x14F6	0xE8BD4006  POP	(R1, R2, R14)
;__Lib_MathDouble.c, 40 :: 		
L_end__FloatToSignedIntegral:
0x14FA	0xB001    ADD	SP, SP, #4
0x14FC	0x4770    BX	LR
; end of __FloatToSignedIntegral
__irgrid_driver__log:
;__irgrid_driver.c, 306 :: 		static double _log(double x) {
; x start address is: 0 (R0)
0x1890	0xB082    SUB	SP, SP, #8
0x1892	0xF8CDE000  STR	LR, [SP, #0]
0x1896	0x4603    MOV	R3, R0
; x end address is: 0 (R0)
; x start address is: 12 (R3)
;__irgrid_driver.c, 322 :: 		if(x <= 0.0)
0x1898	0xF04F0000  MOV	R0, #0
0x189C	0x461A    MOV	R2, R3
0x189E	0xF000FACF  BL	__Compare_FP+0
0x18A2	0xF2400000  MOVW	R0, #0
0x18A6	0xDB00    BLT	L___irgrid_driver__log90
0x18A8	0x2001    MOVS	R0, #1
L___irgrid_driver__log90:
0x18AA	0xB110    CBZ	R0, L___irgrid_driver__log26
; x end address is: 12 (R3)
;__irgrid_driver.c, 323 :: 		return 0.0;
0x18AC	0xF04F0000  MOV	R0, #0
0x18B0	0xE021    B	L_end__log
L___irgrid_driver__log26:
;__irgrid_driver.c, 324 :: 		x = _frexp(x, &exp) * 2.0 - 1.0;
; x start address is: 12 (R3)
0x18B2	0xA901    ADD	R1, SP, #4
0x18B4	0x4618    MOV	R0, R3
; x end address is: 12 (R3)
0x18B6	0xF7FEFF05  BL	__irgrid_driver__frexp+0
0x18BA	0xF04F4280  MOV	R2, #1073741824
0x18BE	0xF000F8CB  BL	__Mul_FP+0
0x18C2	0xF04F527E  MOV	R2, #1065353216
0x18C6	0xF000FB11  BL	__Sub_FP+0
;__irgrid_driver.c, 325 :: 		exp--;
0x18CA	0xF9BD1004  LDRSH	R1, [SP, #4]
0x18CE	0x1E49    SUBS	R1, R1, #1
0x18D0	0xF8AD1004  STRH	R1, [SP, #4]
;__irgrid_driver.c, 326 :: 		x = _eval_poly(x, coeff, sizeof coeff/sizeof coeff[0] - 1);
0x18D4	0xF2400208  MOVW	R2, #8
0x18D8	0xB212    SXTH	R2, R2
0x18DA	0x4909    LDR	R1, [PC, #36]
0x18DC	0xF7FEFECE  BL	__irgrid_driver__eval_poly+0
; x start address is: 32 (R8)
0x18E0	0x4680    MOV	R8, R0
;__irgrid_driver.c, 327 :: 		return x + 0.69314718055995 * exp;
0x18E2	0xF9BD0004  LDRSH	R0, [SP, #4]
0x18E6	0xF000FA8B  BL	__SignedIntegralToFloat+0
0x18EA	0x4A06    LDR	R2, [PC, #24]
0x18EC	0xF000F8B4  BL	__Mul_FP+0
0x18F0	0x4642    MOV	R2, R8
0x18F2	0xF000F81F  BL	__Add_FP+0
; x end address is: 32 (R8)
;__irgrid_driver.c, 329 :: 		}
L_end__log:
0x18F6	0xF8DDE000  LDR	LR, [SP, #0]
0x18FA	0xB002    ADD	SP, SP, #8
0x18FC	0x4770    BX	LR
0x18FE	0xBF00    NOP
0x1900	0x36AC0000  	__irgrid_driver__log_coeff_L0+0
0x1904	0x72183F31  	#1060205080
; end of __irgrid_driver__log
__irgrid_driver__frexp:
;__irgrid_driver.c, 163 :: 		static double _frexp(double value, int * eptr) {
; eptr start address is: 4 (R1)
; value start address is: 0 (R0)
0x06C4	0xB081    SUB	SP, SP, #4
; eptr end address is: 4 (R1)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
; eptr start address is: 4 (R1)
;__irgrid_driver.c, 167 :: 		uv.fl = value;
0x06C6	0x9000    STR	R0, [SP, #0]
; value end address is: 0 (R0)
;__irgrid_driver.c, 168 :: 		bb = uv.flt.exp - EXCESS;
0x06C8	0xF8BD2002  LDRH	R2, [SP, #2]
0x06CC	0xF3C212C7  UBFX	R2, R2, #7, #8
0x06D0	0x3A7E    SUBS	R2, #126
; bb start address is: 0 (R0)
0x06D2	0xB210    SXTH	R0, R2
;__irgrid_driver.c, 169 :: 		*eptr = bb;
0x06D4	0x8008    STRH	R0, [R1, #0]
; eptr end address is: 4 (R1)
; bb end address is: 0 (R0)
;__irgrid_driver.c, 170 :: 		uv.flt.exp = EXCESS;
0x06D6	0x237E    MOVS	R3, #126
0x06D8	0xF8BD2002  LDRH	R2, [SP, #2]
0x06DC	0xF36312CE  BFI	R2, R3, #7, #8
0x06E0	0xF8AD2002  STRH	R2, [SP, #2]
;__irgrid_driver.c, 171 :: 		return uv.fl;
0x06E4	0x9800    LDR	R0, [SP, #0]
;__irgrid_driver.c, 172 :: 		}
L_end__frexp:
0x06E6	0xB001    ADD	SP, SP, #4
0x06E8	0x4770    BX	LR
; end of __irgrid_driver__frexp
__irgrid_driver__eval_poly:
;__irgrid_driver.c, 227 :: 		static static double _eval_poly(double x, const double code * d, int n) {
; n start address is: 8 (R2)
; d start address is: 4 (R1)
; x start address is: 0 (R0)
0x067C	0xB081    SUB	SP, SP, #4
0x067E	0xF8CDE000  STR	LR, [SP, #0]
; n end address is: 8 (R2)
; d end address is: 4 (R1)
; x end address is: 0 (R0)
; x start address is: 0 (R0)
; d start address is: 4 (R1)
; n start address is: 8 (R2)
;__irgrid_driver.c, 230 :: 		res = d[n];
0x0682	0x0093    LSLS	R3, R2, #2
0x0684	0x18CB    ADDS	R3, R1, R3
0x0686	0x681B    LDR	R3, [R3, #0]
; res start address is: 16 (R4)
0x0688	0x461C    MOV	R4, R3
; x end address is: 0 (R0)
; d end address is: 4 (R1)
; n end address is: 8 (R2)
; res end address is: 16 (R4)
0x068A	0x4682    MOV	R10, R0
0x068C	0x4620    MOV	R0, R4
0x068E	0x4689    MOV	R9, R1
0x0690	0xFA0FF882  SXTH	R8, R2
;__irgrid_driver.c, 231 :: 		while(n)
L___irgrid_driver__eval_poly11:
; res start address is: 0 (R0)
; x start address is: 40 (R10)
; d start address is: 36 (R9)
; n start address is: 32 (R8)
; d start address is: 36 (R9)
; d end address is: 36 (R9)
; x start address is: 40 (R10)
; x end address is: 40 (R10)
0x0694	0xF1B80F00  CMP	R8, #0
0x0698	0xD010    BEQ	L___irgrid_driver__eval_poly12
; d end address is: 36 (R9)
; x end address is: 40 (R10)
;__irgrid_driver.c, 232 :: 		res = x * res + d[--n];
; x start address is: 40 (R10)
; d start address is: 36 (R9)
0x069A	0x4652    MOV	R2, R10
0x069C	0xF001F9DC  BL	__Mul_FP+0
; res end address is: 0 (R0)
0x06A0	0xF1A80301  SUB	R3, R8, #1
0x06A4	0xB21B    SXTH	R3, R3
; n end address is: 32 (R8)
; n start address is: 44 (R11)
0x06A6	0xFA0FFB83  SXTH	R11, R3
0x06AA	0x009B    LSLS	R3, R3, #2
0x06AC	0xEB090303  ADD	R3, R9, R3, LSL #0
0x06B0	0x681A    LDR	R2, [R3, #0]
0x06B2	0xF001F93F  BL	__Add_FP+0
; res start address is: 0 (R0)
; d end address is: 36 (R9)
; x end address is: 40 (R10)
; n end address is: 44 (R11)
0x06B6	0xFA0FF88B  SXTH	R8, R11
0x06BA	0xE7EB    B	L___irgrid_driver__eval_poly11
L___irgrid_driver__eval_poly12:
;__irgrid_driver.c, 234 :: 		return res;
; res end address is: 0 (R0)
;__irgrid_driver.c, 235 :: 		}
L_end__eval_poly:
0x06BC	0xF8DDE000  LDR	LR, [SP, #0]
0x06C0	0xB001    ADD	SP, SP, #4
0x06C2	0x4770    BX	LR
; end of __irgrid_driver__eval_poly
__irgrid_driver__exp:
;__irgrid_driver.c, 265 :: 		static double _exp(double x) {
; x start address is: 0 (R0)
0x175C	0xB084    SUB	SP, SP, #16
0x175E	0xF8CDE000  STR	LR, [SP, #0]
0x1762	0x4602    MOV	R2, R0
; x end address is: 0 (R0)
; x start address is: 8 (R2)
;__irgrid_driver.c, 283 :: 		if(x == 0.0)
0x1764	0xF04F0000  MOV	R0, #0
0x1768	0x9201    STR	R2, [SP, #4]
0x176A	0xF000FB69  BL	__Compare_FP+0
0x176E	0xF2400000  MOVW	R0, #0
0x1772	0xD100    BNE	L___irgrid_driver__exp84
0x1774	0x2001    MOVS	R0, #1
L___irgrid_driver__exp84:
0x1776	0x9A01    LDR	R2, [SP, #4]
0x1778	0xB110    CBZ	R0, L___irgrid_driver__exp20
; x end address is: 8 (R2)
;__irgrid_driver.c, 284 :: 		return 1.0;
0x177A	0xF04F507E  MOV	R0, #1065353216
0x177E	0xE060    B	L_end__exp
L___irgrid_driver__exp20:
;__irgrid_driver.c, 285 :: 		if (x > EXP_MAX)    //too big?
; x start address is: 8 (R2)
0x1780	0x4832    LDR	R0, [PC, #200]
0x1782	0x9201    STR	R2, [SP, #4]
0x1784	0xF000FB5C  BL	__Compare_FP+0
0x1788	0xF2400000  MOVW	R0, #0
0x178C	0xDA00    BGE	L___irgrid_driver__exp85
0x178E	0x2001    MOVS	R0, #1
L___irgrid_driver__exp85:
0x1790	0x9A01    LDR	R2, [SP, #4]
0x1792	0xB108    CBZ	R0, L___irgrid_driver__exp21
; x end address is: 8 (R2)
;__irgrid_driver.c, 286 :: 		return DBL_MAX;
0x1794	0x482E    LDR	R0, [PC, #184]
0x1796	0xE054    B	L_end__exp
L___irgrid_driver__exp21:
;__irgrid_driver.c, 287 :: 		if (x < EXP_MIN)    //too small?
; x start address is: 8 (R2)
0x1798	0x482E    LDR	R0, [PC, #184]
0x179A	0x9201    STR	R2, [SP, #4]
0x179C	0xF000FB50  BL	__Compare_FP+0
0x17A0	0xF2400000  MOVW	R0, #0
0x17A4	0xDD00    BLE	L___irgrid_driver__exp86
0x17A6	0x2001    MOVS	R0, #1
L___irgrid_driver__exp86:
0x17A8	0x9A01    LDR	R2, [SP, #4]
0x17AA	0xB110    CBZ	R0, L___irgrid_driver__exp22
; x end address is: 8 (R2)
;__irgrid_driver.c, 288 :: 		return 0.0;
0x17AC	0xF04F0000  MOV	R0, #0
0x17B0	0xE047    B	L_end__exp
L___irgrid_driver__exp22:
;__irgrid_driver.c, 289 :: 		sign = x < 0.0;
; x start address is: 8 (R2)
0x17B2	0xF04F0000  MOV	R0, #0
0x17B6	0x9201    STR	R2, [SP, #4]
0x17B8	0xF000FB42  BL	__Compare_FP+0
0x17BC	0xF2400000  MOVW	R0, #0
0x17C0	0xDD00    BLE	L___irgrid_driver__exp87
0x17C2	0x2001    MOVS	R0, #1
L___irgrid_driver__exp87:
0x17C4	0x9A01    LDR	R2, [SP, #4]
; sign start address is: 48 (R12)
0x17C6	0xFA5FFC80  UXTB	R12, R0
;__irgrid_driver.c, 290 :: 		if(sign)
0x17CA	0xB2C1    UXTB	R1, R0
0x17CC	0xB121    CBZ	R1, L___irgrid_driver__exp64
;__irgrid_driver.c, 291 :: 		x = -x;
0x17CE	0xF0824100  EOR	R1, R2, #-2147483648
; x end address is: 8 (R2)
; x start address is: 0 (R0)
0x17D2	0x4608    MOV	R0, R1
; x end address is: 0 (R0)
0x17D4	0x4601    MOV	R1, R0
0x17D6	0xE000    B	L___irgrid_driver__exp23
L___irgrid_driver__exp64:
;__irgrid_driver.c, 290 :: 		if(sign)
0x17D8	0x4611    MOV	R1, R2
;__irgrid_driver.c, 291 :: 		x = -x;
L___irgrid_driver__exp23:
;__irgrid_driver.c, 292 :: 		x *= 1.4426950409;            // convert to log2 //
; x start address is: 4 (R1)
0x17DA	0x481F    LDR	R0, [PC, #124]
0x17DC	0x460A    MOV	R2, R1
0x17DE	0xF000F93B  BL	__Mul_FP+0
; x end address is: 4 (R1)
; x start address is: 36 (R9)
0x17E2	0x4681    MOV	R9, R0
;__irgrid_driver.c, 293 :: 		exp = (int)_floor(x);
0x17E4	0xF7FEFF82  BL	__irgrid_driver__floor+0
0x17E8	0xF7FFFE68  BL	__FloatToSignedIntegral+0
0x17EC	0xB200    SXTH	R0, R0
0x17EE	0xF8AD0008  STRH	R0, [SP, #8]
;__irgrid_driver.c, 294 :: 		x -= (double)exp;
0x17F2	0xF000FB05  BL	__SignedIntegralToFloat+0
0x17F6	0x9003    STR	R0, [SP, #12]
0x17F8	0x9A03    LDR	R2, [SP, #12]
0x17FA	0x4648    MOV	R0, R9
0x17FC	0xF000FB76  BL	__Sub_FP+0
; x end address is: 36 (R9)
;__irgrid_driver.c, 295 :: 		x = _ldexp(_eval_poly(x, coeff, sizeof coeff/sizeof coeff[0] - 1), exp);
0x1800	0xF2400209  MOVW	R2, #9
0x1804	0xB212    SXTH	R2, R2
0x1806	0x4915    LDR	R1, [PC, #84]
0x1808	0xF7FEFF38  BL	__irgrid_driver__eval_poly+0
0x180C	0xF9BD1008  LDRSH	R1, [SP, #8]
0x1810	0xF7FEFFFC  BL	__irgrid_driver__ldexp+0
; x start address is: 4 (R1)
0x1814	0x4601    MOV	R1, R0
;__irgrid_driver.c, 296 :: 		if(sign) {
0x1816	0xF1BC0F00  CMP	R12, #0
0x181A	0xD011    BEQ	L___irgrid_driver__exp24
; sign end address is: 48 (R12)
;__irgrid_driver.c, 297 :: 		if (x == DBL_MAX)
0x181C	0x480C    LDR	R0, [PC, #48]
0x181E	0x460A    MOV	R2, R1
0x1820	0xF000FB0E  BL	__Compare_FP+0
0x1824	0xF2400000  MOVW	R0, #0
0x1828	0xD100    BNE	L___irgrid_driver__exp88
0x182A	0x2001    MOVS	R0, #1
L___irgrid_driver__exp88:
0x182C	0xB110    CBZ	R0, L___irgrid_driver__exp25
; x end address is: 4 (R1)
;__irgrid_driver.c, 298 :: 		return 0.0;
0x182E	0xF04F0000  MOV	R0, #0
0x1832	0xE006    B	L_end__exp
L___irgrid_driver__exp25:
;__irgrid_driver.c, 299 :: 		return 1.0/x;
; x start address is: 4 (R1)
0x1834	0xF04F507E  MOV	R0, #1065353216
0x1838	0x460A    MOV	R2, R1
0x183A	0xF7FEFF95  BL	__Div_FP+0
; x end address is: 4 (R1)
0x183E	0xE000    B	L_end__exp
;__irgrid_driver.c, 300 :: 		}
L___irgrid_driver__exp24:
;__irgrid_driver.c, 301 :: 		return x;
; x start address is: 4 (R1)
0x1840	0x4608    MOV	R0, R1
; x end address is: 4 (R1)
;__irgrid_driver.c, 302 :: 		}
L_end__exp:
0x1842	0xF8DDE000  LDR	LR, [SP, #0]
0x1846	0xB004    ADD	SP, SP, #16
0x1848	0x4770    BX	LR
0x184A	0xBF00    NOP
0x184C	0xD4FE42B2  	#1119016190
0x1850	0xFFFF7F7F  	#2139095039
0x1854	0xAC50C2AE  	#-1028740016
0x1858	0xAA3B3FB8  	#1069066811
0x185C	0x36840000  	__irgrid_driver__exp_coeff_L0+0
; end of __irgrid_driver__exp
__irgrid_driver__floor:
;__irgrid_driver.c, 206 :: 		static double _floor(double x) {
0x06EC	0xB082    SUB	SP, SP, #8
0x06EE	0xF8CDE000  STR	LR, [SP, #0]
0x06F2	0x9001    STR	R0, [SP, #4]
;__irgrid_driver.c, 210 :: 		expon = ((*(unsigned long *)&x >> 23) & 255);
0x06F4	0xA901    ADD	R1, SP, #4
0x06F6	0x6809    LDR	R1, [R1, #0]
0x06F8	0x0DC9    LSRS	R1, R1, #23
0x06FA	0xF00101FF  AND	R1, R1, #255
;__irgrid_driver.c, 211 :: 		expon = expon- 127;
0x06FE	0xB209    SXTH	R1, R1
0x0700	0x397F    SUBS	R1, #127
0x0702	0xB209    SXTH	R1, R1
; expon start address is: 0 (R0)
0x0704	0xB208    SXTH	R0, R1
;__irgrid_driver.c, 212 :: 		if(expon < 0)
0x0706	0x2900    CMP	R1, #0
0x0708	0xDA0E    BGE	L___irgrid_driver__floor6
; expon end address is: 0 (R0)
;__irgrid_driver.c, 213 :: 		if (x < 0.0)
0x070A	0x9A01    LDR	R2, [SP, #4]
0x070C	0xF04F0000  MOV	R0, #0
0x0710	0xF001FB96  BL	__Compare_FP+0
0x0714	0xF2400000  MOVW	R0, #0
0x0718	0xDD00    BLE	L___irgrid_driver__floor75
0x071A	0x2001    MOVS	R0, #1
L___irgrid_driver__floor75:
0x071C	0xB108    CBZ	R0, L___irgrid_driver__floor7
;__irgrid_driver.c, 214 :: 		return -1.0;
0x071E	0x4811    LDR	R0, [PC, #68]
0x0720	0xE01C    B	L_end__floor
L___irgrid_driver__floor7:
;__irgrid_driver.c, 216 :: 		return  0.0;
0x0722	0xF04F0000  MOV	R0, #0
0x0726	0xE019    B	L_end__floor
L___irgrid_driver__floor6:
;__irgrid_driver.c, 217 :: 		if((unsigned)expon > sizeof(double) * CHAR_BIT - 8)
; expon start address is: 0 (R0)
0x0728	0xB281    UXTH	R1, R0
; expon end address is: 0 (R0)
0x072A	0x2918    CMP	R1, #24
0x072C	0xD901    BLS	L___irgrid_driver__floor9
;__irgrid_driver.c, 218 :: 		return x;           /* already an integer */
0x072E	0x9801    LDR	R0, [SP, #4]
0x0730	0xE014    B	L_end__floor
L___irgrid_driver__floor9:
;__irgrid_driver.c, 219 :: 		i = _FRNDINT(x);
0x0732	0x9801    LDR	R0, [SP, #4]
0x0734	0xF000FEC2  BL	__FloatToSignedIntegral+0
0x0738	0xF001FB62  BL	__SignedIntegralToFloat+0
; i start address is: 4 (R1)
0x073C	0x4601    MOV	R1, R0
;__irgrid_driver.c, 221 :: 		if(i > x)
0x073E	0x9A01    LDR	R2, [SP, #4]
0x0740	0xF001FB7E  BL	__Compare_FP+0
0x0744	0xF2400000  MOVW	R0, #0
0x0748	0xDD00    BLE	L___irgrid_driver__floor76
0x074A	0x2001    MOVS	R0, #1
L___irgrid_driver__floor76:
0x074C	0xB128    CBZ	R0, L___irgrid_driver__floor10
;__irgrid_driver.c, 222 :: 		return i - 1.0;
0x074E	0x4608    MOV	R0, R1
0x0750	0xF04F527E  MOV	R2, #1065353216
0x0754	0xF001FBCA  BL	__Sub_FP+0
; i end address is: 4 (R1)
0x0758	0xE000    B	L_end__floor
L___irgrid_driver__floor10:
;__irgrid_driver.c, 223 :: 		return i;
; i start address is: 4 (R1)
0x075A	0x4608    MOV	R0, R1
; i end address is: 4 (R1)
;__irgrid_driver.c, 224 :: 		}
L_end__floor:
0x075C	0xF8DDE000  LDR	LR, [SP, #0]
0x0760	0xB002    ADD	SP, SP, #8
0x0762	0x4770    BX	LR
0x0764	0x0000BF80  	#-1082130432
; end of __irgrid_driver__floor
__irgrid_driver__ldexp:
;__irgrid_driver.c, 175 :: 		static double _ldexp(double value, int newexp) {
; newexp start address is: 4 (R1)
; value start address is: 0 (R0)
0x080C	0xB083    SUB	SP, SP, #12
0x080E	0xF8CDE000  STR	LR, [SP, #0]
0x0812	0xF8AD1004  STRH	R1, [SP, #4]
0x0816	0x4601    MOV	R1, R0
0x0818	0xF9BD0004  LDRSH	R0, [SP, #4]
; newexp end address is: 4 (R1)
; value end address is: 0 (R0)
; value start address is: 4 (R1)
; newexp start address is: 0 (R0)
;__irgrid_driver.c, 178 :: 		uv.fl = value;
0x081C	0x9102    STR	R1, [SP, #8]
;__irgrid_driver.c, 179 :: 		newexp += uv.flt.exp;
0x081E	0xF8BD200A  LDRH	R2, [SP, #10]
0x0822	0xF3C212C7  UBFX	R2, R2, #7, #8
0x0826	0x1882    ADDS	R2, R0, R2
0x0828	0xB210    SXTH	R0, R2
;__irgrid_driver.c, 180 :: 		if (newexp < 0)
0x082A	0xB212    SXTH	R2, R2
0x082C	0x2A00    CMP	R2, #0
0x082E	0xDA02    BGE	L___irgrid_driver__ldexp0
; value end address is: 4 (R1)
; newexp end address is: 0 (R0)
;__irgrid_driver.c, 181 :: 		return 0.0;
0x0830	0xF04F0000  MOV	R0, #0
0x0834	0xE019    B	L_end__ldexp
L___irgrid_driver__ldexp0:
;__irgrid_driver.c, 183 :: 		if (newexp > MAX_EXPONENT)
; newexp start address is: 0 (R0)
; value start address is: 4 (R1)
0x0836	0xF1B00FFF  CMP	R0, #255
0x083A	0xDD0E    BLE	L___irgrid_driver__ldexp2
; newexp end address is: 0 (R0)
;__irgrid_driver.c, 184 :: 		if (value < 0.0)
0x083C	0xF04F0000  MOV	R0, #0
0x0840	0x460A    MOV	R2, R1
0x0842	0xF001FAFD  BL	__Compare_FP+0
0x0846	0xF2400000  MOVW	R0, #0
0x084A	0xDD00    BLE	L___irgrid_driver__ldexp73
0x084C	0x2001    MOVS	R0, #1
L___irgrid_driver__ldexp73:
; value end address is: 4 (R1)
0x084E	0xB110    CBZ	R0, L___irgrid_driver__ldexp3
;__irgrid_driver.c, 185 :: 		return -DBL_MAX;
0x0850	0xF46F0000  MVN	R0, #8388608
0x0854	0xE009    B	L_end__ldexp
L___irgrid_driver__ldexp3:
;__irgrid_driver.c, 187 :: 		return DBL_MAX;
0x0856	0x4807    LDR	R0, [PC, #28]
0x0858	0xE007    B	L_end__ldexp
L___irgrid_driver__ldexp2:
;__irgrid_driver.c, 189 :: 		uv.flt.exp = newexp;
; newexp start address is: 0 (R0)
0x085A	0xB283    UXTH	R3, R0
; newexp end address is: 0 (R0)
0x085C	0xF8BD200A  LDRH	R2, [SP, #10]
0x0860	0xF36312CE  BFI	R2, R3, #7, #8
0x0864	0xF8AD200A  STRH	R2, [SP, #10]
;__irgrid_driver.c, 190 :: 		return uv.fl;
0x0868	0x9802    LDR	R0, [SP, #8]
;__irgrid_driver.c, 192 :: 		}
L_end__ldexp:
0x086A	0xF8DDE000  LDR	LR, [SP, #0]
0x086E	0xB003    ADD	SP, SP, #12
0x0870	0x4770    BX	LR
0x0872	0xBF00    NOP
0x0874	0xFFFF7F7F  	#2139095039
; end of __irgrid_driver__ldexp
__Div_FP:
;__Lib_MathDouble.c, 743 :: 		
0x0768	0xB081    SUB	SP, SP, #4
;__Lib_MathDouble.c, 745 :: 		
0x076A	0xB5FA    PUSH	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 746 :: 		
0x076C	0xEA900602  EORS	R6, R0, R2, LSL #0
;__Lib_MathDouble.c, 747 :: 		
0x0770	0xBF4C    ITE	MI
;__Lib_MathDouble.c, 748 :: 		
0x0772	0xF04F4600  MOVMI	R6, #-2147483648
;__Lib_MathDouble.c, 749 :: 		
0x0776	0xF04F0600  MOVPL	R6, #0
;__Lib_MathDouble.c, 751 :: 		
0x077A	0x0201    LSLS	R1, R0, #8
;__Lib_MathDouble.c, 752 :: 		
0x077C	0x0043    LSLS	R3, R0, #1
;__Lib_MathDouble.c, 753 :: 		
0x077E	0x0E1B    LSRS	R3, R3, #24
;__Lib_MathDouble.c, 754 :: 		
0x0780	0xBF12    ITEE	NE
;__Lib_MathDouble.c, 755 :: 		
0x0782	0xF0414100  ORRNE	R1, R1, #-2147483648
;__Lib_MathDouble.c, 757 :: 		
0x0786	0xF04F0000  MOVEQ	R0, #0
;__Lib_MathDouble.c, 759 :: 		
0x078A	0xE03B    BEQ	__me_lab_end
;__Lib_MathDouble.c, 761 :: 		
0x078C	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 762 :: 		
0x078E	0xD035    BEQ	__me_ovfl
;__Lib_MathDouble.c, 764 :: 		
0x0790	0xEA5F2402  LSLS	R4, R2, #8
;__Lib_MathDouble.c, 765 :: 		
0x0794	0xEA5F0542  LSLS	R5, R2, #1
;__Lib_MathDouble.c, 766 :: 		
0x0798	0xEA5F6515  LSRS	R5, R5, #24
;__Lib_MathDouble.c, 767 :: 		
0x079C	0xBF11    ITEEE	NE
;__Lib_MathDouble.c, 769 :: 		
0x079E	0xF0444400  ORRNE	R4, R4, #-2147483648
;__Lib_MathDouble.c, 770 :: 		
0x07A2	0xF04F40FF  MOVEQ	R0, #2139095040
;__Lib_MathDouble.c, 771 :: 		
0x07A6	0x4330    ORREQ	R0, R6
;__Lib_MathDouble.c, 773 :: 		
0x07A8	0xE02C    BEQ	__me_lab_end
;__Lib_MathDouble.c, 775 :: 		
0x07AA	0x2DFF    CMP	R5, #255
;__Lib_MathDouble.c, 776 :: 		
0x07AC	0xD026    BEQ	__me_ovfl
;__Lib_MathDouble.c, 778 :: 		
0x07AE	0x1B5B    SUBS	R3, R3, R5
;__Lib_MathDouble.c, 781 :: 		
0x07B0	0x2000    MOVS	R0, #0
;__Lib_MathDouble.c, 782 :: 		
0x07B2	0x2720    MOVS	R7, #32
;__Lib_MathDouble.c, 783 :: 		
0x07B4	0x0864    LSRS	R4, R4, #1
;__Lib_MathDouble.c, 784 :: 		
0x07B6	0x0849    LSRS	R1, R1, #1
;__Lib_MathDouble.c, 786 :: 		
__me_fdiv_:
;__Lib_MathDouble.c, 788 :: 		
0x07B8	0x42A1    CMP	R1, R4
;__Lib_MathDouble.c, 790 :: 		
0x07BA	0xEB400000  ADC	R0, R0, R0, LSL #0
;__Lib_MathDouble.c, 791 :: 		
0x07BE	0xBF28    IT	CS
;__Lib_MathDouble.c, 792 :: 		
0x07C0	0x1B09    SUBCS	R1, R1, R4
;__Lib_MathDouble.c, 793 :: 		
0x07C2	0x1E7F    SUBS	R7, R7, #1
;__Lib_MathDouble.c, 794 :: 		
0x07C4	0xD004    BEQ	__me_flb1_
;__Lib_MathDouble.c, 795 :: 		
0x07C6	0x2900    CMP	R1, #0
;__Lib_MathDouble.c, 796 :: 		
0x07C8	0xBF18    IT	NE
;__Lib_MathDouble.c, 797 :: 		
0x07CA	0x0049    LSLNE	R1, R1, #1
;__Lib_MathDouble.c, 798 :: 		
0x07CC	0xD1F4    BNE	__me_fdiv_
;__Lib_MathDouble.c, 800 :: 		
0x07CE	0x40B8    LSLS	R0, R7
;__Lib_MathDouble.c, 802 :: 		
__me_flb1_:
0x07D0	0xF0104F00  TST	R0, #-2147483648
;__Lib_MathDouble.c, 803 :: 		
0x07D4	0xBF04    ITT	EQ
;__Lib_MathDouble.c, 804 :: 		
0x07D6	0x0040    LSLEQ	R0, R0, #1
;__Lib_MathDouble.c, 805 :: 		
0x07D8	0xF1B30301  SUBSEQ	R3, R3, #1
;__Lib_MathDouble.c, 807 :: 		
0x07DC	0x3080    ADDS	R0, #128
;__Lib_MathDouble.c, 808 :: 		
0x07DE	0xBF2C    ITE	CS
;__Lib_MathDouble.c, 809 :: 		
0x07E0	0x1C5B    ADDCS	R3, R3, #1
;__Lib_MathDouble.c, 810 :: 		
0x07E2	0x0040    LSLCC	R0, R0, #1
;__Lib_MathDouble.c, 812 :: 		
__me_flb2_:
0x07E4	0x337F    ADDS	R3, #127
;__Lib_MathDouble.c, 813 :: 		
0x07E6	0xBFDC    ITT	LE
;__Lib_MathDouble.c, 814 :: 		
0x07E8	0xF04F0000  MOVLE	R0, #0
;__Lib_MathDouble.c, 816 :: 		
0x07EC	0xE00A    BLE	__me_lab_end
;__Lib_MathDouble.c, 818 :: 		
0x07EE	0x2BFF    CMP	R3, #255
;__Lib_MathDouble.c, 819 :: 		
0x07F0	0xD204    BCS	__me_ovfl
;__Lib_MathDouble.c, 821 :: 		
0x07F2	0x0A40    LSRS	R0, R0, #9
;__Lib_MathDouble.c, 822 :: 		
0x07F4	0xEA4050C3  ORR	R0, R0, R3, LSL #23
;__Lib_MathDouble.c, 823 :: 		
0x07F8	0x4330    ORRS	R0, R6
;__Lib_MathDouble.c, 826 :: 		
0x07FA	0xE003    B	__me_lab_end
;__Lib_MathDouble.c, 828 :: 		
__me_ovfl:
0x07FC	0x27FF    MOVS	R7, #255
;__Lib_MathDouble.c, 829 :: 		
0x07FE	0x05FF    LSLS	R7, R7, #23
;__Lib_MathDouble.c, 830 :: 		
0x0800	0xEA560007  ORRS	R0, R6, R7, LSL #0
;__Lib_MathDouble.c, 831 :: 		
__me_lab_end:
;__Lib_MathDouble.c, 832 :: 		
0x0804	0xE8BD40FA  POP	(R1, R3, R4, R5, R6, R7, R14)
;__Lib_MathDouble.c, 834 :: 		
L_end__Div_FP:
0x0808	0xB001    ADD	SP, SP, #4
0x080A	0x4770    BX	LR
; end of __Div_FP
__irgrid_driver__sqrt:
;__irgrid_driver.c, 239 :: 		static double _sqrt(double x) {
; x start address is: 0 (R0)
0x1C24	0xB082    SUB	SP, SP, #8
0x1C26	0xF8CDE000  STR	LR, [SP, #0]
0x1C2A	0x4680    MOV	R8, R0
; x end address is: 0 (R0)
; x start address is: 32 (R8)
;__irgrid_driver.c, 244 :: 		if(x <= 0.0)
0x1C2C	0xF04F0000  MOV	R0, #0
0x1C30	0x4642    MOV	R2, R8
0x1C32	0xF000F905  BL	__Compare_FP+0
0x1C36	0xF2400000  MOVW	R0, #0
0x1C3A	0xDB00    BLT	L___irgrid_driver__sqrt79
0x1C3C	0x2001    MOVS	R0, #1
L___irgrid_driver__sqrt79:
0x1C3E	0xB110    CBZ	R0, L___irgrid_driver__sqrt13
; x end address is: 32 (R8)
;__irgrid_driver.c, 245 :: 		return 0.0;
0x1C40	0xF04F0000  MOV	R0, #0
0x1C44	0xE055    B	L_end__sqrt
L___irgrid_driver__sqrt13:
;__irgrid_driver.c, 246 :: 		og = x;
; og start address is: 4 (R1)
; x start address is: 32 (R8)
0x1C46	0x4641    MOV	R1, R8
;__irgrid_driver.c, 247 :: 		if(og < 1.0)
0x1C48	0xF04F507E  MOV	R0, #1065353216
0x1C4C	0x4642    MOV	R2, R8
0x1C4E	0xF000F8F7  BL	__Compare_FP+0
0x1C52	0xF2400000  MOVW	R0, #0
0x1C56	0xDD00    BLE	L___irgrid_driver__sqrt80
0x1C58	0x2001    MOVS	R0, #1
L___irgrid_driver__sqrt80:
0x1C5A	0xB138    CBZ	R0, L___irgrid_driver__sqrt61
;__irgrid_driver.c, 248 :: 		og = 1.0/og;
0x1C5C	0xF04F507E  MOV	R0, #1065353216
0x1C60	0x460A    MOV	R2, R1
0x1C62	0xF7FEFD81  BL	__Div_FP+0
0x1C66	0x4601    MOV	R1, R0
; og end address is: 4 (R1)
0x1C68	0x4608    MOV	R0, R1
0x1C6A	0xE000    B	L___irgrid_driver__sqrt14
L___irgrid_driver__sqrt61:
;__irgrid_driver.c, 247 :: 		if(og < 1.0)
0x1C6C	0x4608    MOV	R0, R1
;__irgrid_driver.c, 248 :: 		og = 1.0/og;
L___irgrid_driver__sqrt14:
;__irgrid_driver.c, 249 :: 		og = _frexp(og, &expon);
; og start address is: 0 (R0)
0x1C6E	0xA901    ADD	R1, SP, #4
; og end address is: 0 (R0)
0x1C70	0xF7FEFD28  BL	__irgrid_driver__frexp+0
;__irgrid_driver.c, 250 :: 		og = _ldexp(og, expon/2);                // make an educated guess //
0x1C74	0xF9BD2004  LDRSH	R2, [SP, #4]
0x1C78	0x2102    MOVS	R1, #2
0x1C7A	0xB209    SXTH	R1, R1
0x1C7C	0xFB92F1F1  SDIV	R1, R2, R1
0x1C80	0xF7FEFDC4  BL	__irgrid_driver__ldexp+0
; og start address is: 4 (R1)
0x1C84	0x4601    MOV	R1, R0
;__irgrid_driver.c, 251 :: 		if(x < 1.0)
0x1C86	0xF04F507E  MOV	R0, #1065353216
0x1C8A	0x4642    MOV	R2, R8
0x1C8C	0xF000F8D8  BL	__Compare_FP+0
0x1C90	0xF2400000  MOVW	R0, #0
0x1C94	0xDD00    BLE	L___irgrid_driver__sqrt81
0x1C96	0x2001    MOVS	R0, #1
L___irgrid_driver__sqrt81:
0x1C98	0xB138    CBZ	R0, L___irgrid_driver__sqrt62
;__irgrid_driver.c, 252 :: 		og = 1.0/og;
0x1C9A	0xF04F507E  MOV	R0, #1065353216
0x1C9E	0x460A    MOV	R2, R1
0x1CA0	0xF7FEFD62  BL	__Div_FP+0
0x1CA4	0x4601    MOV	R1, R0
; og end address is: 4 (R1)
0x1CA6	0x468B    MOV	R11, R1
0x1CA8	0xE000    B	L___irgrid_driver__sqrt15
L___irgrid_driver__sqrt62:
;__irgrid_driver.c, 251 :: 		if(x < 1.0)
0x1CAA	0x468B    MOV	R11, R1
;__irgrid_driver.c, 252 :: 		og = 1.0/og;
L___irgrid_driver__sqrt15:
;__irgrid_driver.c, 253 :: 		niter = 20;
; og start address is: 44 (R11)
; niter start address is: 40 (R10)
0x1CAC	0xF2400A14  MOVW	R10, #20
; x end address is: 32 (R8)
; og end address is: 44 (R11)
; niter end address is: 40 (R10)
0x1CB0	0x46C1    MOV	R9, R8
;__irgrid_driver.c, 254 :: 		do {
0x1CB2	0xE7FF    B	L___irgrid_driver__sqrt16
L___irgrid_driver__sqrt63:
;__irgrid_driver.c, 259 :: 		} while(--niter);
;__irgrid_driver.c, 254 :: 		do {
L___irgrid_driver__sqrt16:
;__irgrid_driver.c, 255 :: 		ng = (x/og + og)/2.0;
; niter start address is: 40 (R10)
; og start address is: 44 (R11)
; x start address is: 36 (R9)
0x1CB4	0x465A    MOV	R2, R11
0x1CB6	0x4648    MOV	R0, R9
0x1CB8	0xF7FEFD56  BL	__Div_FP+0
0x1CBC	0x465A    MOV	R2, R11
0x1CBE	0xF7FFFE39  BL	__Add_FP+0
0x1CC2	0xF04F4280  MOV	R2, #1073741824
0x1CC6	0xF7FEFD4F  BL	__Div_FP+0
; ng start address is: 4 (R1)
0x1CCA	0x4601    MOV	R1, R0
;__irgrid_driver.c, 256 :: 		if(ng == og)
0x1CCC	0x465A    MOV	R2, R11
0x1CCE	0xF000F8B7  BL	__Compare_FP+0
0x1CD2	0xF2400000  MOVW	R0, #0
0x1CD6	0xD100    BNE	L___irgrid_driver__sqrt82
0x1CD8	0x2001    MOVS	R0, #1
L___irgrid_driver__sqrt82:
0x1CDA	0xB108    CBZ	R0, L___irgrid_driver__sqrt19
; x end address is: 36 (R9)
; ng end address is: 4 (R1)
; niter end address is: 40 (R10)
;__irgrid_driver.c, 257 :: 		break;
0x1CDC	0x4658    MOV	R0, R11
; og end address is: 44 (R11)
0x1CDE	0xE008    B	L___irgrid_driver__sqrt17
L___irgrid_driver__sqrt19:
;__irgrid_driver.c, 258 :: 		og = ng;
; niter start address is: 40 (R10)
; og start address is: 44 (R11)
; ng start address is: 4 (R1)
; x start address is: 36 (R9)
0x1CE0	0x468B    MOV	R11, R1
; ng end address is: 4 (R1)
;__irgrid_driver.c, 259 :: 		} while(--niter);
0x1CE2	0xF1AA0101  SUB	R1, R10, #1
0x1CE6	0xB289    UXTH	R1, R1
0x1CE8	0xFA1FFA81  UXTH	R10, R1
0x1CEC	0x2900    CMP	R1, #0
0x1CEE	0xD1E1    BNE	L___irgrid_driver__sqrt63
; x end address is: 36 (R9)
; og end address is: 44 (R11)
; niter end address is: 40 (R10)
0x1CF0	0x4658    MOV	R0, R11
L___irgrid_driver__sqrt17:
;__irgrid_driver.c, 261 :: 		return og;
; og start address is: 0 (R0)
; og end address is: 0 (R0)
;__irgrid_driver.c, 262 :: 		}
L_end__sqrt:
0x1CF2	0xF8DDE000  LDR	LR, [SP, #0]
0x1CF6	0xB002    ADD	SP, SP, #8
0x1CF8	0x4770    BX	LR
; end of __irgrid_driver__sqrt
__irgrid_driver__get_cpix:
;__irgrid_driver.c, 472 :: 		static void _get_cpix()
0x2930	0xB083    SUB	SP, SP, #12
0x2932	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid_driver.c, 477 :: 		tmp[0] = 0x02;
0x2936	0xF10D0206  ADD	R2, SP, #6
0x293A	0x2002    MOVS	R0, #2
0x293C	0x7010    STRB	R0, [R2, #0]
;__irgrid_driver.c, 478 :: 		tmp[1] = 0x41;
0x293E	0x1C51    ADDS	R1, R2, #1
0x2940	0x2041    MOVS	R0, #65
0x2942	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 479 :: 		tmp[2] = 0x00;
0x2944	0x1C91    ADDS	R1, R2, #2
0x2946	0x2000    MOVS	R0, #0
0x2948	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 480 :: 		tmp[3] = 0x01;
0x294A	0x1CD1    ADDS	R1, R2, #3
0x294C	0x2001    MOVS	R0, #1
0x294E	0x7008    STRB	R0, [R1, #0]
;__irgrid_driver.c, 482 :: 		hal_i2cStart();
0x2950	0xF7FFF8C8  BL	__irgrid_driver_hal_i2cStart+0
;__irgrid_driver.c, 483 :: 		hal_i2cWrite(_slaveRAM, tmp, 4, END_MODE_RESTART);
0x2954	0xF10D0106  ADD	R1, SP, #6
0x2958	0x4811    LDR	R0, [PC, #68]
0x295A	0x7800    LDRB	R0, [R0, #0]
0x295C	0x2300    MOVS	R3, #0
0x295E	0x2204    MOVS	R2, #4
0x2960	0xF7FFFAB0  BL	__irgrid_driver_hal_i2cWrite+0
;__irgrid_driver.c, 484 :: 		hal_i2cRead(_slaveRAM, rd, 2, END_MODE_STOP );
0x2964	0xA901    ADD	R1, SP, #4
0x2966	0x480E    LDR	R0, [PC, #56]
0x2968	0x7800    LDRB	R0, [R0, #0]
0x296A	0x2301    MOVS	R3, #1
0x296C	0x2202    MOVS	R2, #2
0x296E	0xF7FFF861  BL	__irgrid_driver_hal_i2cRead+0
;__irgrid_driver.c, 486 :: 		cpix = ((uint16_t)(rd[1] << 8) | rd[0]);
0x2972	0xAA01    ADD	R2, SP, #4
0x2974	0x1C50    ADDS	R0, R2, #1
0x2976	0x7800    LDRB	R0, [R0, #0]
0x2978	0x0201    LSLS	R1, R0, #8
0x297A	0xB289    UXTH	R1, R1
0x297C	0x7810    LDRB	R0, [R2, #0]
0x297E	0x4301    ORRS	R1, R0
0x2980	0x4808    LDR	R0, [PC, #32]
0x2982	0x8001    STRH	R1, [R0, #0]
;__irgrid_driver.c, 488 :: 		if (cpix >= 32768)
0x2984	0xB208    SXTH	R0, R1
0x2986	0xF5B04F00  CMP	R0, #32768
0x298A	0xD305    BCC	L___irgrid_driver__get_cpix45
;__irgrid_driver.c, 490 :: 		cpix -= 65536;
0x298C	0x4905    LDR	R1, [PC, #20]
0x298E	0xF9B10000  LDRSH	R0, [R1, #0]
0x2992	0xF5A03080  SUB	R0, R0, #65536
0x2996	0x8008    STRH	R0, [R1, #0]
;__irgrid_driver.c, 491 :: 		}
L___irgrid_driver__get_cpix45:
;__irgrid_driver.c, 492 :: 		}
L_end__get_cpix:
0x2998	0xF8DDE000  LDR	LR, [SP, #0]
0x299C	0xB003    ADD	SP, SP, #12
0x299E	0x4770    BX	LR
0x29A0	0x00472000  	__irgrid_driver__slaveRAM+0
0x29A4	0x01982000  	__irgrid_driver_cpix+0
; end of __irgrid_driver__get_cpix
__irgrid_driver__calc_to:
;__irgrid_driver.c, 544 :: 		static void _calc_to()
0x2054	0xB08D    SUB	SP, SP, #52
0x2056	0xF8CDE000  STR	LR, [SP, #0]
;__irgrid_driver.c, 554 :: 		emissivity = (256 * _eeprom_data[_IRGRID_CAL_EMIS_H] + _eeprom_data[_IRGRID_CAL_EMIS_L]) / 32768.0;
0x205A	0x48BC    LDR	R0, [PC, #752]
0x205C	0x7800    LDRB	R0, [R0, #0]
0x205E	0x0201    LSLS	R1, R0, #8
0x2060	0xB209    SXTH	R1, R1
0x2062	0x48BB    LDR	R0, [PC, #748]
0x2064	0x7800    LDRB	R0, [R0, #0]
0x2066	0x1808    ADDS	R0, R1, R0
0x2068	0xB200    SXTH	R0, R0
0x206A	0xF7FFFEC9  BL	__SignedIntegralToFloat+0
0x206E	0xF04F428E  MOV	R2, #1191182336
0x2072	0xF7FEFB79  BL	__Div_FP+0
0x2076	0x49B7    LDR	R1, [PC, #732]
0x2078	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 555 :: 		a_common = (int16_t) 256 * _eeprom_data[_IRGRID_CAL_ACOMMON_H] + _eeprom_data[_IRGRID_CAL_ACOMMON_L];
0x207A	0x48B7    LDR	R0, [PC, #732]
0x207C	0x7800    LDRB	R0, [R0, #0]
0x207E	0x0201    LSLS	R1, R0, #8
0x2080	0xB209    SXTH	R1, R1
0x2082	0x48B6    LDR	R0, [PC, #728]
0x2084	0x7800    LDRB	R0, [R0, #0]
0x2086	0x1809    ADDS	R1, R1, R0
0x2088	0x48B5    LDR	R0, [PC, #724]
0x208A	0x8001    STRH	R1, [R0, #0]
;__irgrid_driver.c, 557 :: 		alpha_cp = (256 * _eeprom_data[_IRGRID_CAL_ALPHA_CP_H] + _eeprom_data[_IRGRID_CAL_ALPHA_CP_L]) / (_pow(2, _eeprom_data[_IRGRID_CAL_A0_SCALE]) * _pow(2, (3 - resolution)));
0x208C	0x48B5    LDR	R0, [PC, #724]
0x208E	0x7800    LDRB	R0, [R0, #0]
0x2090	0x0201    LSLS	R1, R0, #8
0x2092	0xB209    SXTH	R1, R1
0x2094	0x48B4    LDR	R0, [PC, #720]
0x2096	0x7800    LDRB	R0, [R0, #0]
0x2098	0x1808    ADDS	R0, R1, R0
0x209A	0xF8AD0028  STRH	R0, [SP, #40]
0x209E	0x48B3    LDR	R0, [PC, #716]
0x20A0	0x7800    LDRB	R0, [R0, #0]
0x20A2	0xF7FFFC31  BL	__UnsignedIntegralToFloat+0
0x20A6	0x4601    MOV	R1, R0
0x20A8	0xF04F4080  MOV	R0, #1073741824
0x20AC	0xF7FFFE4E  BL	__irgrid_driver__pow+0
0x20B0	0x9009    STR	R0, [SP, #36]
0x20B2	0x48AF    LDR	R0, [PC, #700]
0x20B4	0xF9B00000  LDRSH	R0, [R0, #0]
0x20B8	0xF1C00003  RSB	R0, R0, #3
0x20BC	0xB200    SXTH	R0, R0
0x20BE	0xF7FFFE9F  BL	__SignedIntegralToFloat+0
0x20C2	0x4601    MOV	R1, R0
0x20C4	0xF04F4080  MOV	R0, #1073741824
0x20C8	0xF7FFFE40  BL	__irgrid_driver__pow+0
0x20CC	0x9A09    LDR	R2, [SP, #36]
0x20CE	0xF7FFFCC3  BL	__Mul_FP+0
0x20D2	0xF9BD1028  LDRSH	R1, [SP, #40]
0x20D6	0x9009    STR	R0, [SP, #36]
0x20D8	0xB208    SXTH	R0, R1
0x20DA	0xF7FFFE91  BL	__SignedIntegralToFloat+0
0x20DE	0x9A09    LDR	R2, [SP, #36]
0x20E0	0xF7FEFB42  BL	__Div_FP+0
0x20E4	0x49A3    LDR	R1, [PC, #652]
0x20E6	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 558 :: 		a_i_scale = (int16_t) (_eeprom_data[_IRGRID_CAL_AI_SCALE] & 0xF0) >> 4;
0x20E8	0x4AA3    LDR	R2, [PC, #652]
0x20EA	0x7810    LDRB	R0, [R2, #0]
0x20EC	0xF00000F0  AND	R0, R0, #240
0x20F0	0xB2C0    UXTB	R0, R0
0x20F2	0x1101    ASRS	R1, R0, #4
0x20F4	0x48A1    LDR	R0, [PC, #644]
0x20F6	0x8001    STRH	R1, [R0, #0]
;__irgrid_driver.c, 559 :: 		b_i_scale = (int16_t) _eeprom_data[_IRGRID_CAL_BI_SCALE] & 0x0F;
0x20F8	0x4610    MOV	R0, R2
0x20FA	0x7800    LDRB	R0, [R0, #0]
0x20FC	0xF000010F  AND	R1, R0, #15
0x2100	0x489F    LDR	R0, [PC, #636]
0x2102	0x8001    STRH	R1, [R0, #0]
;__irgrid_driver.c, 561 :: 		a_cp = (float) 256 * _eeprom_data[_IRGRID_CAL_ACP_H] + _eeprom_data[_IRGRID_CAL_ACP_L];
0x2104	0x489F    LDR	R0, [PC, #636]
0x2106	0x7800    LDRB	R0, [R0, #0]
0x2108	0xF7FFFBFE  BL	__UnsignedIntegralToFloat+0
0x210C	0xF04F4287  MOV	R2, #1132462080
0x2110	0xF7FFFCA2  BL	__Mul_FP+0
0x2114	0x9009    STR	R0, [SP, #36]
0x2116	0x489C    LDR	R0, [PC, #624]
0x2118	0x7800    LDRB	R0, [R0, #0]
0x211A	0xF7FFFBF5  BL	__UnsignedIntegralToFloat+0
0x211E	0x9A09    LDR	R2, [SP, #36]
0x2120	0xF7FFFC08  BL	__Add_FP+0
0x2124	0x4999    LDR	R1, [PC, #612]
0x2126	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 562 :: 		a_cp /= _pow(2, (3 - resolution));
0x2128	0x4891    LDR	R0, [PC, #580]
0x212A	0xF9B00000  LDRSH	R0, [R0, #0]
0x212E	0xF1C00003  RSB	R0, R0, #3
0x2132	0xB200    SXTH	R0, R0
0x2134	0xF7FFFE64  BL	__SignedIntegralToFloat+0
0x2138	0x4601    MOV	R1, R0
0x213A	0xF04F4080  MOV	R0, #1073741824
0x213E	0xF7FFFE05  BL	__irgrid_driver__pow+0
0x2142	0x9006    STR	R0, [SP, #24]
0x2144	0x9A06    LDR	R2, [SP, #24]
0x2146	0x4891    LDR	R0, [PC, #580]
0x2148	0x9009    STR	R0, [SP, #36]
0x214A	0x6800    LDR	R0, [R0, #0]
0x214C	0xF7FEFB0C  BL	__Div_FP+0
0x2150	0x9909    LDR	R1, [SP, #36]
0x2152	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 563 :: 		b_cp = (float) _eeprom_data[_IRGRID_CAL_BCP];
0x2154	0x488E    LDR	R0, [PC, #568]
0x2156	0x7800    LDRB	R0, [R0, #0]
0x2158	0xF7FFFBD6  BL	__UnsignedIntegralToFloat+0
0x215C	0x498D    LDR	R1, [PC, #564]
0x215E	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 564 :: 		b_cp /= (_pow(2, b_i_scale) * _pow(2, (3 - resolution)));
0x2160	0x4887    LDR	R0, [PC, #540]
0x2162	0xF9B00000  LDRSH	R0, [R0, #0]
0x2166	0xF7FFFE4B  BL	__SignedIntegralToFloat+0
0x216A	0x4601    MOV	R1, R0
0x216C	0xF04F4080  MOV	R0, #1073741824
0x2170	0xF7FFFDEC  BL	__irgrid_driver__pow+0
0x2174	0x9009    STR	R0, [SP, #36]
0x2176	0x487E    LDR	R0, [PC, #504]
0x2178	0xF9B00000  LDRSH	R0, [R0, #0]
0x217C	0xF1C00003  RSB	R0, R0, #3
0x2180	0xB200    SXTH	R0, R0
0x2182	0xF7FFFE3D  BL	__SignedIntegralToFloat+0
0x2186	0x4601    MOV	R1, R0
0x2188	0xF04F4080  MOV	R0, #1073741824
0x218C	0xF7FFFDDE  BL	__irgrid_driver__pow+0
0x2190	0x9A09    LDR	R2, [SP, #36]
0x2192	0xF7FFFC61  BL	__Mul_FP+0
0x2196	0x9005    STR	R0, [SP, #20]
0x2198	0x9A05    LDR	R2, [SP, #20]
0x219A	0x487E    LDR	R0, [PC, #504]
0x219C	0x900A    STR	R0, [SP, #40]
0x219E	0x6800    LDR	R0, [R0, #0]
0x21A0	0xF7FEFAE2  BL	__Div_FP+0
0x21A4	0x990A    LDR	R1, [SP, #40]
0x21A6	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 565 :: 		tgc = (float) _eeprom_data[_IRGRID_CAL_TGC];
0x21A8	0x487B    LDR	R0, [PC, #492]
0x21AA	0x7800    LDRB	R0, [R0, #0]
0x21AC	0xF7FFFBAC  BL	__UnsignedIntegralToFloat+0
0x21B0	0x497A    LDR	R1, [PC, #488]
0x21B2	0x9109    STR	R1, [SP, #36]
0x21B4	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 566 :: 		tgc /= 32.0;
0x21B6	0xF04F4284  MOV	R2, #1107296256
0x21BA	0xF7FEFAD5  BL	__Div_FP+0
0x21BE	0x9909    LDR	R1, [SP, #36]
0x21C0	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 567 :: 		vcp_offset_compensated = (float) cpix - (a_cp + b_cp * (_temperature_amb - 25.0));
0x21C2	0x4877    LDR	R0, [PC, #476]
0x21C4	0xF9B00000  LDRSH	R0, [R0, #0]
0x21C8	0xF7FFFE1A  BL	__SignedIntegralToFloat+0
0x21CC	0x9009    STR	R0, [SP, #36]
0x21CE	0x4875    LDR	R0, [PC, #468]
0x21D0	0x6800    LDR	R0, [R0, #0]
0x21D2	0x4A75    LDR	R2, [PC, #468]
0x21D4	0xF7FFFE8A  BL	__Sub_FP+0
0x21D8	0x990A    LDR	R1, [SP, #40]
0x21DA	0x680A    LDR	R2, [R1, #0]
0x21DC	0xF7FFFC3C  BL	__Mul_FP+0
0x21E0	0x496A    LDR	R1, [PC, #424]
0x21E2	0x680A    LDR	R2, [R1, #0]
0x21E4	0xF7FFFBA6  BL	__Add_FP+0
0x21E8	0x9005    STR	R0, [SP, #20]
0x21EA	0x9A05    LDR	R2, [SP, #20]
0x21EC	0x9809    LDR	R0, [SP, #36]
0x21EE	0xF7FFFE7D  BL	__Sub_FP+0
0x21F2	0x9002    STR	R0, [SP, #8]
;__irgrid_driver.c, 569 :: 		for (i = 0; i < 64; i++)
0x21F4	0x2000    MOVS	R0, #0
0x21F6	0xF8AD0004  STRH	R0, [SP, #4]
L___irgrid_driver__calc_to49:
0x21FA	0xF8BD0004  LDRH	R0, [SP, #4]
0x21FE	0x2840    CMP	R0, #64
0x2200	0xF08081A9  BCS	L___irgrid_driver__calc_to50
;__irgrid_driver.c, 571 :: 		_a_data[i] = ((float) a_common + _eeprom_data[i] * _pow(2, a_i_scale)) / _pow(2, (3 - resolution));
0x2204	0xF8BD0004  LDRH	R0, [SP, #4]
0x2208	0x0081    LSLS	R1, R0, #2
0x220A	0x4868    LDR	R0, [PC, #416]
0x220C	0x1840    ADDS	R0, R0, R1
0x220E	0x900B    STR	R0, [SP, #44]
0x2210	0x4853    LDR	R0, [PC, #332]
0x2212	0xF9B00000  LDRSH	R0, [R0, #0]
0x2216	0xF7FFFDF3  BL	__SignedIntegralToFloat+0
0x221A	0x900A    STR	R0, [SP, #40]
0x221C	0xF8BD1004  LDRH	R1, [SP, #4]
0x2220	0x4863    LDR	R0, [PC, #396]
0x2222	0x1840    ADDS	R0, R0, R1
0x2224	0x9009    STR	R0, [SP, #36]
0x2226	0x4855    LDR	R0, [PC, #340]
0x2228	0xF9B00000  LDRSH	R0, [R0, #0]
0x222C	0xF7FFFDE8  BL	__SignedIntegralToFloat+0
0x2230	0x4601    MOV	R1, R0
0x2232	0xF04F4080  MOV	R0, #1073741824
0x2236	0xF7FFFD89  BL	__irgrid_driver__pow+0
0x223A	0x9909    LDR	R1, [SP, #36]
0x223C	0x9009    STR	R0, [SP, #36]
0x223E	0x7808    LDRB	R0, [R1, #0]
0x2240	0xF7FFFB62  BL	__UnsignedIntegralToFloat+0
0x2244	0x9A09    LDR	R2, [SP, #36]
0x2246	0xF7FFFC07  BL	__Mul_FP+0
0x224A	0x9A0A    LDR	R2, [SP, #40]
0x224C	0xF7FFFB72  BL	__Add_FP+0
0x2250	0x9009    STR	R0, [SP, #36]
0x2252	0x4847    LDR	R0, [PC, #284]
0x2254	0xF9B00000  LDRSH	R0, [R0, #0]
0x2258	0xF1C00003  RSB	R0, R0, #3
0x225C	0xB200    SXTH	R0, R0
0x225E	0xF7FFFDCF  BL	__SignedIntegralToFloat+0
0x2262	0x4601    MOV	R1, R0
0x2264	0xF04F4080  MOV	R0, #1073741824
0x2268	0xF7FFFD70  BL	__irgrid_driver__pow+0
0x226C	0x9005    STR	R0, [SP, #20]
0x226E	0x9A05    LDR	R2, [SP, #20]
0x2270	0x9809    LDR	R0, [SP, #36]
0x2272	0xF7FEFA79  BL	__Div_FP+0
0x2276	0x990B    LDR	R1, [SP, #44]
0x2278	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 572 :: 		_b_data[i] = _eeprom_data[0x40 + i];
0x227A	0xF8BD0004  LDRH	R0, [SP, #4]
0x227E	0x0081    LSLS	R1, R0, #2
0x2280	0x484C    LDR	R0, [PC, #304]
0x2282	0x1840    ADDS	R0, R0, R1
0x2284	0x9009    STR	R0, [SP, #36]
0x2286	0xF8BD0004  LDRH	R0, [SP, #4]
0x228A	0xF2000140  ADDW	R1, R0, #64
0x228E	0xB289    UXTH	R1, R1
0x2290	0x4847    LDR	R0, [PC, #284]
0x2292	0x1840    ADDS	R0, R0, R1
0x2294	0x7800    LDRB	R0, [R0, #0]
0x2296	0xF7FFFB37  BL	__UnsignedIntegralToFloat+0
0x229A	0x9909    LDR	R1, [SP, #36]
0x229C	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 574 :: 		if (_b_data[i] > 127)
0x229E	0xF8BD0004  LDRH	R0, [SP, #4]
0x22A2	0x0081    LSLS	R1, R0, #2
0x22A4	0x4843    LDR	R0, [PC, #268]
0x22A6	0x1840    ADDS	R0, R0, R1
0x22A8	0x6802    LDR	R2, [R0, #0]
0x22AA	0x4843    LDR	R0, [PC, #268]
0x22AC	0xF7FFFDC8  BL	__Compare_FP+0
0x22B0	0xF2400000  MOVW	R0, #0
0x22B4	0xDA00    BGE	L___irgrid_driver__calc_to108
0x22B6	0x2001    MOVS	R0, #1
L___irgrid_driver__calc_to108:
0x22B8	0xB160    CBZ	R0, L___irgrid_driver__calc_to52
;__irgrid_driver.c, 576 :: 		_b_data[i] -= 256;
0x22BA	0xF8BD0004  LDRH	R0, [SP, #4]
0x22BE	0x0081    LSLS	R1, R0, #2
0x22C0	0x483C    LDR	R0, [PC, #240]
0x22C2	0x1840    ADDS	R0, R0, R1
0x22C4	0x9009    STR	R0, [SP, #36]
0x22C6	0x6800    LDR	R0, [R0, #0]
0x22C8	0xF04F4287  MOV	R2, #1132462080
0x22CC	0xF7FFFE0E  BL	__Sub_FP+0
0x22D0	0x9909    LDR	R1, [SP, #36]
0x22D2	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 577 :: 		}
L___irgrid_driver__calc_to52:
;__irgrid_driver.c, 579 :: 		_b_data[i] = _b_data[i] / (_pow(2, b_i_scale) * _pow(2, (3 - resolution)));
0x22D4	0xF8BD0004  LDRH	R0, [SP, #4]
0x22D8	0x0081    LSLS	R1, R0, #2
0x22DA	0x4836    LDR	R0, [PC, #216]
0x22DC	0x1840    ADDS	R0, R0, R1
0x22DE	0x900B    STR	R0, [SP, #44]
0x22E0	0x6800    LDR	R0, [R0, #0]
0x22E2	0x900A    STR	R0, [SP, #40]
0x22E4	0x4826    LDR	R0, [PC, #152]
0x22E6	0xF9B00000  LDRSH	R0, [R0, #0]
0x22EA	0xF7FFFD89  BL	__SignedIntegralToFloat+0
0x22EE	0x4601    MOV	R1, R0
0x22F0	0xF04F4080  MOV	R0, #1073741824
0x22F4	0xF7FFFD2A  BL	__irgrid_driver__pow+0
0x22F8	0x9009    STR	R0, [SP, #36]
0x22FA	0x481D    LDR	R0, [PC, #116]
0x22FC	0xF9B00000  LDRSH	R0, [R0, #0]
0x2300	0xF1C00003  RSB	R0, R0, #3
0x2304	0xB200    SXTH	R0, R0
0x2306	0xF7FFFD7B  BL	__SignedIntegralToFloat+0
0x230A	0x4601    MOV	R1, R0
0x230C	0xF04F4080  MOV	R0, #1073741824
0x2310	0xF7FFFD1C  BL	__irgrid_driver__pow+0
0x2314	0x9A09    LDR	R2, [SP, #36]
0x2316	0xF7FFFB9F  BL	__Mul_FP+0
0x231A	0x9005    STR	R0, [SP, #20]
0x231C	0x9A05    LDR	R2, [SP, #20]
0x231E	0x980A    LDR	R0, [SP, #40]
0x2320	0xF7FEFA22  BL	__Div_FP+0
0x2324	0x990B    LDR	R1, [SP, #44]
0x2326	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 580 :: 		vir_offset_compensated = _ir_data[i] - (_a_data[i] + _b_data[i] * (_temperature_amb - 25.0));
0x2328	0xF8BD0004  LDRH	R0, [SP, #4]
0x232C	0x0041    LSLS	R1, R0, #1
0x232E	0x4823    LDR	R0, [PC, #140]
0x2330	0x1840    ADDS	R0, R0, R1
0x2332	0xF9B00000  LDRSH	R0, [R0, #0]
0x2336	0xF8AD0030  STRH	R0, [SP, #48]
0x233A	0xF8BD0004  LDRH	R0, [SP, #4]
0x233E	0x0081    LSLS	R1, R0, #2
0x2340	0x910B    STR	R1, [SP, #44]
0x2342	0x481A    LDR	R0, [PC, #104]
0x2344	0x1840    ADDS	R0, R0, R1
0x2346	0x6800    LDR	R0, [R0, #0]
0x2348	0x900A    STR	R0, [SP, #40]
0x234A	0xE039    B	#114
0x234C	0x03852000  	__irgrid_driver__eeprom_data+229
0x2350	0x03842000  	__irgrid_driver__eeprom_data+228
0x2354	0x029C2000  	__irgrid_driver_emissivity+0
0x2358	0x03712000  	__irgrid_driver__eeprom_data+209
0x235C	0x03702000  	__irgrid_driver__eeprom_data+208
0x2360	0x019A2000  	__irgrid_driver_a_common+0
0x2364	0x03772000  	__irgrid_driver__eeprom_data+215
0x2368	0x03762000  	__irgrid_driver__eeprom_data+214
0x236C	0x03822000  	__irgrid_driver__eeprom_data+226
0x2370	0x03A42000  	__irgrid_driver_resolution+0
0x2374	0x03A02000  	__irgrid_driver_alpha_cp+0
0x2378	0x03792000  	__irgrid_driver__eeprom_data+217
0x237C	0x03A62000  	__irgrid_driver_a_i_scale+0
0x2380	0x03A82000  	__irgrid_driver_b_i_scale+0
0x2384	0x03742000  	__irgrid_driver__eeprom_data+212
0x2388	0x03732000  	__irgrid_driver__eeprom_data+211
0x238C	0x03AC2000  	__irgrid_driver_a_cp+0
0x2390	0x03752000  	__irgrid_driver__eeprom_data+213
0x2394	0x03B02000  	__irgrid_driver_b_cp+0
0x2398	0x03782000  	__irgrid_driver__eeprom_data+216
0x239C	0x03B42000  	__irgrid_driver_tgc+0
0x23A0	0x01982000  	__irgrid_driver_cpix+0
0x23A4	0x03B82000  	__irgrid_driver__temperature_amb+0
0x23A8	0x000041C8  	#1103626240
0x23AC	0x03BC2000  	__irgrid_driver__a_data+0
0x23B0	0x02A02000  	__irgrid_driver__eeprom_data+0
0x23B4	0x04BC2000  	__irgrid_driver__b_data+0
0x23B8	0x000042FE  	#1123942400
0x23BC	0x05BC2000  	__irgrid_driver__ir_data+0
0x23C0	0x4867    LDR	R0, [PC, #412]
0x23C2	0x1840    ADDS	R0, R0, R1
0x23C4	0x9009    STR	R0, [SP, #36]
0x23C6	0x4867    LDR	R0, [PC, #412]
0x23C8	0x6800    LDR	R0, [R0, #0]
0x23CA	0x4A67    LDR	R2, [PC, #412]
0x23CC	0xF7FFFD8E  BL	__Sub_FP+0
0x23D0	0x9909    LDR	R1, [SP, #36]
0x23D2	0x680A    LDR	R2, [R1, #0]
0x23D4	0xF7FFFB40  BL	__Mul_FP+0
0x23D8	0x9A0A    LDR	R2, [SP, #40]
0x23DA	0xF7FFFAAB  BL	__Add_FP+0
0x23DE	0xF9BD1030  LDRSH	R1, [SP, #48]
0x23E2	0x9009    STR	R0, [SP, #36]
0x23E4	0xB208    SXTH	R0, R1
0x23E6	0xF7FFFD0B  BL	__SignedIntegralToFloat+0
0x23EA	0x9A09    LDR	R2, [SP, #36]
0x23EC	0xF7FFFD7E  BL	__Sub_FP+0
; vir_offset_compensated start address is: 32 (R8)
0x23F0	0x4680    MOV	R8, R0
;__irgrid_driver.c, 581 :: 		vir_tgc_compensated = vir_offset_compensated - tgc * vcp_offset_compensated;
0x23F2	0x9A02    LDR	R2, [SP, #8]
0x23F4	0x485D    LDR	R0, [PC, #372]
0x23F6	0x6800    LDR	R0, [R0, #0]
0x23F8	0xF7FFFB2E  BL	__Mul_FP+0
0x23FC	0x9005    STR	R0, [SP, #20]
0x23FE	0x9A05    LDR	R2, [SP, #20]
0x2400	0x4640    MOV	R0, R8
0x2402	0xF7FFFD73  BL	__Sub_FP+0
; vir_offset_compensated end address is: 32 (R8)
0x2406	0x9003    STR	R0, [SP, #12]
;__irgrid_driver.c, 582 :: 		_alpha_a_data[i] = ((256 * _eeprom_data[_IRGRID_CAL_A0_H] + _eeprom_data[_IRGRID_CAL_A0_L]) / _pow(2, _eeprom_data[_IRGRID_CAL_A0_SCALE]));
0x2408	0x4959    LDR	R1, [PC, #356]
0x240A	0x980B    LDR	R0, [SP, #44]
0x240C	0x1808    ADDS	R0, R1, R0
0x240E	0x900A    STR	R0, [SP, #40]
0x2410	0x4858    LDR	R0, [PC, #352]
0x2412	0x7800    LDRB	R0, [R0, #0]
0x2414	0x0201    LSLS	R1, R0, #8
0x2416	0xB209    SXTH	R1, R1
0x2418	0x4857    LDR	R0, [PC, #348]
0x241A	0x7800    LDRB	R0, [R0, #0]
0x241C	0x1808    ADDS	R0, R1, R0
0x241E	0xF8AD0024  STRH	R0, [SP, #36]
0x2422	0x4856    LDR	R0, [PC, #344]
0x2424	0x7800    LDRB	R0, [R0, #0]
0x2426	0xF7FFFA6F  BL	__UnsignedIntegralToFloat+0
0x242A	0x4601    MOV	R1, R0
0x242C	0xF04F4080  MOV	R0, #1073741824
0x2430	0xF7FFFC8C  BL	__irgrid_driver__pow+0
0x2434	0xF9BD1024  LDRSH	R1, [SP, #36]
0x2438	0x9009    STR	R0, [SP, #36]
0x243A	0xB208    SXTH	R0, R1
0x243C	0xF7FFFCE0  BL	__SignedIntegralToFloat+0
0x2440	0x9A09    LDR	R2, [SP, #36]
0x2442	0xF7FEF991  BL	__Div_FP+0
0x2446	0x990A    LDR	R1, [SP, #40]
0x2448	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 583 :: 		_alpha_a_data[i] += (_eeprom_data[0x80 + i] / _pow(2, _eeprom_data[_IRGRID_CAL_DELTA_A_SCALE]));
0x244A	0xF8BD0004  LDRH	R0, [SP, #4]
0x244E	0x0081    LSLS	R1, R0, #2
0x2450	0x4847    LDR	R0, [PC, #284]
0x2452	0x1840    ADDS	R0, R0, R1
0x2454	0x900A    STR	R0, [SP, #40]
0x2456	0xF8BD0004  LDRH	R0, [SP, #4]
0x245A	0xF2000180  ADDW	R1, R0, #128
0x245E	0xB289    UXTH	R1, R1
0x2460	0x4847    LDR	R0, [PC, #284]
0x2462	0x1840    ADDS	R0, R0, R1
0x2464	0x7800    LDRB	R0, [R0, #0]
0x2466	0xF88D0024  STRB	R0, [SP, #36]
0x246A	0x4846    LDR	R0, [PC, #280]
0x246C	0x7800    LDRB	R0, [R0, #0]
0x246E	0xF7FFFA4B  BL	__UnsignedIntegralToFloat+0
0x2472	0x4601    MOV	R1, R0
0x2474	0xF04F4080  MOV	R0, #1073741824
0x2478	0xF7FFFC68  BL	__irgrid_driver__pow+0
0x247C	0xF89D1024  LDRB	R1, [SP, #36]
0x2480	0x9009    STR	R0, [SP, #36]
0x2482	0xB2C8    UXTB	R0, R1
0x2484	0xF7FFFA40  BL	__UnsignedIntegralToFloat+0
0x2488	0x9A09    LDR	R2, [SP, #36]
0x248A	0xF7FEF96D  BL	__Div_FP+0
0x248E	0x990A    LDR	R1, [SP, #40]
0x2490	0x680A    LDR	R2, [R1, #0]
0x2492	0xF7FFFA4F  BL	__Add_FP+0
0x2496	0x990A    LDR	R1, [SP, #40]
0x2498	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 584 :: 		_alpha_a_data[i] = _alpha_a_data[i] / _pow(2, 3 - resolution);
0x249A	0xF8BD0004  LDRH	R0, [SP, #4]
0x249E	0x0081    LSLS	R1, R0, #2
0x24A0	0x4833    LDR	R0, [PC, #204]
0x24A2	0x1840    ADDS	R0, R0, R1
0x24A4	0x900A    STR	R0, [SP, #40]
0x24A6	0x6800    LDR	R0, [R0, #0]
0x24A8	0x9009    STR	R0, [SP, #36]
0x24AA	0x4837    LDR	R0, [PC, #220]
0x24AC	0xF9B00000  LDRSH	R0, [R0, #0]
0x24B0	0xF1C00003  RSB	R0, R0, #3
0x24B4	0xB200    SXTH	R0, R0
0x24B6	0xF7FFFCA3  BL	__SignedIntegralToFloat+0
0x24BA	0x4601    MOV	R1, R0
0x24BC	0xF04F4080  MOV	R0, #1073741824
0x24C0	0xF7FFFC44  BL	__irgrid_driver__pow+0
0x24C4	0x9005    STR	R0, [SP, #20]
0x24C6	0x9A05    LDR	R2, [SP, #20]
0x24C8	0x9809    LDR	R0, [SP, #36]
0x24CA	0xF7FEF94D  BL	__Div_FP+0
0x24CE	0x990A    LDR	R1, [SP, #40]
0x24D0	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 585 :: 		vir_normal = vir_tgc_compensated / (_alpha_a_data[i] - tgc * alpha_cp);
0x24D2	0xF8BD0004  LDRH	R0, [SP, #4]
0x24D6	0x0081    LSLS	R1, R0, #2
0x24D8	0x910A    STR	R1, [SP, #40]
0x24DA	0x4825    LDR	R0, [PC, #148]
0x24DC	0x1840    ADDS	R0, R0, R1
0x24DE	0x6800    LDR	R0, [R0, #0]
0x24E0	0x9009    STR	R0, [SP, #36]
0x24E2	0x482A    LDR	R0, [PC, #168]
0x24E4	0x6802    LDR	R2, [R0, #0]
0x24E6	0x4821    LDR	R0, [PC, #132]
0x24E8	0x6800    LDR	R0, [R0, #0]
0x24EA	0xF7FFFAB5  BL	__Mul_FP+0
0x24EE	0x9005    STR	R0, [SP, #20]
0x24F0	0x9A05    LDR	R2, [SP, #20]
0x24F2	0x9809    LDR	R0, [SP, #36]
0x24F4	0xF7FFFCFA  BL	__Sub_FP+0
0x24F8	0x9005    STR	R0, [SP, #20]
0x24FA	0x9A05    LDR	R2, [SP, #20]
0x24FC	0x9803    LDR	R0, [SP, #12]
0x24FE	0xF7FEF933  BL	__Div_FP+0
;__irgrid_driver.c, 586 :: 		vir_compensated = vir_normal / emissivity;
0x2502	0x4923    LDR	R1, [PC, #140]
0x2504	0x680A    LDR	R2, [R1, #0]
0x2506	0xF7FEF92F  BL	__Div_FP+0
0x250A	0x9004    STR	R0, [SP, #16]
;__irgrid_driver.c, 589 :: 		_temperature_data[i] = 329.5 - (_exp((_log((vir_compensated + _pow((_temperature_amb + 273.15), 4)))/4.0)));
0x250C	0x4921    LDR	R1, [PC, #132]
0x250E	0x980A    LDR	R0, [SP, #40]
0x2510	0x1808    ADDS	R0, R1, R0
0x2512	0x9009    STR	R0, [SP, #36]
0x2514	0x4813    LDR	R0, [PC, #76]
0x2516	0x6802    LDR	R2, [R0, #0]
0x2518	0x481F    LDR	R0, [PC, #124]
0x251A	0xF7FFFA0B  BL	__Add_FP+0
0x251E	0xF04F4181  MOV	R1, #1082130432
0x2522	0xF7FFFC13  BL	__irgrid_driver__pow+0
0x2526	0x9A04    LDR	R2, [SP, #16]
0x2528	0xF7FFFA04  BL	__Add_FP+0
0x252C	0xF7FFF9B0  BL	__irgrid_driver__log+0
0x2530	0xF04F4281  MOV	R2, #1082130432
0x2534	0xF7FEF918  BL	__Div_FP+0
0x2538	0xF7FFF910  BL	__irgrid_driver__exp+0
0x253C	0x9005    STR	R0, [SP, #20]
0x253E	0x9A05    LDR	R2, [SP, #20]
0x2540	0x4816    LDR	R0, [PC, #88]
0x2542	0xF7FFFCD3  BL	__Sub_FP+0
0x2546	0x9909    LDR	R1, [SP, #36]
0x2548	0x6008    STR	R0, [R1, #0]
;__irgrid_driver.c, 569 :: 		for (i = 0; i < 64; i++)
0x254A	0xF8BD0004  LDRH	R0, [SP, #4]
0x254E	0x1C40    ADDS	R0, R0, #1
0x2550	0xF8AD0004  STRH	R0, [SP, #4]
;__irgrid_driver.c, 590 :: 		}
0x2554	0xE651    B	L___irgrid_driver__calc_to49
L___irgrid_driver__calc_to50:
;__irgrid_driver.c, 591 :: 		}
L_end__calc_to:
0x2556	0xF8DDE000  LDR	LR, [SP, #0]
0x255A	0xB00D    ADD	SP, SP, #52
0x255C	0x4770    BX	LR
0x255E	0xBF00    NOP
0x2560	0x04BC2000  	__irgrid_driver__b_data+0
0x2564	0x03B82000  	__irgrid_driver__temperature_amb+0
0x2568	0x000041C8  	#1103626240
0x256C	0x03B42000  	__irgrid_driver_tgc+0
0x2570	0x063C2000  	__irgrid_driver__alpha_a_data+0
0x2574	0x03812000  	__irgrid_driver__eeprom_data+225
0x2578	0x03802000  	__irgrid_driver__eeprom_data+224
0x257C	0x03822000  	__irgrid_driver__eeprom_data+226
0x2580	0x02A02000  	__irgrid_driver__eeprom_data+0
0x2584	0x03832000  	__irgrid_driver__eeprom_data+227
0x2588	0x03A42000  	__irgrid_driver_resolution+0
0x258C	0x03A02000  	__irgrid_driver_alpha_cp+0
0x2590	0x029C2000  	__irgrid_driver_emissivity+0
0x2594	0x019C2000  	__irgrid_driver__temperature_data+0
0x2598	0x93334388  	#1133024051
0x259C	0xC00043A4  	#1134870528
; end of __irgrid_driver__calc_to
_irgrid_get_temperature:
;__irgrid_driver.c, 705 :: 		void irgrid_get_temperature(float *buffer)
; buffer start address is: 0 (R0)
0x2D40	0xB081    SUB	SP, SP, #4
0x2D42	0xF8CDE000  STR	LR, [SP, #0]
; buffer end address is: 0 (R0)
; buffer start address is: 0 (R0)
;__irgrid_driver.c, 707 :: 		memcpy(buffer, _temperature_data, sizeof(float) * 64);
0x2D46	0xF2401200  MOVW	R2, #256
0x2D4A	0xB212    SXTH	R2, R2
0x2D4C	0x4903    LDR	R1, [PC, #12]
; buffer end address is: 0 (R0)
0x2D4E	0xF7FFFC3B  BL	_memcpy+0
;__irgrid_driver.c, 708 :: 		}
L_end_irgrid_get_temperature:
0x2D52	0xF8DDE000  LDR	LR, [SP, #0]
0x2D56	0xB001    ADD	SP, SP, #4
0x2D58	0x4770    BX	LR
0x2D5A	0xBF00    NOP
0x2D5C	0x019C2000  	__irgrid_driver__temperature_data+0
; end of _irgrid_get_temperature
_memcpy:
;__Lib_CString.c, 44 :: 		
; n start address is: 8 (R2)
; s1 start address is: 4 (R1)
; d1 start address is: 0 (R0)
0x25C8	0xB081    SUB	SP, SP, #4
0x25CA	0x460B    MOV	R3, R1
0x25CC	0x4601    MOV	R1, R0
; n end address is: 8 (R2)
; s1 end address is: 4 (R1)
; d1 end address is: 0 (R0)
; d1 start address is: 4 (R1)
; s1 start address is: 12 (R3)
; n start address is: 8 (R2)
;__Lib_CString.c, 48 :: 		
; ss start address is: 0 (R0)
0x25CE	0x4618    MOV	R0, R3
; s1 end address is: 12 (R3)
;__Lib_CString.c, 49 :: 		
; dd start address is: 20 (R5)
0x25D0	0x460D    MOV	R5, R1
; d1 end address is: 4 (R1)
; dd end address is: 20 (R5)
; ss end address is: 0 (R0)
;__Lib_CString.c, 50 :: 		
L_memcpy7:
; dd start address is: 20 (R5)
; ss start address is: 0 (R0)
; n start address is: 8 (R2)
; d1 start address is: 4 (R1)
0x25D2	0xB214    SXTH	R4, R2
0x25D4	0x1E53    SUBS	R3, R2, #1
0x25D6	0xB21A    SXTH	R2, R3
; n end address is: 8 (R2)
0x25D8	0xB124    CBZ	R4, L_memcpy8
; n end address is: 8 (R2)
;__Lib_CString.c, 51 :: 		
; n start address is: 8 (R2)
0x25DA	0x7803    LDRB	R3, [R0, #0]
0x25DC	0x702B    STRB	R3, [R5, #0]
0x25DE	0x1C6D    ADDS	R5, R5, #1
0x25E0	0x1C40    ADDS	R0, R0, #1
; n end address is: 8 (R2)
; dd end address is: 20 (R5)
; ss end address is: 0 (R0)
0x25E2	0xE7F6    B	L_memcpy7
L_memcpy8:
;__Lib_CString.c, 53 :: 		
0x25E4	0x4608    MOV	R0, R1
; d1 end address is: 4 (R1)
;__Lib_CString.c, 54 :: 		
L_end_memcpy:
0x25E6	0xB001    ADD	SP, SP, #4
0x25E8	0x4770    BX	LR
; end of _memcpy
_FloatToStr:
;__Lib_Conversions.c, 631 :: 		
; str start address is: 4 (R1)
; fnum start address is: 0 (R0)
0x2D60	0xB082    SUB	SP, SP, #8
0x2D62	0xF8CDE000  STR	LR, [SP, #0]
0x2D66	0x4602    MOV	R2, R0
0x2D68	0x460C    MOV	R4, R1
; str end address is: 4 (R1)
; fnum end address is: 0 (R0)
; fnum start address is: 8 (R2)
; str start address is: 16 (R4)
;__Lib_Conversions.c, 633 :: 		
; bpoint start address is: 0 (R0)
0x2D6A	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 635 :: 		
; dexpon start address is: 4 (R1)
0x2D6C	0x2100    MOVS	R1, #0
0x2D6E	0xB249    SXTB	R1, R1
;__Lib_Conversions.c, 638 :: 		
0x2D70	0x9201    STR	R2, [SP, #4]
; fnum end address is: 8 (R2)
;__Lib_Conversions.c, 639 :: 		
0x2D72	0x9A01    LDR	R2, [SP, #4]
0x2D74	0xF1B23FFF  CMP	R2, #-1
0x2D78	0xD106    BNE	L_FloatToStr117
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 640 :: 		
0x2D7A	0x4A71    LDR	R2, [PC, #452]
0x2D7C	0x4611    MOV	R1, R2
0x2D7E	0x4620    MOV	R0, R4
; str end address is: 16 (R4)
0x2D80	0xF7FFFC0E  BL	_strcpy+0
;__Lib_Conversions.c, 641 :: 		
0x2D84	0x2003    MOVS	R0, #3
0x2D86	0xE0D7    B	L_end_FloatToStr
;__Lib_Conversions.c, 642 :: 		
L_FloatToStr117:
;__Lib_Conversions.c, 643 :: 		
; str start address is: 16 (R4)
; i start address is: 20 (R5)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x2D88	0x2501    MOVS	R5, #1
;__Lib_Conversions.c, 644 :: 		
0x2D8A	0xAA01    ADD	R2, SP, #4
0x2D8C	0x1CD2    ADDS	R2, R2, #3
0x2D8E	0x7812    LDRB	R2, [R2, #0]
0x2D90	0xF0020280  AND	R2, R2, #128
0x2D94	0xB2D2    UXTB	R2, R2
0x2D96	0xB172    CBZ	R2, L__FloatToStr179
;__Lib_Conversions.c, 645 :: 		
0x2D98	0xAA01    ADD	R2, SP, #4
0x2D9A	0x1CD3    ADDS	R3, R2, #3
0x2D9C	0x781A    LDRB	R2, [R3, #0]
0x2D9E	0xF0820280  EOR	R2, R2, #128
0x2DA2	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 646 :: 		
0x2DA4	0x1C6A    ADDS	R2, R5, #1
; i end address is: 20 (R5)
; i start address is: 12 (R3)
0x2DA6	0xB2D3    UXTB	R3, R2
;__Lib_Conversions.c, 647 :: 		
0x2DA8	0x222D    MOVS	R2, #45
0x2DAA	0x7022    STRB	R2, [R4, #0]
0x2DAC	0x1C62    ADDS	R2, R4, #1
0x2DAE	0x4614    MOV	R4, R2
; i end address is: 12 (R3)
; str end address is: 16 (R4)
0x2DB0	0xB2DE    UXTB	R6, R3
0x2DB2	0x46A2    MOV	R10, R4
;__Lib_Conversions.c, 648 :: 		
0x2DB4	0xE001    B	L_FloatToStr118
L__FloatToStr179:
;__Lib_Conversions.c, 644 :: 		
0x2DB6	0x46A2    MOV	R10, R4
0x2DB8	0xB2EE    UXTB	R6, R5
;__Lib_Conversions.c, 648 :: 		
L_FloatToStr118:
;__Lib_Conversions.c, 649 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
0x2DBA	0x9A01    LDR	R2, [SP, #4]
0x2DBC	0xB932    CBNZ	R2, L_FloatToStr119
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
; i end address is: 24 (R6)
;__Lib_Conversions.c, 650 :: 		
0x2DBE	0x4A61    LDR	R2, [PC, #388]
0x2DC0	0x4611    MOV	R1, R2
0x2DC2	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x2DC4	0xF7FFFBEC  BL	_strcpy+0
;__Lib_Conversions.c, 651 :: 		
0x2DC8	0x2000    MOVS	R0, #0
0x2DCA	0xE0B5    B	L_end_FloatToStr
;__Lib_Conversions.c, 652 :: 		
L_FloatToStr119:
;__Lib_Conversions.c, 653 :: 		
; str start address is: 40 (R10)
; i start address is: 24 (R6)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x2DCC	0x9A01    LDR	R2, [SP, #4]
0x2DCE	0xF1B24FFF  CMP	R2, #2139095040
0x2DD2	0xD106    BNE	L_FloatToStr120
; bpoint end address is: 0 (R0)
; dexpon end address is: 4 (R1)
;__Lib_Conversions.c, 654 :: 		
0x2DD4	0x4A5C    LDR	R2, [PC, #368]
0x2DD6	0x4611    MOV	R1, R2
0x2DD8	0x4650    MOV	R0, R10
; str end address is: 40 (R10)
0x2DDA	0xF7FFFBE1  BL	_strcpy+0
;__Lib_Conversions.c, 655 :: 		
0x2DDE	0xB2F0    UXTB	R0, R6
; i end address is: 24 (R6)
0x2DE0	0xE0AA    B	L_end_FloatToStr
;__Lib_Conversions.c, 656 :: 		
L_FloatToStr120:
;__Lib_Conversions.c, 664 :: 		
; str start address is: 40 (R10)
; dexpon start address is: 4 (R1)
; bpoint start address is: 0 (R0)
0x2DE2	0xFA5FF980  UXTB	R9, R0
; dexpon end address is: 4 (R1)
; str end address is: 40 (R10)
0x2DE6	0xFA4FF881  SXTB	R8, R1
L_FloatToStr121:
; bpoint end address is: 0 (R0)
; str start address is: 40 (R10)
; dexpon start address is: 32 (R8)
; bpoint start address is: 36 (R9)
0x2DEA	0x9A01    LDR	R2, [SP, #4]
0x2DEC	0xF04F507E  MOV	R0, #1065353216
0x2DF0	0xF7FFF826  BL	__Compare_FP+0
0x2DF4	0xF2400000  MOVW	R0, #0
0x2DF8	0xDD00    BLE	L__FloatToStr239
0x2DFA	0x2001    MOVS	R0, #1
L__FloatToStr239:
0x2DFC	0xB148    CBZ	R0, L_FloatToStr122
;__Lib_Conversions.c, 665 :: 		
0x2DFE	0x9A01    LDR	R2, [SP, #4]
0x2E00	0x4852    LDR	R0, [PC, #328]
0x2E02	0xF7FEFE29  BL	__Mul_FP+0
0x2E06	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 666 :: 		
0x2E08	0xF1A80801  SUB	R8, R8, #1
0x2E0C	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 667 :: 		
0x2E10	0xE7EB    B	L_FloatToStr121
L_FloatToStr122:
;__Lib_Conversions.c, 672 :: 		
; str end address is: 40 (R10)
; dexpon end address is: 32 (R8)
L_FloatToStr123:
; bpoint end address is: 36 (R9)
; bpoint start address is: 36 (R9)
; dexpon start address is: 32 (R8)
; str start address is: 40 (R10)
0x2E12	0x9A01    LDR	R2, [SP, #4]
0x2E14	0x484D    LDR	R0, [PC, #308]
0x2E16	0xF7FFF813  BL	__Compare_FP+0
0x2E1A	0xF2400000  MOVW	R0, #0
0x2E1E	0xDC00    BGT	L__FloatToStr240
0x2E20	0x2001    MOVS	R0, #1
L__FloatToStr240:
0x2E22	0xB148    CBZ	R0, L_FloatToStr124
;__Lib_Conversions.c, 673 :: 		
0x2E24	0x9A01    LDR	R2, [SP, #4]
0x2E26	0x484A    LDR	R0, [PC, #296]
0x2E28	0xF7FEFE16  BL	__Mul_FP+0
0x2E2C	0x9001    STR	R0, [SP, #4]
;__Lib_Conversions.c, 674 :: 		
0x2E2E	0xF1080801  ADD	R8, R8, #1
0x2E32	0xFA4FF888  SXTB	R8, R8
;__Lib_Conversions.c, 675 :: 		
0x2E36	0xE7EC    B	L_FloatToStr123
L_FloatToStr124:
;__Lib_Conversions.c, 680 :: 		
0x2E38	0x9A01    LDR	R2, [SP, #4]
0x2E3A	0x0052    LSLS	R2, R2, #1
0x2E3C	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 689 :: 		
0x2E3E	0xAA01    ADD	R2, SP, #4
0x2E40	0x1CD2    ADDS	R2, R2, #3
0x2E42	0x7812    LDRB	R2, [R2, #0]
0x2E44	0x3A7F    SUBS	R2, #127
; d start address is: 0 (R0)
0x2E46	0xB2D0    UXTB	R0, R2
;__Lib_Conversions.c, 692 :: 		
0x2E48	0xAA01    ADD	R2, SP, #4
0x2E4A	0x1CD3    ADDS	R3, R2, #3
0x2E4C	0x2201    MOVS	R2, #1
0x2E4E	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 693 :: 		
0x2E50	0x9A01    LDR	R2, [SP, #4]
0x2E52	0x4082    LSLS	R2, R0
; d end address is: 0 (R0)
0x2E54	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 694 :: 		
0x2E56	0xAA01    ADD	R2, SP, #4
0x2E58	0x1CD2    ADDS	R2, R2, #3
0x2E5A	0x7812    LDRB	R2, [R2, #0]
0x2E5C	0x3230    ADDS	R2, #48
0x2E5E	0xF88A2000  STRB	R2, [R10, #0]
0x2E62	0xF10A0001  ADD	R0, R10, #1
; str end address is: 40 (R10)
; str start address is: 0 (R0)
;__Lib_Conversions.c, 695 :: 		
0x2E66	0xF1B80F01  CMP	R8, #1
0x2E6A	0xDB06    BLT	L__FloatToStr178
0x2E6C	0xF1B80F06  CMP	R8, #6
0x2E70	0xDC03    BGT	L__FloatToStr177
0x2E72	0x4605    MOV	R5, R0
; bpoint end address is: 36 (R9)
0x2E74	0xFA5FF189  UXTB	R1, R9
0x2E78	0xE003    B	L_FloatToStr127
L__FloatToStr178:
L__FloatToStr177:
;__Lib_Conversions.c, 696 :: 		
0x2E7A	0x222E    MOVS	R2, #46
0x2E7C	0x7002    STRB	R2, [R0, #0]
0x2E7E	0x1C45    ADDS	R5, R0, #1
; str end address is: 0 (R0)
; str start address is: 20 (R5)
;__Lib_Conversions.c, 697 :: 		
; bpoint start address is: 4 (R1)
0x2E80	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 698 :: 		
L_FloatToStr127:
;__Lib_Conversions.c, 699 :: 		
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
; d start address is: 0 (R0)
0x2E82	0x2006    MOVS	R0, #6
; dexpon end address is: 32 (R8)
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x2E84	0xFA4FF488  SXTB	R4, R8
L_FloatToStr128:
; d start address is: 0 (R0)
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x2E88	0xB300    CBZ	R0, L_FloatToStr129
;__Lib_Conversions.c, 700 :: 		
0x2E8A	0xAA01    ADD	R2, SP, #4
0x2E8C	0x1CD3    ADDS	R3, R2, #3
0x2E8E	0x2200    MOVS	R2, #0
0x2E90	0x701A    STRB	R2, [R3, #0]
;__Lib_Conversions.c, 701 :: 		
0x2E92	0x9A01    LDR	R2, [SP, #4]
0x2E94	0x0093    LSLS	R3, R2, #2
0x2E96	0x9A01    LDR	R2, [SP, #4]
0x2E98	0x18D2    ADDS	R2, R2, R3
0x2E9A	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 702 :: 		
0x2E9C	0x9A01    LDR	R2, [SP, #4]
0x2E9E	0x0052    LSLS	R2, R2, #1
0x2EA0	0x9201    STR	R2, [SP, #4]
;__Lib_Conversions.c, 703 :: 		
0x2EA2	0xAA01    ADD	R2, SP, #4
0x2EA4	0x1CD2    ADDS	R2, R2, #3
0x2EA6	0x7812    LDRB	R2, [R2, #0]
0x2EA8	0x3230    ADDS	R2, #48
0x2EAA	0x702A    STRB	R2, [R5, #0]
0x2EAC	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 704 :: 		
0x2EAE	0xB951    CBNZ	R1, L__FloatToStr181
;__Lib_Conversions.c, 705 :: 		
0x2EB0	0x1E62    SUBS	R2, R4, #1
0x2EB2	0xB252    SXTB	R2, R2
; dexpon end address is: 16 (R4)
; dexpon start address is: 12 (R3)
0x2EB4	0xB253    SXTB	R3, R2
0x2EB6	0xB922    CBNZ	R2, L__FloatToStr180
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 706 :: 		
0x2EB8	0x222E    MOVS	R2, #46
0x2EBA	0x702A    STRB	R2, [R5, #0]
0x2EBC	0x1C6D    ADDS	R5, R5, #1
;__Lib_Conversions.c, 707 :: 		
; bpoint start address is: 4 (R1)
0x2EBE	0x2101    MOVS	R1, #1
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
;__Lib_Conversions.c, 708 :: 		
0x2EC0	0xE7FF    B	L_FloatToStr132
L__FloatToStr180:
;__Lib_Conversions.c, 705 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr132:
; bpoint start address is: 4 (R1)
; str start address is: 20 (R5)
0x2EC2	0xB25C    SXTB	R4, R3
; str end address is: 20 (R5)
; bpoint end address is: 4 (R1)
; dexpon end address is: 12 (R3)
0x2EC4	0xE7FF    B	L_FloatToStr131
L__FloatToStr181:
;__Lib_Conversions.c, 704 :: 		
;__Lib_Conversions.c, 708 :: 		
L_FloatToStr131:
;__Lib_Conversions.c, 699 :: 		
; str start address is: 20 (R5)
; bpoint start address is: 4 (R1)
; dexpon start address is: 16 (R4)
0x2EC6	0x1E40    SUBS	R0, R0, #1
0x2EC8	0xB2C0    UXTB	R0, R0
;__Lib_Conversions.c, 709 :: 		
; bpoint end address is: 4 (R1)
; d end address is: 0 (R0)
0x2ECA	0xE7DD    B	L_FloatToStr128
L_FloatToStr129:
;__Lib_Conversions.c, 710 :: 		
0x2ECC	0x4629    MOV	R1, R5
; dexpon end address is: 16 (R4)
0x2ECE	0xB260    SXTB	R0, R4
L_FloatToStr133:
; str end address is: 20 (R5)
; dexpon start address is: 0 (R0)
; str start address is: 4 (R1)
0x2ED0	0x1E4A    SUBS	R2, R1, #1
0x2ED2	0x7812    LDRB	R2, [R2, #0]
0x2ED4	0x2A30    CMP	R2, #48
0x2ED6	0xD101    BNE	L_FloatToStr134
;__Lib_Conversions.c, 711 :: 		
0x2ED8	0x1E49    SUBS	R1, R1, #1
0x2EDA	0xE7F9    B	L_FloatToStr133
L_FloatToStr134:
;__Lib_Conversions.c, 712 :: 		
0x2EDC	0x1E4A    SUBS	R2, R1, #1
0x2EDE	0x7812    LDRB	R2, [R2, #0]
0x2EE0	0x2A2E    CMP	R2, #46
0x2EE2	0xD101    BNE	L__FloatToStr182
;__Lib_Conversions.c, 713 :: 		
0x2EE4	0x1E49    SUBS	R1, R1, #1
; str end address is: 4 (R1)
0x2EE6	0xE7FF    B	L_FloatToStr135
L__FloatToStr182:
;__Lib_Conversions.c, 712 :: 		
;__Lib_Conversions.c, 713 :: 		
L_FloatToStr135:
;__Lib_Conversions.c, 714 :: 		
; str start address is: 4 (R1)
0x2EE8	0xB310    CBZ	R0, L__FloatToStr185
;__Lib_Conversions.c, 715 :: 		
0x2EEA	0x2265    MOVS	R2, #101
0x2EEC	0x700A    STRB	R2, [R1, #0]
0x2EEE	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 716 :: 		
0x2EF0	0x2800    CMP	R0, #0
0x2EF2	0xDA06    BGE	L__FloatToStr183
;__Lib_Conversions.c, 717 :: 		
0x2EF4	0x222D    MOVS	R2, #45
0x2EF6	0x700A    STRB	R2, [R1, #0]
0x2EF8	0x1C49    ADDS	R1, R1, #1
;__Lib_Conversions.c, 718 :: 		
0x2EFA	0x4242    RSBS	R2, R0, #0
0x2EFC	0xB250    SXTB	R0, R2
; dexpon end address is: 0 (R0)
; str end address is: 4 (R1)
0x2EFE	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
0x2F00	0xE000    B	L_FloatToStr137
L__FloatToStr183:
;__Lib_Conversions.c, 716 :: 		
0x2F02	0xB243    SXTB	R3, R0
;__Lib_Conversions.c, 719 :: 		
L_FloatToStr137:
;__Lib_Conversions.c, 720 :: 		
; dexpon start address is: 12 (R3)
; str start address is: 4 (R1)
; d start address is: 0 (R0)
0x2F04	0xB2D8    UXTB	R0, R3
;__Lib_Conversions.c, 721 :: 		
0x2F06	0xB2DA    UXTB	R2, R3
; dexpon end address is: 12 (R3)
0x2F08	0x2A09    CMP	R2, #9
0x2F0A	0xD907    BLS	L__FloatToStr184
;__Lib_Conversions.c, 722 :: 		
0x2F0C	0x220A    MOVS	R2, #10
0x2F0E	0xFBB0F2F2  UDIV	R2, R0, R2
0x2F12	0xB2D2    UXTB	R2, R2
0x2F14	0x3230    ADDS	R2, #48
0x2F16	0x700A    STRB	R2, [R1, #0]
0x2F18	0x1C49    ADDS	R1, R1, #1
; str end address is: 4 (R1)
0x2F1A	0xE7FF    B	L_FloatToStr138
L__FloatToStr184:
;__Lib_Conversions.c, 721 :: 		
;__Lib_Conversions.c, 722 :: 		
L_FloatToStr138:
;__Lib_Conversions.c, 723 :: 		
; str start address is: 4 (R1)
0x2F1C	0x230A    MOVS	R3, #10
0x2F1E	0xFBB0F2F3  UDIV	R2, R0, R3
0x2F22	0xFB030212  MLS	R2, R3, R2, R0
0x2F26	0xB2D2    UXTB	R2, R2
; d end address is: 0 (R0)
0x2F28	0x3230    ADDS	R2, #48
0x2F2A	0x700A    STRB	R2, [R1, #0]
0x2F2C	0x1C48    ADDS	R0, R1, #1
; str end address is: 4 (R1)
; str start address is: 0 (R0)
; str end address is: 0 (R0)
;__Lib_Conversions.c, 724 :: 		
0x2F2E	0xE000    B	L_FloatToStr136
L__FloatToStr185:
;__Lib_Conversions.c, 714 :: 		
0x2F30	0x4608    MOV	R0, R1
;__Lib_Conversions.c, 724 :: 		
L_FloatToStr136:
;__Lib_Conversions.c, 725 :: 		
; str start address is: 0 (R0)
0x2F32	0x2200    MOVS	R2, #0
0x2F34	0x7002    STRB	R2, [R0, #0]
; str end address is: 0 (R0)
;__Lib_Conversions.c, 726 :: 		
0x2F36	0x2000    MOVS	R0, #0
;__Lib_Conversions.c, 727 :: 		
L_end_FloatToStr:
0x2F38	0xF8DDE000  LDR	LR, [SP, #0]
0x2F3C	0xB002    ADD	SP, SP, #8
0x2F3E	0x4770    BX	LR
0x2F40	0x003D2000  	?lstr1___Lib_Conversions+0
0x2F44	0x00412000  	?lstr2___Lib_Conversions+0
0x2F48	0x00432000  	?lstr3___Lib_Conversions+0
0x2F4C	0x00004120  	#1092616192
0x2F50	0xCCCD3DCC  	#1036831949
; end of _FloatToStr
_strcpy:
;__Lib_CString.c, 133 :: 		
; from start address is: 4 (R1)
; to start address is: 0 (R0)
0x25A0	0xB081    SUB	SP, SP, #4
0x25A2	0x9100    STR	R1, [SP, #0]
0x25A4	0x4601    MOV	R1, R0
0x25A6	0x9800    LDR	R0, [SP, #0]
; from end address is: 4 (R1)
; to end address is: 0 (R0)
; to start address is: 4 (R1)
; from start address is: 0 (R0)
;__Lib_CString.c, 136 :: 		
; cp start address is: 12 (R3)
0x25A8	0x460B    MOV	R3, R1
; cp end address is: 12 (R3)
; to end address is: 4 (R1)
;__Lib_CString.c, 137 :: 		
L_strcpy34:
; cp start address is: 20 (R5)
; cp start address is: 12 (R3)
; from start address is: 0 (R0)
; to start address is: 4 (R1)
0x25AA	0x461C    MOV	R4, R3
0x25AC	0x1C5A    ADDS	R2, R3, #1
; cp end address is: 12 (R3)
; cp start address is: 20 (R5)
0x25AE	0x4615    MOV	R5, R2
; cp end address is: 20 (R5)
0x25B0	0x4603    MOV	R3, R0
0x25B2	0x1C42    ADDS	R2, R0, #1
0x25B4	0x4610    MOV	R0, R2
; from end address is: 0 (R0)
0x25B6	0x781A    LDRB	R2, [R3, #0]
0x25B8	0x7022    STRB	R2, [R4, #0]
0x25BA	0x7822    LDRB	R2, [R4, #0]
0x25BC	0xB10A    CBZ	R2, L_strcpy35
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
;__Lib_CString.c, 138 :: 		
; from start address is: 0 (R0)
; cp start address is: 20 (R5)
; cp end address is: 20 (R5)
; from end address is: 0 (R0)
0x25BE	0x462B    MOV	R3, R5
0x25C0	0xE7F3    B	L_strcpy34
L_strcpy35:
;__Lib_CString.c, 139 :: 		
0x25C2	0x4608    MOV	R0, R1
; to end address is: 4 (R1)
;__Lib_CString.c, 140 :: 		
L_end_strcpy:
0x25C4	0xB001    ADD	SP, SP, #4
0x25C6	0x4770    BX	LR
; end of _strcpy
_Ltrim:
;__Lib_Conversions.c, 531 :: 		
; string start address is: 0 (R0)
0x300C	0xB081    SUB	SP, SP, #4
0x300E	0x4601    MOV	R1, R0
; string end address is: 0 (R0)
; string start address is: 4 (R1)
;__Lib_Conversions.c, 535 :: 		
; trimmed start address is: 20 (R5)
0x3010	0xF2400500  MOVW	R5, #0
0x3014	0xB22D    SXTH	R5, R5
;__Lib_Conversions.c, 536 :: 		
; original start address is: 0 (R0)
0x3016	0x4608    MOV	R0, R1
;__Lib_Conversions.c, 537 :: 		
; p start address is: 16 (R4)
0x3018	0x460C    MOV	R4, R1
; string end address is: 4 (R1)
; p end address is: 16 (R4)
; trimmed end address is: 20 (R5)
; original end address is: 0 (R0)
0x301A	0x460B    MOV	R3, R1
;__Lib_Conversions.c, 538 :: 		
0x301C	0xE7FF    B	L_Ltrim111
L__Ltrim175:
;__Lib_Conversions.c, 544 :: 		
;__Lib_Conversions.c, 538 :: 		
L_Ltrim111:
;__Lib_Conversions.c, 539 :: 		
; p start address is: 16 (R4)
; string start address is: 12 (R3)
; original start address is: 0 (R0)
; trimmed start address is: 20 (R5)
; string start address is: 12 (R3)
; string end address is: 12 (R3)
0x301E	0x7801    LDRB	R1, [R0, #0]
0x3020	0x2920    CMP	R1, #32
0x3022	0xD101    BNE	L__Ltrim174
; string end address is: 12 (R3)
; string start address is: 12 (R3)
0x3024	0xB905    CBNZ	R5, L__Ltrim173
; trimmed end address is: 20 (R5)
0x3026	0xE004    B	L_Ltrim116
L__Ltrim174:
L__Ltrim173:
;__Lib_Conversions.c, 540 :: 		
; trimmed start address is: 20 (R5)
0x3028	0x2501    MOVS	R5, #1
0x302A	0xB22D    SXTH	R5, R5
;__Lib_Conversions.c, 541 :: 		
0x302C	0x7801    LDRB	R1, [R0, #0]
0x302E	0x7021    STRB	R1, [R4, #0]
0x3030	0x1C64    ADDS	R4, R4, #1
; p end address is: 16 (R4)
; trimmed end address is: 20 (R5)
;__Lib_Conversions.c, 542 :: 		
L_Ltrim116:
;__Lib_Conversions.c, 544 :: 		
; p start address is: 16 (R4)
; trimmed start address is: 20 (R5)
0x3032	0x4602    MOV	R2, R0
0x3034	0x1C40    ADDS	R0, R0, #1
0x3036	0x7811    LDRB	R1, [R2, #0]
0x3038	0x2900    CMP	R1, #0
0x303A	0xD1F0    BNE	L__Ltrim175
; p end address is: 16 (R4)
; trimmed end address is: 20 (R5)
; original end address is: 0 (R0)
;__Lib_Conversions.c, 545 :: 		
0x303C	0x4618    MOV	R0, R3
; string end address is: 12 (R3)
;__Lib_Conversions.c, 546 :: 		
L_end_Ltrim:
0x303E	0xB001    ADD	SP, SP, #4
0x3040	0x4770    BX	LR
; end of _Ltrim
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 383 :: 		
0x32C8	0xB081    SUB	SP, SP, #4
0x32CA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 386 :: 		
; ulRCC_CR start address is: 8 (R2)
0x32CE	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 387 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x32D0	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 388 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x32D2	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 389 :: 		
; Fosc_kHz start address is: 4 (R1)
0x32D4	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 396 :: 		
0x32D6	0xF64B3080  MOVW	R0, #48000
0x32DA	0x4281    CMP	R1, R0
0x32DC	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 397 :: 		
0x32DE	0x4846    LDR	R0, [PC, #280]
0x32E0	0x6800    LDR	R0, [R0, #0]
0x32E2	0xF0400102  ORR	R1, R0, #2
0x32E6	0x4844    LDR	R0, [PC, #272]
0x32E8	0x6001    STR	R1, [R0, #0]
0x32EA	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC233
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 4 (R1)
0x32EC	0xF64550C0  MOVW	R0, #24000
0x32F0	0x4281    CMP	R1, R0
0x32F2	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 399 :: 		
0x32F4	0x4840    LDR	R0, [PC, #256]
0x32F6	0x6800    LDR	R0, [R0, #0]
0x32F8	0xF0400101  ORR	R1, R0, #1
0x32FC	0x483E    LDR	R0, [PC, #248]
0x32FE	0x6001    STR	R1, [R0, #0]
0x3300	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 401 :: 		
0x3302	0x483D    LDR	R0, [PC, #244]
0x3304	0x6801    LDR	R1, [R0, #0]
0x3306	0xF06F0007  MVN	R0, #7
0x330A	0x4001    ANDS	R1, R0
0x330C	0x483A    LDR	R0, [PC, #232]
0x330E	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC235:
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 403 :: 		
0x3310	0xF7FFFEB0  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 405 :: 		
0x3314	0x4839    LDR	R0, [PC, #228]
0x3316	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 406 :: 		
0x3318	0x4839    LDR	R0, [PC, #228]
0x331A	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 407 :: 		
0x331C	0x4839    LDR	R0, [PC, #228]
0x331E	0xEA020100  AND	R1, R2, R0, LSL #0
0x3322	0x4839    LDR	R0, [PC, #228]
0x3324	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 409 :: 		
0x3326	0xF0020001  AND	R0, R2, #1
0x332A	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC253
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x332C	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 410 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x332E	0x4836    LDR	R0, [PC, #216]
0x3330	0x6800    LDR	R0, [R0, #0]
0x3332	0xF0000002  AND	R0, R0, #2
0x3336	0x2800    CMP	R0, #0
0x3338	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC238
;__Lib_System_105_107.c, 411 :: 		
0x333A	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 412 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x333C	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
;__Lib_System_105_107.c, 409 :: 		
0x333E	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 412 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 414 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x3340	0xF4023080  AND	R0, R2, #65536
0x3344	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC254
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x3346	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 415 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x3348	0x482F    LDR	R0, [PC, #188]
0x334A	0x6800    LDR	R0, [R0, #0]
0x334C	0xF4003000  AND	R0, R0, #131072
0x3350	0x2800    CMP	R0, #0
0x3352	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC241
;__Lib_System_105_107.c, 416 :: 		
0x3354	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC240
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 417 :: 		
; ulRCC_CR end address is: 8 (R2)
0x3356	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 414 :: 		
0x3358	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 417 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
;__Lib_System_105_107.c, 419 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x335A	0xF0025080  AND	R0, R2, #268435456
0x335E	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
;__Lib_System_105_107.c, 420 :: 		
0x3360	0x4829    LDR	R0, [PC, #164]
0x3362	0x6800    LDR	R0, [R0, #0]
0x3364	0xF0405180  ORR	R1, R0, #268435456
0x3368	0x4827    LDR	R0, [PC, #156]
0x336A	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x336C	0x4826    LDR	R0, [PC, #152]
0x336E	0x6800    LDR	R0, [R0, #0]
0x3370	0xF0005000  AND	R0, R0, #536870912
0x3374	0x2800    CMP	R0, #0
0x3376	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC244
;__Lib_System_105_107.c, 422 :: 		
0x3378	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC243
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR end address is: 8 (R2)
0x337A	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 419 :: 		
;__Lib_System_105_107.c, 423 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
;__Lib_System_105_107.c, 425 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x337C	0xF0026080  AND	R0, R2, #67108864
0x3380	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
;__Lib_System_105_107.c, 426 :: 		
0x3382	0x4821    LDR	R0, [PC, #132]
0x3384	0x6800    LDR	R0, [R0, #0]
0x3386	0xF0406180  ORR	R1, R0, #67108864
0x338A	0x481F    LDR	R0, [PC, #124]
0x338C	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x338E	0x4611    MOV	R1, R2
0x3390	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC246:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x3392	0x481D    LDR	R0, [PC, #116]
0x3394	0x6800    LDR	R0, [R0, #0]
0x3396	0xF0006000  AND	R0, R0, #134217728
0x339A	0x2800    CMP	R0, #0
0x339C	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC247
;__Lib_System_105_107.c, 428 :: 		
0x339E	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC246
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x33A0	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 425 :: 		
0x33A2	0x4611    MOV	R1, R2
0x33A4	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x33A6	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x33AA	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 432 :: 		
0x33AC	0x4816    LDR	R0, [PC, #88]
0x33AE	0x6800    LDR	R0, [R0, #0]
0x33B0	0xF0407180  ORR	R1, R0, #16777216
0x33B4	0x4814    LDR	R0, [PC, #80]
0x33B6	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x33B8	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC249:
; ulRCC_CFGR start address is: 4 (R1)
0x33BA	0x4813    LDR	R0, [PC, #76]
0x33BC	0x6800    LDR	R0, [R0, #0]
0x33BE	0xF0007000  AND	R0, R0, #33554432
0x33C2	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC250
;__Lib_System_105_107.c, 434 :: 		
0x33C4	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC249
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 435 :: 		
0x33C6	0x460A    MOV	R2, R1
0x33C8	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 431 :: 		
;__Lib_System_105_107.c, 435 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
;__Lib_System_105_107.c, 439 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 8 (R2)
0x33CA	0x480C    LDR	R0, [PC, #48]
0x33CC	0x6800    LDR	R0, [R0, #0]
0x33CE	0xF000010C  AND	R1, R0, #12
0x33D2	0x0090    LSLS	R0, R2, #2
0x33D4	0xF000000C  AND	R0, R0, #12
0x33D8	0x4281    CMP	R1, R0
0x33DA	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x33DC	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 441 :: 		
L_end_InitialSetUpRCCRCC2:
0x33DE	0xF8DDE000  LDR	LR, [SP, #0]
0x33E2	0xB001    ADD	SP, SP, #4
0x33E4	0x4770    BX	LR
0x33E6	0xBF00    NOP
0x33E8	0x00810501  	#83951745
0x33EC	0x8402001D  	#1934338
0x33F0	0x06440001  	#67140
0x33F4	0x19400001  	#72000
0x33F8	0x20004002  	FLASH_ACR+0
0x33FC	0x10044002  	RCC_CFGR+0
0x3400	0x102C4002  	RCC_CFGR2+0
0x3404	0xFFFF000F  	#1048575
0x3408	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 356 :: 		
0x3074	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 359 :: 		
0x3076	0x4815    LDR	R0, [PC, #84]
0x3078	0x6800    LDR	R0, [R0, #0]
0x307A	0xF0400101  ORR	R1, R0, #1
0x307E	0x4813    LDR	R0, [PC, #76]
0x3080	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 362 :: 		
0x3082	0x4913    LDR	R1, [PC, #76]
0x3084	0x4813    LDR	R0, [PC, #76]
0x3086	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 365 :: 		
0x3088	0x4810    LDR	R0, [PC, #64]
0x308A	0x6801    LDR	R1, [R0, #0]
0x308C	0x4812    LDR	R0, [PC, #72]
0x308E	0x4001    ANDS	R1, R0
0x3090	0x480E    LDR	R0, [PC, #56]
0x3092	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 368 :: 		
0x3094	0x480D    LDR	R0, [PC, #52]
0x3096	0x6801    LDR	R1, [R0, #0]
0x3098	0xF46F2080  MVN	R0, #262144
0x309C	0x4001    ANDS	R1, R0
0x309E	0x480B    LDR	R0, [PC, #44]
0x30A0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 371 :: 		
0x30A2	0x480C    LDR	R0, [PC, #48]
0x30A4	0x6801    LDR	R1, [R0, #0]
0x30A6	0xF46F00FE  MVN	R0, #8323072
0x30AA	0x4001    ANDS	R1, R0
0x30AC	0x4809    LDR	R0, [PC, #36]
0x30AE	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 374 :: 		
0x30B0	0x4806    LDR	R0, [PC, #24]
0x30B2	0x6801    LDR	R1, [R0, #0]
0x30B4	0xF06F50A0  MVN	R0, #335544320
0x30B8	0x4001    ANDS	R1, R0
0x30BA	0x4804    LDR	R0, [PC, #16]
0x30BC	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 377 :: 		
0x30BE	0xF04F0100  MOV	R1, #0
0x30C2	0x4806    LDR	R0, [PC, #24]
0x30C4	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
L_end_SystemClockSetDefault:
0x30C6	0xB001    ADD	SP, SP, #4
0x30C8	0x4770    BX	LR
0x30CA	0xBF00    NOP
0x30CC	0x10004002  	RCC_CR+0
0x30D0	0x0000F0FF  	#-251723776
0x30D4	0x10044002  	RCC_CFGR+0
0x30D8	0xFFFFFEF6  	#-17367041
0x30DC	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 443 :: 		
0x32AC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 444 :: 		
0x32AE	0x4902    LDR	R1, [PC, #8]
0x32B0	0x4802    LDR	R0, [PC, #8]
0x32B2	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpFosc:
0x32B4	0xB001    ADD	SP, SP, #4
0x32B6	0x4770    BX	LR
0x32B8	0x19400001  	#72000
0x32BC	0x075C2000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 307 :: 		
0x32C0	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 308 :: 		
L___GenExcept28:
0x32C2	0xE7FE    B	L___GenExcept28
;__Lib_System_105_107.c, 309 :: 		
L_end___GenExcept:
0x32C4	0xB001    ADD	SP, SP, #4
0x32C6	0x4770    BX	LR
; end of ___GenExcept
0x36FC	0xB500    PUSH	(R14)
0x36FE	0xF8DFB024  LDR	R11, [PC, #36]
0x3702	0xF8DFA024  LDR	R10, [PC, #36]
0x3706	0xF8DFC024  LDR	R12, [PC, #36]
0x370A	0xF7FFFDA7  BL	12892
0x370E	0xF8DFB020  LDR	R11, [PC, #32]
0x3712	0xF8DFA020  LDR	R10, [PC, #32]
0x3716	0xF8DFC020  LDR	R12, [PC, #32]
0x371A	0xF7FFFD9F  BL	12892
0x371E	0xBD00    POP	(R15)
0x3720	0x4770    BX	LR
0x3722	0xBF00    NOP
0x3724	0x00002000  	#536870912
0x3728	0x00472000  	#536870983
0x372C	0x363C0000  	#13884
0x3730	0x00482000  	#536870984
0x3734	0x00542000  	#536870996
0x3738	0x36E00000  	#14048
0x3798	0xB500    PUSH	(R14)
0x379A	0xF8DFB010  LDR	R11, [PC, #16]
0x379E	0xF8DFA010  LDR	R10, [PC, #16]
0x37A2	0xF7FFFD65  BL	12912
0x37A6	0xBD00    POP	(R15)
0x37A8	0x4770    BX	LR
0x37AA	0xBF00    NOP
0x37AC	0x00002000  	#536870912
0x37B0	0x07882000  	#536872840
;Click_IR_Grid_STM.c,19 :: __IRGRID_I2C_CFG [4]
0x3174	0x000186A0 ;__IRGRID_I2C_CFG+0
; end of __IRGRID_I2C_CFG
;__Lib_GPIO_32F10x_Defs.c,696 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x342C	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x3430	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x3434	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x3438	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x343C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x3440	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x3444	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x3448	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x344C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x3450	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x3454	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x3458	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x345C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x3460	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x3464	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x3468	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x346C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x3470	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x3474	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x3478	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x347C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x3480	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x3484	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x3488	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x348C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x3490	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x3494	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,726 :: __GPIO_MODULE_USART3_PD89 [108]
0x3498	0x00000038 ;__GPIO_MODULE_USART3_PD89+0
0x349C	0x00000039 ;__GPIO_MODULE_USART3_PD89+4
0x34A0	0xFFFFFFFF ;__GPIO_MODULE_USART3_PD89+8
0x34A4	0x00000000 ;__GPIO_MODULE_USART3_PD89+12
0x34A8	0x00000000 ;__GPIO_MODULE_USART3_PD89+16
0x34AC	0x00000000 ;__GPIO_MODULE_USART3_PD89+20
0x34B0	0x00000000 ;__GPIO_MODULE_USART3_PD89+24
0x34B4	0x00000000 ;__GPIO_MODULE_USART3_PD89+28
0x34B8	0x00000000 ;__GPIO_MODULE_USART3_PD89+32
0x34BC	0x00000000 ;__GPIO_MODULE_USART3_PD89+36
0x34C0	0x00000000 ;__GPIO_MODULE_USART3_PD89+40
0x34C4	0x00000000 ;__GPIO_MODULE_USART3_PD89+44
0x34C8	0x00000000 ;__GPIO_MODULE_USART3_PD89+48
0x34CC	0x00000818 ;__GPIO_MODULE_USART3_PD89+52
0x34D0	0x00000018 ;__GPIO_MODULE_USART3_PD89+56
0x34D4	0x00000000 ;__GPIO_MODULE_USART3_PD89+60
0x34D8	0x00000000 ;__GPIO_MODULE_USART3_PD89+64
0x34DC	0x00000000 ;__GPIO_MODULE_USART3_PD89+68
0x34E0	0x00000000 ;__GPIO_MODULE_USART3_PD89+72
0x34E4	0x00000000 ;__GPIO_MODULE_USART3_PD89+76
0x34E8	0x00000000 ;__GPIO_MODULE_USART3_PD89+80
0x34EC	0x00000000 ;__GPIO_MODULE_USART3_PD89+84
0x34F0	0x00000000 ;__GPIO_MODULE_USART3_PD89+88
0x34F4	0x00000000 ;__GPIO_MODULE_USART3_PD89+92
0x34F8	0x00000000 ;__GPIO_MODULE_USART3_PD89+96
0x34FC	0x00000000 ;__GPIO_MODULE_USART3_PD89+100
0x3500	0x08140030 ;__GPIO_MODULE_USART3_PD89+104
; end of __GPIO_MODULE_USART3_PD89
;__Lib_GPIO_32F10x_Defs.c,680 :: __GPIO_MODULE_I2C1_PB67 [108]
0x3504	0x00000016 ;__GPIO_MODULE_I2C1_PB67+0
0x3508	0x00000017 ;__GPIO_MODULE_I2C1_PB67+4
0x350C	0xFFFFFFFF ;__GPIO_MODULE_I2C1_PB67+8
0x3510	0x00000000 ;__GPIO_MODULE_I2C1_PB67+12
0x3514	0x00000000 ;__GPIO_MODULE_I2C1_PB67+16
0x3518	0x00000000 ;__GPIO_MODULE_I2C1_PB67+20
0x351C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+24
0x3520	0x00000000 ;__GPIO_MODULE_I2C1_PB67+28
0x3524	0x00000000 ;__GPIO_MODULE_I2C1_PB67+32
0x3528	0x00000000 ;__GPIO_MODULE_I2C1_PB67+36
0x352C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+40
0x3530	0x00000000 ;__GPIO_MODULE_I2C1_PB67+44
0x3534	0x00000000 ;__GPIO_MODULE_I2C1_PB67+48
0x3538	0x00000828 ;__GPIO_MODULE_I2C1_PB67+52
0x353C	0x00000828 ;__GPIO_MODULE_I2C1_PB67+56
0x3540	0x00000000 ;__GPIO_MODULE_I2C1_PB67+60
0x3544	0x00000000 ;__GPIO_MODULE_I2C1_PB67+64
0x3548	0x00000000 ;__GPIO_MODULE_I2C1_PB67+68
0x354C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+72
0x3550	0x00000000 ;__GPIO_MODULE_I2C1_PB67+76
0x3554	0x00000000 ;__GPIO_MODULE_I2C1_PB67+80
0x3558	0x00000000 ;__GPIO_MODULE_I2C1_PB67+84
0x355C	0x00000000 ;__GPIO_MODULE_I2C1_PB67+88
0x3560	0x00000000 ;__GPIO_MODULE_I2C1_PB67+92
0x3564	0x00000000 ;__GPIO_MODULE_I2C1_PB67+96
0x3568	0x00000000 ;__GPIO_MODULE_I2C1_PB67+100
0x356C	0x00000002 ;__GPIO_MODULE_I2C1_PB67+104
; end of __GPIO_MODULE_I2C1_PB67
;__Lib_GPIO_32F10x_Defs.c,711 :: __GPIO_MODULE_USART2_PD56 [108]
0x3570	0x00000035 ;__GPIO_MODULE_USART2_PD56+0
0x3574	0x00000036 ;__GPIO_MODULE_USART2_PD56+4
0x3578	0xFFFFFFFF ;__GPIO_MODULE_USART2_PD56+8
0x357C	0x00000000 ;__GPIO_MODULE_USART2_PD56+12
0x3580	0x00000000 ;__GPIO_MODULE_USART2_PD56+16
0x3584	0x00000000 ;__GPIO_MODULE_USART2_PD56+20
0x3588	0x00000000 ;__GPIO_MODULE_USART2_PD56+24
0x358C	0x00000000 ;__GPIO_MODULE_USART2_PD56+28
0x3590	0x00000000 ;__GPIO_MODULE_USART2_PD56+32
0x3594	0x00000000 ;__GPIO_MODULE_USART2_PD56+36
0x3598	0x00000000 ;__GPIO_MODULE_USART2_PD56+40
0x359C	0x00000000 ;__GPIO_MODULE_USART2_PD56+44
0x35A0	0x00000000 ;__GPIO_MODULE_USART2_PD56+48
0x35A4	0x00000818 ;__GPIO_MODULE_USART2_PD56+52
0x35A8	0x00000018 ;__GPIO_MODULE_USART2_PD56+56
0x35AC	0x00000000 ;__GPIO_MODULE_USART2_PD56+60
0x35B0	0x00000000 ;__GPIO_MODULE_USART2_PD56+64
0x35B4	0x00000000 ;__GPIO_MODULE_USART2_PD56+68
0x35B8	0x00000000 ;__GPIO_MODULE_USART2_PD56+72
0x35BC	0x00000000 ;__GPIO_MODULE_USART2_PD56+76
0x35C0	0x00000000 ;__GPIO_MODULE_USART2_PD56+80
0x35C4	0x00000000 ;__GPIO_MODULE_USART2_PD56+84
0x35C8	0x00000000 ;__GPIO_MODULE_USART2_PD56+88
0x35CC	0x00000000 ;__GPIO_MODULE_USART2_PD56+92
0x35D0	0x00000000 ;__GPIO_MODULE_USART2_PD56+96
0x35D4	0x00000000 ;__GPIO_MODULE_USART2_PD56+100
0x35D8	0x08000008 ;__GPIO_MODULE_USART2_PD56+104
; end of __GPIO_MODULE_USART2_PD56
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x35DC	0x000004C5 ;__MIKROBUS1_GPIO+0
0x35E0	0x000004DD ;__MIKROBUS1_GPIO+4
0x35E4	0x000004D1 ;__MIKROBUS1_GPIO+8
0x35E8	0x000004A1 ;__MIKROBUS1_GPIO+12
0x35EC	0x00000471 ;__MIKROBUS1_GPIO+16
0x35F0	0x00000465 ;__MIKROBUS1_GPIO+20
0x35F4	0x0000047D ;__MIKROBUS1_GPIO+24
0x35F8	0x00000495 ;__MIKROBUS1_GPIO+28
0x35FC	0x00000489 ;__MIKROBUS1_GPIO+32
0x3600	0x000004AD ;__MIKROBUS1_GPIO+36
0x3604	0x000004B9 ;__MIKROBUS1_GPIO+40
0x3608	0x00000459 ;__MIKROBUS1_GPIO+44
0x360C	0xFFFFFFFF ;__MIKROBUS1_GPIO+48
0x3610	0xFFFFFFFF ;__MIKROBUS1_GPIO+52
0x3614	0xFFFFFFFF ;__MIKROBUS1_GPIO+56
0x3618	0xFFFFFFFF ;__MIKROBUS1_GPIO+60
0x361C	0xFFFFFFFF ;__MIKROBUS1_GPIO+64
0x3620	0xFFFFFFFF ;__MIKROBUS1_GPIO+68
0x3624	0xFFFFFFFF ;__MIKROBUS1_GPIO+72
0x3628	0xFFFFFFFF ;__MIKROBUS1_GPIO+76
0x362C	0xFFFFFFFF ;__MIKROBUS1_GPIO+80
0x3630	0xFFFFFFFF ;__MIKROBUS1_GPIO+84
0x3634	0xFFFFFFFF ;__MIKROBUS1_GPIO+88
0x3638	0xFFFFFFFF ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;Click_IR_Grid_STM.c,0 :: ?ICS?lstr1_Click_IR_Grid_STM [20]
0x363C	0x47205249 ;?ICS?lstr1_Click_IR_Grid_STM+0
0x3640	0x20444952 ;?ICS?lstr1_Click_IR_Grid_STM+4
0x3644	0x54494E49 ;?ICS?lstr1_Click_IR_Grid_STM+8
0x3648	0x494C4149 ;?ICS?lstr1_Click_IR_Grid_STM+12
0x364C	0x0044455A ;?ICS?lstr1_Click_IR_Grid_STM+16
; end of ?ICS?lstr1_Click_IR_Grid_STM
;,0 :: _initBlock_7 [51]
; Containing: ?ICS?lstr2_Click_IR_Grid_STM [31]
;             ?ICS?lstr3_Click_IR_Grid_STM [2]
;             ?ICS?lstr4_Click_IR_Grid_STM [2]
;             ?ICS?lstr5_Click_IR_Grid_STM [2]
;             ?ICS?lstr6_Click_IR_Grid_STM [2]
;             ?ICS?lstr7_Click_IR_Grid_STM [2]
;             ?ICS?lstr1___Lib_Conversions [4]
;             ?ICS?lstr2___Lib_Conversions [2]
;             ?ICS?lstr3___Lib_Conversions [4]
0x3650	0x47205249 ;_initBlock_7+0 : ?ICS?lstr2_Click_IR_Grid_STM at 0x3650
0x3654	0x20444952 ;_initBlock_7+4
0x3658	0x504D4554 ;_initBlock_7+8
0x365C	0x54415245 ;_initBlock_7+12
0x3660	0x20455255 ;_initBlock_7+16
0x3664	0x5553454D ;_initBlock_7+20
0x3668	0x454D4552 ;_initBlock_7+24
0x366C	0x0900544E ;_initBlock_7+28 : ?ICS?lstr3_Click_IR_Grid_STM at 0x366F
0x3670	0x20002000 ;_initBlock_7+32 : ?ICS?lstr4_Click_IR_Grid_STM at 0x3671 : ?ICS?lstr5_Click_IR_Grid_STM at 0x3673
0x3674	0x20002000 ;_initBlock_7+36 : ?ICS?lstr6_Click_IR_Grid_STM at 0x3675 : ?ICS?lstr7_Click_IR_Grid_STM at 0x3677
0x3678	0x4E614E00 ;_initBlock_7+40 : ?ICS?lstr1___Lib_Conversions at 0x3679
0x367C	0x49003000 ;_initBlock_7+44 : ?ICS?lstr2___Lib_Conversions at 0x367D : ?ICS?lstr3___Lib_Conversions at 0x367F
0x3680	0x00464E ;_initBlock_7+48
; end of _initBlock_7
;__irgrid_driver.c,270 :: __irgrid_driver__exp_coeff_L0 [40]
0x3684	0x3F800000 ;__irgrid_driver__exp_coeff_L0+0
0x3688	0x3F317218 ;__irgrid_driver__exp_coeff_L0+4
0x368C	0x3E75FDF0 ;__irgrid_driver__exp_coeff_L0+8
0x3690	0x3D635847 ;__irgrid_driver__exp_coeff_L0+12
0x3694	0x3C1D9558 ;__irgrid_driver__exp_coeff_L0+16
0x3698	0x3AAEC482 ;__irgrid_driver__exp_coeff_L0+20
0x369C	0x392178A8 ;__irgrid_driver__exp_coeff_L0+24
0x36A0	0x378093EF ;__irgrid_driver__exp_coeff_L0+28
0x36A4	0x35A792A0 ;__irgrid_driver__exp_coeff_L0+32
0x36A8	0x34155646 ;__irgrid_driver__exp_coeff_L0+36
; end of __irgrid_driver__exp_coeff_L0
;__irgrid_driver.c,308 :: __irgrid_driver__log_coeff_L0 [36]
0x36AC	0x2EDBE6FF ;__irgrid_driver__log_coeff_L0+0
0x36B0	0x3F7FFFC4 ;__irgrid_driver__log_coeff_L0+4
0x36B4	0xBEFFEF80 ;__irgrid_driver__log_coeff_L0+8
0x36B8	0x3EA9E190 ;__irgrid_driver__log_coeff_L0+12
0x36BC	0xBE7682EC ;__irgrid_driver__log_coeff_L0+16
0x36C0	0x3E2BAD82 ;__irgrid_driver__log_coeff_L0+20
0x36C4	0xBDC33C0E ;__irgrid_driver__log_coeff_L0+24
0x36C8	0x3D13D187 ;__irgrid_driver__log_coeff_L0+28
0x36CC	0xBBD37841 ;__irgrid_driver__log_coeff_L0+32
; end of __irgrid_driver__log_coeff_L0
;__Lib_System_105_107.c,447 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x36D0	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x36D4	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x36D8	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x36DC	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C1_TIMEOUT [4]
0x36E0	0x00000000 ;?ICS__Lib_I2C_12__I2C1_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C1_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2C2_TIMEOUT [4]
0x36E4	0x00000000 ;?ICS__Lib_I2C_12__I2C2_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2C2_TIMEOUT
;__Lib_I2C_12.c,0 :: ?ICS__Lib_I2C_12__I2Cx_TIMEOUT [4]
0x36E8	0x00000000 ;?ICS__Lib_I2C_12__I2Cx_TIMEOUT+0
; end of ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_I2C [12]
0x36EC	0x00001745 ;__MIKROBUS1_I2C+0
0x36F0	0x000013A1 ;__MIKROBUS1_I2C+4
0x36F4	0x000013C5 ;__MIKROBUS1_I2C+8
; end of __MIKROBUS1_I2C
;__Lib_System_105_107.c,448 :: __Lib_System_105_107_ADCPrescTable [4]
0x36F8	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150     [140]    _GPIO_Clk_Enable
0x01DC      [24]    _I2Cx_Is_Idle
0x01F4      [26]    _I2Cx_Get_Status
0x0210     [500]    _GPIO_Config
0x0404      [12]    easymx_v7_STM32F107VC__setAN_2
0x0410      [12]    easymx_v7_STM32F107VC__setRST_2
0x041C      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x0428      [12]    easymx_v7_STM32F107VC__setPWM_2
0x0434      [12]    easymx_v7_STM32F107VC__setMISO_2
0x0440      [12]    easymx_v7_STM32F107VC__setCS_2
0x044C      [12]    easymx_v7_STM32F107VC__setSCK_2
0x0458      [12]    easymx_v7_STM32F107VC__setSDA_1
0x0464      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x0470      [12]    easymx_v7_STM32F107VC__setMISO_1
0x047C      [12]    easymx_v7_STM32F107VC__setPWM_1
0x0488      [12]    easymx_v7_STM32F107VC__setRX_1
0x0494      [12]    easymx_v7_STM32F107VC__setINT_1
0x04A0      [12]    easymx_v7_STM32F107VC__setSCK_1
0x04AC      [12]    easymx_v7_STM32F107VC__setTX_1
0x04B8      [12]    easymx_v7_STM32F107VC__setSCL_1
0x04C4      [12]    easymx_v7_STM32F107VC__setAN_1
0x04D0      [12]    easymx_v7_STM32F107VC__setCS_1
0x04DC      [12]    easymx_v7_STM32F107VC__setRST_1
0x04E8      [36]    _ChekXForEvent
0x050C     [144]    __Lib_I2C_12_I2Cx_Wait_For_Idle
0x059C      [12]    _Get_Fosc_kHz
0x05A8     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x0640      [12]    easymx_v7_STM32F107VC__setSDA_2
0x064C      [12]    easymx_v7_STM32F107VC__setRX_2
0x0658      [12]    easymx_v7_STM32F107VC__setINT_2
0x0664      [12]    easymx_v7_STM32F107VC__setSCL_2
0x0670      [12]    easymx_v7_STM32F107VC__setTX_2
0x067C      [72]    __irgrid_driver__eval_poly
0x06C4      [38]    __irgrid_driver__frexp
0x06EC     [124]    __irgrid_driver__floor
0x0768     [164]    __Div_FP
0x080C     [108]    __irgrid_driver__ldexp
0x0878      [12]    __Lib_UART_123_45_UARTx_Data_Ready
0x0884      [22]    __Lib_UART_123_45_UARTx_Read
0x089C      [12]    __Lib_UART_123_45_UARTx_Tx_Idle
0x08A8    [1116]    _I2Cx_Read
0x0D04     [408]    _I2Cx_Write
0x0E9C     [168]    _RCC_GetClocksFrequency
0x0F44     [272]    _GPIO_Alternate_Function_Enable
0x1054     [204]    _I2Cx_Start
0x1120      [24]    _UART3_Read
0x1138      [24]    _UART2_Tx_Idle
0x1150      [24]    _UART3_Tx_Idle
0x1168      [24]    _UART3_Data_Ready
0x1180     [412]    _I2Cx_Init_Advanced
0x131C      [24]    _UART1_Tx_Idle
0x1334      [24]    _UART2_Data_Ready
0x134C      [24]    _UART2_Read
0x1364      [24]    _UART4_Read
0x137C      [36]    _I2C2_Write
0x13A0      [36]    _I2C1_Write
0x13C4      [36]    _I2C1_Read
0x13E8      [30]    __Lib_UART_123_45_UARTx_Write
0x1408      [36]    _I2C2_Read
0x142C      [24]    _UART4_Tx_Idle
0x1444      [24]    _UART4_Data_Ready
0x145C      [24]    _UART5_Read
0x1474      [24]    _UART5_Tx_Idle
0x148C      [24]    _UART5_Data_Ready
0x14A4      [24]    _UART1_Data_Ready
0x14BC      [66]    __FloatToSignedIntegral
0x1500     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x1744      [24]    _I2C1_Start
0x175C     [260]    __irgrid_driver__exp
0x1860      [24]    _I2C2_Start
0x1878      [24]    _UART1_Read
0x1890     [120]    __irgrid_driver__log
0x1908      [44]    __UnsignedIntegralToFloat
0x1934     [254]    __Add_FP
0x1A34      [36]    __irgrid_driver_hal_i2cRead
0x1A58     [138]    __Mul_FP
0x1AE4      [44]    __irgrid_driver_hal_i2cStart
0x1B10      [28]    _UART3_Write
0x1B2C      [28]    _UART4_Write
0x1B48      [28]    _UART5_Write
0x1B64      [96]    __irgrid_driver__get_cfg
0x1BC4      [28]    _UART1_Write
0x1BE0      [28]    _UART2_Write
0x1BFC      [40]    _UART1_Init_Advanced
0x1C24     [214]    __irgrid_driver__sqrt
0x1CFC      [40]    _UART3_Init_Advanced
0x1D24      [40]    _UART2_Init_Advanced
0x1D4C     [178]    __irgrid_driver__pow
0x1E00      [64]    __SignedIntegralToFloat
0x1E40     [104]    __Compare_FP
0x1EA8      [28]    _I2C1_Init_Advanced
0x1EC4      [40]    __irgrid_driver_hal_i2cWrite
0x1EEC     [258]    __Sub_FP
0x1FF0     [100]    __irgrid_driver__get_ptat
0x2054    [1356]    __irgrid_driver__calc_to
0x25A0      [40]    _strcpy
0x25C8      [34]    _memcpy
0x25EC     [164]    __irgrid_driver__get_ir
0x2690     [672]    __irgrid_driver__calc_ta
0x2930     [120]    __irgrid_driver__get_cpix
0x29A8      [56]    easymx_v7_STM32F107VC__log_initUartA
0x29E0      [56]    easymx_v7_STM32F107VC__log_init2
0x2A18      [56]    easymx_v7_STM32F107VC__log_init1
0x2A50      [56]    easymx_v7_STM32F107VC__log_initUartB
0x2A88       [2]    __irgrid_driver_hal_gpioMap
0x2A8C      [40]    __irgrid_driver_hal_i2cMap
0x2AB4      [64]    __irgrid_driver__get_eeprom
0x2AF4      [32]    easymx_v7_STM32F107VC__i2cInit_2
0x2B14     [184]    __irgrid_driver__set_cgf
0x2BCC      [32]    easymx_v7_STM32F107VC__log_write
0x2BEC      [76]    __irgrid_driver__set_trim
0x2C38      [32]    easymx_v7_STM32F107VC__i2cInit_1
0x2C58      [84]    _irgrid_deviceInit
0x2CAC      [94]    _irgrid_measure
0x2D0C      [52]    _irgrid_i2cDriverInit
0x2D40      [32]    _irgrid_get_temperature
0x2D60     [500]    _FloatToStr
0x2F54     [112]    _mikrobus_logWrite
0x2FC4      [70]    _mikrobus_logInit
0x300C      [54]    _Ltrim
0x3044      [48]    _mikrobus_i2cInit
0x3074     [108]    __Lib_System_105_107_SystemClockSetDefault
0x30E0      [88]    _applicationInit
0x3138      [60]    _systemInit
0x3178     [228]    _applicationTask
0x325C      [20]    ___CC2DW
0x3270      [58]    ___FillZeros
0x32AC      [20]    __Lib_System_105_107_InitialSetUpFosc
0x32C0       [8]    ___GenExcept
0x32C8     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
0x340C      [32]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000      [20]    ?lstr1_Click_IR_Grid_STM
0x20000014      [31]    ?lstr2_Click_IR_Grid_STM
0x20000033       [2]    ?lstr3_Click_IR_Grid_STM
0x20000035       [2]    ?lstr4_Click_IR_Grid_STM
0x20000037       [2]    ?lstr5_Click_IR_Grid_STM
0x20000039       [2]    ?lstr6_Click_IR_Grid_STM
0x2000003B       [2]    ?lstr7_Click_IR_Grid_STM
0x2000003D       [4]    ?lstr1___Lib_Conversions
0x20000041       [2]    ?lstr2___Lib_Conversions
0x20000043       [4]    ?lstr3___Lib_Conversions
0x20000047       [1]    __irgrid_driver__slaveRAM
0x20000048       [4]    __Lib_I2C_12__I2C1_TIMEOUT
0x2000004C       [4]    __Lib_I2C_12__I2C2_TIMEOUT
0x20000050       [4]    __Lib_I2C_12__I2Cx_TIMEOUT
0x20000054     [256]    _ir_tmp
0x20000154      [64]    _txt
0x20000194       [4]    _logger
0x20000198       [2]    __irgrid_driver_cpix
0x2000019A       [2]    __irgrid_driver_a_common
0x2000019C     [256]    __irgrid_driver__temperature_data
0x2000029C       [4]    __irgrid_driver_emissivity
0x200002A0     [256]    __irgrid_driver__eeprom_data
0x200003A0       [4]    __irgrid_driver_alpha_cp
0x200003A4       [2]    __irgrid_driver_resolution
0x200003A6       [2]    __irgrid_driver_a_i_scale
0x200003A8       [2]    __irgrid_driver_b_i_scale
0x200003AA       [2]    __irgrid_driver_k_t1_scale
0x200003AC       [4]    __irgrid_driver_a_cp
0x200003B0       [4]    __irgrid_driver_b_cp
0x200003B4       [4]    __irgrid_driver_tgc
0x200003B8       [4]    __irgrid_driver__temperature_amb
0x200003BC     [256]    __irgrid_driver__a_data
0x200004BC     [256]    __irgrid_driver__b_data
0x200005BC     [128]    __irgrid_driver__ir_data
0x2000063C     [256]    __irgrid_driver__alpha_a_data
0x2000073C       [2]    __irgrid_driver_k_t2_scale
0x2000073E       [2]    __irgrid_driver_ptat
0x20000740       [4]    __irgrid_driver_v_th
0x20000744       [4]    __irgrid_driver_k_t1
0x20000748       [4]    __irgrid_driver_k_t2
0x2000074C       [1]    __irgrid_driver__refresh_rate
0x2000074D       [1]    __irgrid_driver__slaveEEPROM
0x20000750       [4]    __irgrid_driver_fp_i2cWrite
0x20000754       [4]    __irgrid_driver_fp_i2cRead
0x20000758       [4]    __irgrid_driver_fp_i2cStart
0x2000075C       [4]    ___System_CLOCK_IN_KHZ
0x20000760       [4]    _I2Cx_Timeout_Ptr
0x20000764       [4]    _I2C1_Timeout_Ptr
0x20000768       [4]    _I2C2_Timeout_Ptr
0x2000076C       [4]    _I2C_Start_Ptr
0x20000770       [4]    _I2C_Read_Ptr
0x20000774       [4]    _I2C_Write_Ptr
0x20000778       [4]    _UART_Wr_Ptr
0x2000077C       [4]    _UART_Rd_Ptr
0x20000780       [4]    _UART_Rdy_Ptr
0x20000784       [4]    _UART_Tx_Idle_Ptr
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x3174       [4]    __IRGRID_I2C_CFG
0x342C     [108]    __GPIO_MODULE_USART1_PA9_10
0x3498     [108]    __GPIO_MODULE_USART3_PD89
0x3504     [108]    __GPIO_MODULE_I2C1_PB67
0x3570     [108]    __GPIO_MODULE_USART2_PD56
0x35DC      [96]    __MIKROBUS1_GPIO
0x363C      [20]    ?ICS?lstr1_Click_IR_Grid_STM
0x3650      [31]    ?ICS?lstr2_Click_IR_Grid_STM
0x366F       [2]    ?ICS?lstr3_Click_IR_Grid_STM
0x3671       [2]    ?ICS?lstr4_Click_IR_Grid_STM
0x3673       [2]    ?ICS?lstr5_Click_IR_Grid_STM
0x3675       [2]    ?ICS?lstr6_Click_IR_Grid_STM
0x3677       [2]    ?ICS?lstr7_Click_IR_Grid_STM
0x3679       [4]    ?ICS?lstr1___Lib_Conversions
0x367D       [2]    ?ICS?lstr2___Lib_Conversions
0x367F       [4]    ?ICS?lstr3___Lib_Conversions
0x3684      [40]    __irgrid_driver__exp_coeff_L0
0x36AC      [36]    __irgrid_driver__log_coeff_L0
0x36D0      [16]    __Lib_System_105_107_APBAHBPrescTable
0x36E0       [4]    ?ICS__Lib_I2C_12__I2C1_TIMEOUT
0x36E4       [4]    ?ICS__Lib_I2C_12__I2C2_TIMEOUT
0x36E8       [4]    ?ICS__Lib_I2C_12__I2Cx_TIMEOUT
0x36EC      [12]    __MIKROBUS1_I2C
0x36F8       [4]    __Lib_System_105_107_ADCPrescTable
